Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
 (aligned 16 1))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
 (aligned 16 1))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
 (aligned 16 1))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))))
Ran synthesizer for 24 ms
(model
 [idx$0 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
 (aligned 16 1))
#<load-data>
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
 (aligned 16 1))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
 (aligned 16 1))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
 (aligned 16 1))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))))
Ran synthesizer for 20 ms
(model
 [idx$65 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
 (aligned 16 1))
#<load-data>
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
 (aligned 16 1))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
 (aligned 16 1))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
 (aligned 16 1))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))))
Ran synthesizer for 20 ms
(model
 [idx$130 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
 (aligned 16 1))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
 (aligned 16 2))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
 (aligned 16 2))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
 (aligned 16 2))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))))
Ran synthesizer for 19 ms
(model
 [idx$195 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
 (aligned 16 2))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
 (aligned 16 2))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
 (aligned 16 2))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
 (aligned 16 2))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))))
Ran synthesizer for 17 ms
(model
 [idx$260 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
 (aligned 16 2))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
 (aligned 16 2))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
 (aligned 16 2))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
 (aligned 16 2))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))
Ran synthesizer for 19 ms
(model
 [idx$325 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
 (aligned 16 2))
#<load-data>
Ran bounds analysis for 21 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't26) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't26) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't26) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))))
Ran synthesizer for 18 ms
(model
 [idx$390 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't26) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 17 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't46) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't46) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't46) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))))
Ran synthesizer for 18 ms
(model
 [idx$455 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't46) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 18 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't25) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't25) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't25) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))
Ran synthesizer for 18 ms
(model
 [idx$520 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (var-lookup 't25) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 18 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't46) 16) 1 16)
  (aligned 16 0))
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't25) 16) 1 16)
  (aligned 16 0)))
"Fold templates"
'(#<load-data> #<load-data>)
here(#<load-data> #<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't46) 16) 1 16)
  (aligned 16 0))
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't25) 16) 1 16)
  (aligned 16 0)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't46) 16) 1 16)
  (aligned 16 0))
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't25) 16) 1 16)
  (aligned 16 0)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$585) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$585) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 82 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't46) 16) 1 16)
  (aligned 16 0))
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't25) 16) 1 16)
  (aligned 16 0)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't46) 16) 1 16)
  (aligned 16 0))
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't25) 16) 1 16)
  (aligned 16 0)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$649) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$649) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 84 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't46) 16) 1 16)
  (aligned 16 0))
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't25) 16) 1 16)
  (aligned 16 0)))
template:
  (maximum ... #<load-data> #<load-data>)
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$714 0) (app abstr-vals$713 0)) (app abstr-vals$713 0) (app abstr-vals$714 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$714 0) (app abstr-vals$713 0)) (app abstr-vals$713 0) (app abstr-vals$714 0)))
Ran synthesizer for 17 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum ... #<load-data> #<load-data>)
Ran bounds analysis for 21 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
(maximum ... #<load-data> #<load-data>)
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
"Fold templates"
'(#<load-data> #<load-data> #<load-data>)
here(#<load-data> #<load-data> #<load-data>)

"Replace templates"
(list (cast ... #<load-data> 'uint8 #t) (cast ... #<load-data> 'uint8 #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$717) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$717) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$717) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))))))
Ran synthesizer for 80 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$781) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$781) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$781) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))))))
Ran synthesizer for 83 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$845) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$845) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$845) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))))))
Ran synthesizer for 83 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  #<abstr-halide-expr>
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$909 0)) (app abstr-vals$909 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$909 0)) (app abstr-vals$909 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))
optimized x86 0:
  (uint8_t (app abstr-vals$909 0))
Ran synthesizer for 46 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  #<abstr-halide-expr>))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app abstr-vals$910 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$910 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$910 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$910 0))))
optimized x86 0:
  (uint8_t (app abstr-vals$910 0))
Ran synthesizer for 46 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (var-lookup 't26) 16) 1 16)
  (aligned 16 0))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't46) 16) 1 16)
   (aligned 16 0))
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't25) 16) 1 16)
   (aligned 16 0))))
template:
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$912 0) (app abstr-vals$911 0)) (app abstr-vals$911 0) (app abstr-vals$912 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$912 0) (app abstr-vals$911 0)) (app abstr-vals$911 0) (app abstr-vals$912 0)))
Ran synthesizer for 16 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
Ran bounds analysis for 22 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
"Fold templates"
'(#<load-data> #<load-data> #<load-data> #<load-data>)
here(#<load-data> #<load-data> #<load-data> #<load-data>)

"Replace templates"
(list
 (cast ... #<load-data> 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$915) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$915) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$915) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$915) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 91 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$979) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$979) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$979) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$979) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 92 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1043) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1043) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$1043) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1043) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 112 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1107) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1107) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$1107) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1107) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 110 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   #<abstr-halide-expr>
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1171 0)) (app abstr-vals$1171 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1171 0)) (app abstr-vals$1171 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1171 0)) (app abstr-vals$1171 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1171 0)) (app abstr-vals$1171 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1171 0))
Ran synthesizer for 58 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   #<abstr-halide-expr>)))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1172 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1172 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1172 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1172 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1172 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1172 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1172 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1172 0)))))
optimized x86 0:
  (uint8_t (app abstr-vals$1172 0))
Ran synthesizer for 55 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  #<abstr-halide-expr>
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1173 0)) (app abstr-vals$1173 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1173 0)) (app abstr-vals$1173 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1173 0))
Ran synthesizer for 54 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  #<abstr-halide-expr>))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app abstr-vals$1174 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1174 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1174 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1174 0))))
optimized x86 0:
  (uint8_t (app abstr-vals$1174 0))
Ran synthesizer for 51 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (var-lookup 't26) 16) 1 16)
   (aligned 16 0))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't46) 16) 1 16)
    (aligned 16 0))
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't25) 16) 1 16)
    (aligned 16 0)))))
template:
  (maximum
 ...
 #<load-data>
 (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1176 0) (app abstr-vals$1175 0)) (app abstr-vals$1175 0) (app abstr-vals$1176 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1176 0) (app abstr-vals$1175 0)) (app abstr-vals$1175 0) (app abstr-vals$1176 0)))
Ran synthesizer for 18 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 #<load-data>
 (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
Ran bounds analysis for 22 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(maximum
 ...
 #<load-data>
 (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
"Fold templates"
'(#<load-data> #<load-data> #<load-data>)
here(#<load-data> #<load-data> #<load-data>)

"Replace templates"
(list
 (cast ... #<load-data> 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
  'uint8
  #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1179) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1179) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$1179) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1179) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 4 idx$1179) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 99 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1243) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1243) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$1243) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1243) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 4 idx$1243) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 92 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1307) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1307) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 2 idx$1307) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1307) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 4 idx$1307) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 100 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    #<abstr-halide-expr>
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1371 0)) (app abstr-vals$1371 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1371 0))
Ran synthesizer for 61 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    #<abstr-halide-expr>))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0)))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1372 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1372 0))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1372 0))
Ran synthesizer for 59 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   #<abstr-halide-expr>
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1373 0)) (app abstr-vals$1373 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1373 0)) (app abstr-vals$1373 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1373 0)) (app abstr-vals$1373 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1373 0)) (app abstr-vals$1373 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1373 0))
Ran synthesizer for 59 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  #<abstr-halide-expr>
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1374 0)) (app abstr-vals$1374 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1374 0)) (app abstr-vals$1374 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1374 0))
Ran synthesizer for 59 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   #<abstr-halide-expr>)))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1375 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1375 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1375 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1375 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1375 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1375 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1375 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1375 0)))))
optimized x86 0:
  (uint8_t (app abstr-vals$1375 0))
Ran synthesizer for 57 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  (cast
 ...
 (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  #<abstr-halide-expr>))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app abstr-vals$1376 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1376 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1376 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1376 0))))
optimized x86 0:
  (uint8_t (app abstr-vals$1376 0))
Ran synthesizer for 55 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (var-lookup 't26) 16) 1 16)
    (aligned 16 0))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't46) 16) 1 16)
     (aligned 16 0))
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't25) 16) 1 16)
     (aligned 16 0))))))
template:
  (maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1378 0) (app abstr-vals$1377 0)) (app abstr-vals$1377 0) (app abstr-vals$1378 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1378 0) (app abstr-vals$1377 0)) (app abstr-vals$1377 0) (app abstr-vals$1378 0)))
Ran synthesizer for 19 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
Ran bounds analysis for 22 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
"Fold templates"
'(#<load-data> #<load-data> #<load-data>)
here(#<load-data> #<load-data> #<load-data>)

"Replace templates"
(list
 (cast ... #<load-data> 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
  'uint8
  #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1381) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1381) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1381) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 3 idx$1381) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 4 idx$1381) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 5 idx$1381) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 107 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1445) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1445) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1445) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 3 idx$1445) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 4 idx$1445) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 5 idx$1445) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 113 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1509) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1509) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1509) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 3 idx$1509) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 4 idx$1509) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 5 idx$1509) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 135 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     #<abstr-halide-expr>
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1573 0)) (app abstr-vals$1573 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1573 0))
Ran synthesizer for 73 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     #<abstr-halide-expr>)))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1574 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1574 0)))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1574 0))
Ran synthesizer for 67 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    #<abstr-halide-expr>
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1575 0)) (app abstr-vals$1575 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1575 0))
Ran synthesizer for 84 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   #<abstr-halide-expr>
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1576 0)) (app abstr-vals$1576 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1576 0)) (app abstr-vals$1576 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1576 0)) (app abstr-vals$1576 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1576 0)) (app abstr-vals$1576 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1576 0))
Ran synthesizer for 70 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  #<abstr-halide-expr>
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1577 0)) (app abstr-vals$1577 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1577 0)) (app abstr-vals$1577 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1577 0))
Ran synthesizer for 62 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    #<abstr-halide-expr>))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0)))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1578 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1578 0))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1578 0))
Ran synthesizer for 53 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast
 ...
 (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   #<abstr-halide-expr>)))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1579 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1579 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1579 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1579 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1579 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1579 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1579 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1579 0)))))
optimized x86 0:
  (uint8_t (app abstr-vals$1579 0))
Ran synthesizer for 53 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  #<abstr-halide-expr>))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app abstr-vals$1580 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1580 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1580 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1580 0))))
optimized x86 0:
  (uint8_t (app abstr-vals$1580 0))
Ran synthesizer for 52 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
  (aligned 16 2))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (var-lookup 't26) 16) 1 16)
     (aligned 16 0))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't46) 16) 1 16)
      (aligned 16 0))
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't25) 16) 1 16)
      (aligned 16 0)))))))
template:
  (maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1582 0) (app abstr-vals$1581 0)) (app abstr-vals$1581 0) (app abstr-vals$1582 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1582 0) (app abstr-vals$1581 0)) (app abstr-vals$1581 0) (app abstr-vals$1582 0)))
Ran synthesizer for 17 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))
Ran bounds analysis for 21 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
"Fold templates"
'(#<load-data> #<load-data> #<load-data>)
here(#<load-data> #<load-data> #<load-data>)

"Replace templates"
(list
 (cast ... #<load-data> 'uint8 #t)
 (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
  'uint8
  #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1585) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1585) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1585) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1585) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$1585) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$1585) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$1585) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 105 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1649) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1649) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1649) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1649) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$1649) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$1649) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$1649) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 110 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1713) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1713) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1713) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1713) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$1713) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$1713) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$1713) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 118 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     #<abstr-halide-expr>
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app abstr-vals$1777 0)) (app abstr-vals$1777 0) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1777 0))
Ran synthesizer for 67 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    #<abstr-halide-expr>
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1778 0)) (app abstr-vals$1778 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1778 0))
Ran synthesizer for 68 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   #<abstr-halide-expr>
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1779 0)) (app abstr-vals$1779 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1779 0)) (app abstr-vals$1779 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1779 0)) (app abstr-vals$1779 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1779 0)) (app abstr-vals$1779 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1779 0))
Ran synthesizer for 73 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  #<abstr-halide-expr>
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$1780 0)) (app abstr-vals$1780 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$1780 0)) (app abstr-vals$1780 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1780 0))
Ran synthesizer for 58 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast ... (maximum ... #<load-data> #<load-data>) 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     #<abstr-halide-expr>)))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$1781 0) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1781 0)))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1781 0))
Ran synthesizer for 54 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast
 ...
 (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    #<abstr-halide-expr>))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0)))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1782 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1782 0))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1782 0))
Ran synthesizer for 56 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   #<abstr-halide-expr>)))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1783 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1783 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1783 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1783 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1783 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1783 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1783 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1783 0)))))
optimized x86 0:
  (uint8_t (app abstr-vals$1783 0))
Ran synthesizer for 55 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  #<abstr-halide-expr>))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app abstr-vals$1784 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1784 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1784 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1784 0))))
optimized x86 0:
  (uint8_t (app abstr-vals$1784 0))
Ran synthesizer for 51 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
   (aligned 16 2))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (var-lookup 't26) 16) 1 16)
      (aligned 16 0))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't46) 16) 1 16)
       (aligned 16 0))
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't25) 16) 1 16)
       (aligned 16 0))))))))
template:
  (maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1786 0) (app abstr-vals$1785 0)) (app abstr-vals$1785 0) (app abstr-vals$1786 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1786 0) (app abstr-vals$1785 0)) (app abstr-vals$1785 0) (app abstr-vals$1786 0)))
Ran synthesizer for 16 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))
Ran bounds analysis for 20 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
"Fold templates"
'(#<load-data> #<load-data> #<load-data>)
here(#<load-data> #<load-data> #<load-data>)

"Replace templates"
(list
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))
  'uint8
  #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1789) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1789) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1789) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1789) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$1789) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$1789) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$1789) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 7 idx$1789) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))))))
Ran synthesizer for 110 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1853) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1853) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1853) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1853) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$1853) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$1853) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$1853) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 7 idx$1853) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))))))
Ran synthesizer for 110 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1917) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1917) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1917) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1917) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$1917) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$1917) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$1917) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 7 idx$1917) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))))))
Ran synthesizer for 109 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     #<abstr-halide-expr>
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app abstr-vals$1981 0)) (app abstr-vals$1981 0) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1981 0))
Ran synthesizer for 64 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    #<abstr-halide-expr>
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$1982 0)) (app abstr-vals$1982 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1982 0))
Ran synthesizer for 62 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   #<abstr-halide-expr>
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$1983 0)) (app abstr-vals$1983 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$1983 0)) (app abstr-vals$1983 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$1983 0)) (app abstr-vals$1983 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$1983 0)) (app abstr-vals$1983 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1983 0))
Ran synthesizer for 63 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  #<abstr-halide-expr>
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app abstr-vals$1984 0)) (app abstr-vals$1984 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app abstr-vals$1984 0)) (app abstr-vals$1984 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1984 0))
Ran synthesizer for 62 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast
 ...
 (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     #<abstr-halide-expr>)))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1985 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (app abstr-vals$1985 0)))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1985 0))
Ran synthesizer for 60 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    #<abstr-halide-expr>))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0)))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1986 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$1986 0))))))
optimized x86 0:
  (uint8_t (app abstr-vals$1986 0))
Ran synthesizer for 52 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   #<abstr-halide-expr>)))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$1987 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1987 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1987 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1987 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$1987 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1987 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$1987 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1987 0)))))
optimized x86 0:
  (uint8_t (app abstr-vals$1987 0))
Ran synthesizer for 50 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  #<abstr-halide-expr>))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app abstr-vals$1988 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1988 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$1988 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$1988 0))))
optimized x86 0:
  (uint8_t (app abstr-vals$1988 0))
Ran synthesizer for 47 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
    (aligned 16 2))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (var-lookup 't26) 16) 1 16)
       (aligned 16 0))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't46) 16) 1 16)
        (aligned 16 0))
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't25) 16) 1 16)
        (aligned 16 0)))))))))
template:
  (maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))))
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1990 0) (app abstr-vals$1989 0)) (app abstr-vals$1989 0) (app abstr-vals$1990 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$1990 0) (app abstr-vals$1989 0)) (app abstr-vals$1989 0) (app abstr-vals$1990 0)))
Ran synthesizer for 15 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))))
Ran bounds analysis for 20 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))))
"Building Expr:"
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
"Fold templates"
'(#<load-data> #<load-data> #<load-data>)
here(#<load-data> #<load-data> #<load-data>)

"Replace templates"
(list
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))
  'uint8
  #t)
 (cast ... #<load-data> 'uint8 #t)
 (cast
  ...
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum
      ...
      #<load-data>
      (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))
  'uint8
  #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1993) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$1993) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$1993) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$1993) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$1993) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$1993) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$1993) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 7 idx$1993) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 8 idx$1993) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 114 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2057) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$2057) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$2057) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$2057) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$2057) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$2057) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$2057) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 7 idx$2057) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 8 idx$2057) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 115 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2121) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 1 idx$2121) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 2 idx$2121) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 3 idx$2121) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 4 idx$2121) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (⊢ (= 5 idx$2121) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 6 idx$2121) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (⊢ (= 7 idx$2121) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (⊢ (= 8 idx$2121) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))))))
Ran synthesizer for 115 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     #<abstr-halide-expr>
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app abstr-vals$2185 0)) (app abstr-vals$2185 0) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$2185 0))
Ran synthesizer for 65 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    #<abstr-halide-expr>
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app abstr-vals$2186 0)) (app abstr-vals$2186 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$2186 0))
Ran synthesizer for 65 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   #<abstr-halide-expr>
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app abstr-vals$2187 0)) (app abstr-vals$2187 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app abstr-vals$2187 0)) (app abstr-vals$2187 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app abstr-vals$2187 0)) (app abstr-vals$2187 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app abstr-vals$2187 0)) (app abstr-vals$2187 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$2187 0))
Ran synthesizer for 66 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast ... #<load-data> 'uint8 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  #<abstr-halide-expr>
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app abstr-vals$2188 0)) (app abstr-vals$2188 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))) (app abstr-vals$2188 0)) (app abstr-vals$2188 0) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -32 t116)))) (app bounded_input (+ -16 (+ output.s0.x.x (+ -40 t116)))))))))))))
optimized x86 0:
  (uint8_t (app abstr-vals$2188 0))
Ran synthesizer for 62 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     #<abstr-halide-expr>)))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2189 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2189 0)))))))
optimized x86 0:
  (uint8_t (app abstr-vals$2189 0))
Ran synthesizer for 60 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    #<abstr-halide-expr>))))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0)))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (ite (bvule (app abstr-vals$2190 0) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -14 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2190 0))))))
optimized x86 0:
  (uint8_t (app abstr-vals$2190 0))
Ran synthesizer for 54 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>)))))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   #<abstr-halide-expr>)))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (ite (bvule (app abstr-vals$2191 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2191 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$2191 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2191 0))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (ite (bvule (app abstr-vals$2191 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2191 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (ite (bvule (app abstr-vals$2191 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -24 t116)))) (app abstr-vals$2191 0)))))
optimized x86 0:
  (uint8_t (app abstr-vals$2191 0))
Ran synthesizer for 49 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (cast
 ...
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))
 'uint8
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  #<abstr-halide-expr>))
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (ite (bvule (ite (bvule (app abstr-vals$2192 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2192 0)) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -40 t116)))) (ite (bvule (app abstr-vals$2192 0) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116))))) (app bounded_input (+ -15 (+ output.s0.x.x (+ -32 t116)))) (app abstr-vals$2192 0))))
optimized x86 0:
  (uint8_t (app abstr-vals$2192 0))
Ran synthesizer for 48 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))
template:
  (maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum
      ...
      #<load-data>
      (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))))
axioms:
  '(#t #t)
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (uint8_t
 (ite (bvule (app abstr-vals$2194 0) (app abstr-vals$2193 0)) (app abstr-vals$2193 0) (app abstr-vals$2194 0)))
optimized x86 0:
  (uint8_t
 (ite (bvule (app abstr-vals$2194 0) (app abstr-vals$2193 0)) (app abstr-vals$2193 0) (app abstr-vals$2194 0)))
Ran synthesizer for 17 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum
      ...
      #<load-data>
      (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))))
Ran bounds analysis for 21 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum
      ...
      #<load-data>
      (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))))

(x86) Successfully found an equivalent IR expression.

(maximum
 ...
 #<load-data>
 (maximum
  ...
  #<load-data>
  (maximum
   ...
   #<load-data>
   (maximum
    ...
    #<load-data>
    (maximum
     ...
     #<load-data>
     (maximum
      ...
      #<load-data>
      (maximum ... #<load-data> (maximum ... #<load-data> #<load-data>))))))))

Synthesis time: 7 seconds

Synthesizing x86 for:
(vec-max
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't25) 16) 1) 1 16)
  (aligned 16 1))
 (vec-max
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't46) 16) 1) 1 16)
   (aligned 16 1))
  (vec-max
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't26) 16) 1) 1 16)
    (aligned 16 1))
   (vec-max
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't26) 16) 2) 1 16)
     (aligned 16 2))
    (vec-max
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't46) 16) 2) 1 16)
      (aligned 16 2))
     (vec-max
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't25) 16) 2) 1 16)
       (aligned 16 2))
      (vec-max
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (var-lookup 't26) 16) 1 16)
        (aligned 16 0))
       (vec-max
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't46) 16) 1 16)
         (aligned 16 0))
        (load
         (buffer bounded_input 'uint8)
         (ramp (sca-mul (var-lookup 't25) 16) 1 16)
         (aligned 16 0))))))))))


synthesize-x86 output:
#<void>
#f
