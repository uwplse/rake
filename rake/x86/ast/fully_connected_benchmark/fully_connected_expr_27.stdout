Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t (app multiplied 8))
optimized x86 0:
  (int32_t (app multiplied 8))
Ran synthesizer for 21 ms
(model
 [idx$0 0])
(load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
#<load-data>
Ran bounds analysis for 35 ms
Ran bounds analysis for 27 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t (app sum_filter 0))
optimized x86 0:
  (uint32_t (app sum_filter 0))
Ran synthesizer for 20 ms
(model
 [idx$65 0])
(load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
#<load-data>
Ran bounds analysis for 35 ms
Ran bounds analysis for 26 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
 'int32
 4)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
 'int32
 4)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
 'int32
 4)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t (app sum_filter 0))
optimized x86 0:
  (uint32_t (app sum_filter 0))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
 'int32
 4)
template:
  (cast ... #<load-data> 'int32 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int32 4)
optimized-template:
  (cast ... #<abstr-expr> 'int32 #f)
optimized Halide 0:
  (int32_t (app abstr-vals$194 0))
optimized x86 0:
  (int32_t (app abstr-vals$194 0))
Ran synthesizer for 18 ms
(model)
(vec-cast #<abstr-halide-expr> 'int32 4)
(cast ... #<load-data> 'int32 #f)
Ran bounds analysis for 35 ms
Ran bounds analysis for 27 ms
"Extended success?"
#t
(cast ... #<load-data> 'int32 #f)
"Building Expr:"
(sca-broadcast (int32_t t855) 4)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int32_t t855) 4)
template:
  (broadcast ... (int32_t t855))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int32_t t855) 4)
optimized-template:
  (broadcast ... (int32_t t855))
optimized Halide 0:
  (int32_t t855)
optimized x86 0:
  (int32_t t855)
Ran synthesizer for 17 ms
(model)
(sca-broadcast (int32_t t855) 4)
(broadcast ... (int32_t t855))
Ran bounds analysis for 35 ms
Ran bounds analysis for 27 ms
"Extended success?"
#t
(broadcast ... (int32_t t855))
"Building Expr:"
(vec-mul
 (vec-cast
  (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
  'int32
  4)
 (sca-broadcast (int32_t t855) 4))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int32 x?$196))
here(#<load-data> #(struct:cast ... #<load-data> int32 x?$196))

(list (vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32) (vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32) (vv-mpy-add ... #<load-data> '(1) (! x?$453) (! x?$454) (! x?$455) 'int32) (vv-mpy-add ... #<load-data> '(1) (! x?$456) (! x?$457) (! x?$458) 'int32))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32)
 (vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32)
 (vv-mpy-add ... #<load-data> '(1) (! x?$453) (! x?$454) (! x?$455) 'int32)
 (vv-mpy-add ... #<load-data> '(1) (! x?$456) (! x?$457) (! x?$458) 'int32))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
  'int32
  4)
 (sca-broadcast (int32_t t855) 4))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
  'int32
  4)
 (sca-broadcast (int32_t t855) 4))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t (bvmul t855 (app sum_filter 0)))
optimized x86 0:
  (uint32_t (app sum_filter 0))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
  'int32
  4)
 (sca-broadcast (int32_t t855) 4))
template:
  (cast ... #<load-data> 'int32 x?$196)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 4)
 (sca-broadcast (int32_t t855) 4))
optimized-template:
  (cast ... #<abstr-expr> 'int32 x?$196)
optimized Halide 0:
  (int32_t (bvmul t855 (app abstr-vals$459 0)))
optimized x86 0:
  (int32_t
 (ite x?$196 (ite (bvult (bv #x7fffffff 32) (app abstr-vals$459 0)) (bv #x7fffffff 32) (app abstr-vals$459 0)) (app abstr-vals$459 0)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
  'int32
  4)
 (sca-broadcast (int32_t t855) 4))
template:
  (vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 4)
 (sca-broadcast (int32_t t855) 4))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int32_t t855)) #f #f #f 'int32)
optimized Halide 0:
  (int32_t (bvmul t855 (app abstr-vals$460 0)))
optimized x86 0:
  (int32_t (bvmul t855 (app abstr-vals$460 0)))
Ran synthesizer for 18 ms
(model)
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 4)
 (sca-broadcast (int32_t t855) 4))
(vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32)
Ran bounds analysis for 106 ms
Ran bounds analysis for 75 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32)
"Building Expr:"
(vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
"Fold templates"
(list
 #<load-data>
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list (int32_t t855) (int8_t (bv #xff 8)))
  #f
  #f
  #f
  'int32)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int32_t t855) 'int32)
    (sca-cast (int8_t (bv #xff 8)) 'int32))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int32)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add ... #<load-data> (list (int32_t t855)) #f #f #f 'int32)
   (union [x?$530 #<load-data>] [(! x?$530) #(struct:vs-mpy-add
                                              ...
                                              #<load-data>
                                              (#(struct:int32_t t855))
                                              #f
                                              #f
                                              #f
                                              int32)]))
  (list (int32_t t855) (int8_t (bv #xff 8)))
  #f
  #f
  #f
  'int32))
here(#<load-data> #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int32_t t855) #(struct:int8_t (bv #xff 8))) #f #f #f int32) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int32_t t855) int32) #(struct:sca-cast #(struct:int8_t (bv #xff 8)) int32)) #(struct:int8_t (bv #x01 8))) #f #f #f int32) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int32_t t855)) #f #f #f int32) (union #:size 2 #:hash 406330671232)> (#(struct:int32_t t855) #(struct:int8_t (bv #xff 8))) #f #f #f int32))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t (bvadd (app multiplied 8) (bvneg (bvmul t855 (app sum_filter 0)))))
optimized x86 0:
  (union [(= 0 idx$462) #(struct:uint32_t (app sum_filter 0))] [(= 1 idx$462) #(struct:int32_t
                                                                              (app multiplied 8))])
run-x86-synthesizer
halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t (bvadd (app multiplied 8) (bvneg (bvmul t855 (app sum_filter 0)))))
optimized x86 0:
  (union [(= 0 idx$659) #(struct:uint32_t (app sum_filter 0))] [(= 1 idx$659) #(struct:int32_t
                                                                              (app multiplied 8))])
run-x86-synthesizer
halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int32_t t855) (int8_t (bv #xff 8)))
 #f
 #f
 #f
 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int32_t t855) (int8_t (bv #xff 8)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t (bvadd (app multiplied 8) (bvneg (bvmul t855 (app sum_filter 0)))))
optimized x86 0:
  (int32_t
 (bvadd (bvmul t855 (app sum_filter 0)) (bvneg (ite* (⊢ (&& (= 0 idx$66) (= 1 idx$66)) (app sum_filter 0)) (⊢ (|| (= 0 idx$66) (= 1 idx$66)) (ite* (⊢ (= 0 idx$66) (app sum_filter 0)) (⊢ (= 1 idx$66) (app multiplied 8))))))))
Ran synthesizer for 184 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int32_t t855) 'int32)
   (sca-cast (int8_t (bv #xff 8)) 'int32))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int32_t t855) 'int32)
   (sca-cast (int8_t (bv #xff 8)) 'int32))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t (bvadd (app multiplied 8) (bvneg (bvmul t855 (app sum_filter 0)))))
optimized x86 0:
  (int32_t
 (bvadd (ite* (⊢ (&& (= 0 idx$66) (= 1 idx$66)) (app sum_filter 0)) (⊢ (|| (= 0 idx$66) (= 1 idx$66)) (ite* (⊢ (= 0 idx$66) (app sum_filter 0)) (⊢ (= 1 idx$66) (app multiplied 8))))) (bvmul (app sum_filter 0) (bvneg t855))))
Ran synthesizer for 49 ms
(model
 [idx$66 1])
(vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int32_t t855) 'int32)
   (sca-cast (int8_t (bv #xff 8)) 'int32))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)
Ran bounds analysis for 60 ms
Ran bounds analysis for 61 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int32_t t855) 'int32) (sca-cast (int8_t (bv #xff 8)) 'int32)) (int8_t (bv #x01 8))) #f #f #f 'int32)

(x86) Successfully found an equivalent IR expression.

(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int32_t t855) 'int32)
   (sca-cast (int8_t (bv #xff 8)) 'int32))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)

Synthesis time: 1 seconds

Synthesizing x86 for:
(vec-sub
 (load (buffer multiplied 'int32) (ramp 8 1 4) (aligned 0 8))
 (vec-mul
  (vec-cast
   (load (buffer sum_filter 'uint32) (ramp 0 1 4) (aligned 0 0))
   'int32
   4)
  (sca-broadcast (int32_t t855) 4)))


synthesize-x86 output:
#<void>
#f
