Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul output.s0.x.x 16)
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
    (var-lookup 't55)))
  1
  16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul output.s0.x.x 16)
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
    (var-lookup 't55)))
  1
  16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul output.s0.x.x 16)
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
    (var-lookup 't55)))
  1
  16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))))
Ran synthesizer for 95 ms
(model
 [idx$0 0])
(load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul output.s0.x.x 16)
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
    (var-lookup 't55)))
  1
  16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 26 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul output.s0.x.x 16)
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
     (var-lookup 't55)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul output.s0.x.x 16)
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
     (var-lookup 't55)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul output.s0.x.x 16)
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
     (var-lookup 't55)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul output.s0.x.x 16)
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
     (var-lookup 't55)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(sca-broadcast (int16_t (bv #x0040 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0040 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0040 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0040 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0040 16)))
optimized Halide 0:
  (int16_t (bv #x0040 16))
optimized x86 0:
  (int16_t (bv #x0040 16))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (int16_t (bv #x0040 16)) 16)
(broadcast ... (int16_t (bv #x0040 16)))
Ran bounds analysis for 21 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0040 16)))
"Building Expr:"
(vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul output.s0.x.x 16)
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
      (var-lookup 't55)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$131))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$131))

(list (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul output.s0.x.x 16)
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
      (var-lookup 't55)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul output.s0.x.x 16)
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
      (var-lookup 't55)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul output.s0.x.x 16)
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
      (var-lookup 't55)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$131)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$131)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$394 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$394 0) (bitvector 16)))
Ran synthesizer for 44 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul output.s0.x.x 16)
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
      (var-lookup 't55)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
Ran synthesizer for 15 ms
(model)
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
Ran bounds analysis for 21 ms
Ran bounds analysis for 17 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
"Building Expr:"
(sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16)
template:
  (broadcast ... (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16)
optimized-template:
  (broadcast ... (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))))
optimized Halide 0:
  (int16_t (bvmul (bv #xffc0 16) t125))
optimized x86 0:
  (int16_t (bvmul (bv #xffc0 16) t125))
Ran synthesizer for 16 ms
(model)
(sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16)
(broadcast ... (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))))
Ran bounds analysis for 21 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(broadcast ... (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))))
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0040 16))
   (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                  (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0040 16)))
  #f
  x?$398
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$401 #(struct:vs-mpy-add
                    ...
                    #<load-data>
                    (#(struct:int16_t (bv #x0040 16)))
                    #f
                    #f
                    #f
                    int16)] [(! x?$401) #(struct:broadcast
                                          ...
                                          #(struct:sca-mul
                                            #(struct:int16_t t125)
                                            #(struct:int16_t (bv #xffc0 16))))]))
  (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16)) (union #:size 2 #:hash 1505009206206)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f x?$398 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f #f #f int16) (union #:size 2 #:hash 362323205581)> (#(struct:int16_t (bv #x0040 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))) (bitvector 16))) (bvmul (bv #xffc0 16) t125)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))) (bitvector 16))) (bvmul (bv #xffc0 16) t125)))
optimized x86 0:
  (int16_t
 (bvmul (zero-extend (app input1 (+ (+ -16 output.s0.x.x) (+ (+ t91 (- (+ t103 output.s0.y.rebased))) (+ (+ t100 (- t123)) (- t86))))) (bitvector 16)) (ite x?$400 (bv #x0080 16) (bv #x0041 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$398
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$398
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #xffc0 16) t125) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$594 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$594 0) (bitvector 16))) (ite x?$398 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
  (union [x?$401 #(struct:vs-mpy-add
                   ...
                   #<load-data>
                   (#(struct:int16_t (bv #x0040 16)))
                   #f
                   #f
                   #f
                   int16)] [(! x?$401) #(struct:broadcast
                                         ...
                                         #(struct:sca-mul
                                           #(struct:int16_t t125)
                                           #(struct:int16_t (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
axioms:
  (union [x?$401 ((forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx))))
                (forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx)))))] [(! x?$401) ((forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx)))))])
optimized-halide-expr:
  (vec-add
 #<abstr-halide-expr>
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 (combine
  #<abstr-expr>
  (union [x?$401 #<abstr-expr>] [(! x?$401) #(struct:broadcast
                                              ...
                                              #(struct:sca-mul
                                                #(struct:int16_t t125)
                                                #(struct:int16_t
                                                  (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t (bvadd (bvmul (bv #xffc0 16) t125) (app abstr-vals$595 0)))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (ite c$403 (app abstr-vals$595 idx$402) (ite x?$401 (app abstr-vals$595 idx$402) (bvmul (bv #xffc0 16) t125)))) (ite c$405 (app abstr-vals$595 idx$404) (ite x?$401 (app abstr-vals$595 idx$404) (bvmul (bv #xffc0 16) t125)))))
Ran synthesizer for 144 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t125) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$858 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (app abstr-vals$858 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$857 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (ite c$598 (zero-extend (app abstr-vals$857 idx$597) (bitvector 16)) (app abstr-vals$858 idx$597)) (bvmul (bv #x0040 16) (ite c$600 (zero-extend (app abstr-vals$857 idx$599) (bitvector 16)) (app abstr-vals$858 idx$599)))))
Ran synthesizer for 99 ms
(model
 [idx$597 0]
 [c$598 #f]
 [idx$599 0]
 [c$600 #t])
(vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_there
  context...:
   body of "/Users/alexanderroot/Projects/Rake/rake/rake/x86/ast/temp.rkt"
 t125) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 24 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t125) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)

(x86) Successfully found an equivalent IR expression.

(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t125) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)

Synthesis time: 1 seconds

Synthesizing x86 for:
(vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul output.s0.x.x 16)
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't68))
       (var-lookup 't55)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t125) (int16_t (bv #xffc0 16))) 16))


synthesize-x86 output:
#<void>
#f
