Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -15) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -15) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -15) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))
optimized x86 0:
  (uint16_t
 (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))
Ran synthesizer for 25 ms
(model
 [idx$0 0])
(load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -15) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 26 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -14) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -14) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -14) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))
optimized x86 0:
  (uint16_t
 (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))
Ran synthesizer for 21 ms
(model
 [idx$65 0])
(load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -14) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 27 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -16) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -16) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -16) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))
optimized x86 0:
  (uint16_t
 (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))
Ran synthesizer for 24 ms
(model
 [idx$130 0])
(load
 (buffer input 'uint16)
 (ramp (sca-add (var-lookup 't195) -16) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 27 ms
Ran bounds analysis for 19 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
"Fold templates"
'(#<load-data> #<load-data>)
here(#<load-data> #<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))))
optimized x86 0:
  (uint16_t
 (ite* (⊢ (= 0 idx$195) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$195) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
Ran synthesizer for 59 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))))
optimized x86 0:
  (uint16_t
 (ite* (⊢ (= 0 idx$259) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$259) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
Ran synthesizer for 58 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$387)
 (! x?$388)
 (! x?$389)
 'uint16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$387)
 (! x?$388)
 (! x?$389)
 'uint16)
optimized Halide 0:
  (uint16_t
 (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))))
optimized x86 0:
  (uint16_t
 (ite* (⊢ (&& x?$389 (! (&& (! x?$387) (! x?$389)))) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))) (bvadd (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))) (ite (bvule (bvneg (ite (bveq (bv #x0000 16) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))) (bv #x0000 16))) (ite (bvule (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))))) (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))))))) (ite (bvule (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))))) (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))))) (bvneg (ite (bveq (bv #x0000 16) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))) (bv #x0000 16))))))) (⊢ (|| (&& (! x?$387) (! x?$389)) (&& (! x?$389) (! (&& (! x?$387) (! x?$389))))) (bvlshr (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))) (bvadd (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))) (ite (bvule (bvneg (ite (bveq (bv #x0000 16) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))) (bv #x0000 16))) (ite (bvule (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))))) (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))))))) (ite (bvule (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))))) (ite* (⊢ (= 0 idx$324) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$324) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))))) (bvneg (ite (bveq (bv #x0000 16) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16)))))))) (ite x?$387 (bvadd (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (ite x?$388 (bv #x0000 16) (bv #x0001 16))) (bvadd (ite x?$388 (bv #x0000 16) (bv #x0001 16)) (ite (bvule (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))) (ite* (⊢ (= 0 idx$323) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$323) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bvadd (bv #xffff 16) (bvneg (ite x?$388 (bv #x0000 16) (bv #x0001 16))))))) (bv #x0000 16)))))) (bv #x0001 16)))))
Ran synthesizer for 47 ms
(model
 [idx$323 0]
 [idx$324 1]
 [x?$387 #t]
 [x?$388 #t]
 [x?$389 #t])
(vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -14) 1 16)
  (aligned 1 0))
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -16) 1 16)
  (aligned 1 0)))
(vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint16)
Ran bounds analysis for 27 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint16)
"Building Expr:"
(vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
"Fold templates"
(list
 #<load-data>
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'uint16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  x?$583
  #f
  'uint16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'uint16)
   (union [x?$585 #<load-data>] [(! x?$585) #(struct:vs-mpy-add
                                              ...
                                              #<load-data>
                                              (#(struct:int8_t (bv #x01 8))
                                               #(struct:int8_t (bv #x01 8)))
                                              #f
                                              #f
                                              #f
                                              uint16)]))
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'uint16))
here(#<load-data> #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f uint16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f x?$583 #f uint16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f uint16) (union #:size 2 #:hash 406376325836)> (#(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f uint16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (bvadd (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
optimized x86 0:
  (uint16_t
 (ite* (⊢ (= 0 idx$518) (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$518) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 2 idx$518) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
Ran synthesizer for 70 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (bvadd (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
optimized x86 0:
  (uint16_t
 (ite* (⊢ (= 0 idx$714) (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$714) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 2 idx$714) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
Ran synthesizer for 72 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint16)
optimized Halide 0:
  (uint16_t
 (bvadd (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
optimized x86 0:
  (uint16_t
 (bvadd (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (ite* (⊢ (= 0 idx$325) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$325) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 2 idx$325) (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))))))
Ran synthesizer for 98 ms
(model
 [idx$325 2])
(vec-add
 (load
  (buffer input 'uint16)
  (ramp (sca-add (var-lookup 't195) -15) 1 16)
  (aligned 1 0))
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -14) 1 16)
   (aligned 1 0))
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -16) 1 16)
   (aligned 1 0))))
(vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint16)
Ran bounds analysis for 27 ms
Ran bounds analysis for 19 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'uint16)
"Building Expr:"
(sca-broadcast (uint16_t (bv #x0003 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (uint16_t (bv #x0003 16)) 16)
template:
  (broadcast ... (uint16_t (bv #x0003 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (uint16_t (bv #x0003 16)) 16)
optimized-template:
  (broadcast ... (uint16_t (bv #x0003 16)))
optimized Halide 0:
  (uint16_t (bv #x0003 16))
optimized x86 0:
  (uint16_t (bv #x0003 16))
Ran synthesizer for 17 ms
(model)
(sca-broadcast (uint16_t (bv #x0003 16)) 16)
(broadcast ... (uint16_t (bv #x0003 16)))
Ran bounds analysis for 24 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(broadcast ... (uint16_t (bv #x0003 16)))
"Building Expr:"
(vec-div
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -15) 1 16)
   (aligned 1 0))
  (vec-add
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -14) 1 16)
    (aligned 1 0))
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -16) 1 16)
    (aligned 1 0))))
 (sca-broadcast (uint16_t (bv #x0003 16)) 16))
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -15) 1 16)
   (aligned 1 0))
  (vec-add
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -14) 1 16)
    (aligned 1 0))
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -16) 1 16)
    (aligned 1 0))))
 (sca-broadcast (uint16_t (bv #x0003 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-div
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -15) 1 16)
   (aligned 1 0))
  (vec-add
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -14) 1 16)
    (aligned 1 0))
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -16) 1 16)
    (aligned 1 0))))
 (sca-broadcast (uint16_t (bv #x0003 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (bvudiv (bvadd (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (bvadd (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))) (bv #x0003 16)))
optimized x86 0:
  (uint16_t
 (ite* (⊢ (= 0 idx$781) (app input (+ -15 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 1 idx$781) (app input (+ -16 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275)))))) (⊢ (= 2 idx$781) (app input (+ -14 (+ t292 (+ (ite (<= t264 16) t264 16) (+ -2 t275))))))))
Ran synthesizer for 94 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -15) 1 16)
   (aligned 1 0))
  (vec-add
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -14) 1 16)
    (aligned 1 0))
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -16) 1 16)
    (aligned 1 0))))
 (sca-broadcast (uint16_t (bv #x0003 16)) 16))
template:
  (vs-divide
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'uint16)
 (uint16_t (bv #x0003 16)))
axioms:
  '(#t)
optimized-halide-expr:
  (vec-div #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0003 16)) 16))
optimized-template:
  (vs-divide ... #<abstr-expr> (uint16_t (bv #x0003 16)))
optimized Halide 0:
  (uint16_t (bvudiv (app abstr-vals$845 0) (bv #x0003 16)))
optimized x86 0:
  (uint16_t
 (extract 15 0 (bvadd (bvashr (zero-extend (app abstr-vals$845 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (zero-extend (app abstr-vals$845 0) (bitvector 64)) (bvneg (bvashr (zero-extend (app abstr-vals$845 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000003 64)))))
Ran synthesizer for 217 ms
(model)
(vec-div #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0003 16)) 16))
(vs-divide
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'uint16)
 (uint16_t (bv #x0003 16)))
Ran bounds analysis for 36 ms
Ran bounds analysis for 24 ms
"Extended success?"
#t
(vs-divide
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'uint16)
 (uint16_t (bv #x0003 16)))

(x86) Successfully found an equivalent IR expression.

(vs-divide
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'uint16)
 (uint16_t (bv #x0003 16)))

Synthesis time: 1 seconds

Synthesizing x86 for:
(vec-div
 (vec-add
  (load
   (buffer input 'uint16)
   (ramp (sca-add (var-lookup 't195) -15) 1 16)
   (aligned 1 0))
  (vec-add
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -14) 1 16)
    (aligned 1 0))
   (load
    (buffer input 'uint16)
    (ramp (sca-add (var-lookup 't195) -16) 1 16)
    (aligned 1 0))))
 (sca-broadcast (uint16_t (bv #x0003 16)) 16))


synthesize-x86 output:
#<void>
#f
