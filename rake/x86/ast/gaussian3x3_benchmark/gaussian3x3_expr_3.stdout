Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(sca-broadcast (int16_t (bv #x0001 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0001 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0001 16)))
optimized Halide 0:
  (int16_t (bv #x0001 16))
optimized x86 0:
  (int16_t (bv #x0001 16))
Ran synthesizer for 18 ms
(model)
(sca-broadcast (int16_t (bv #x0001 16)) 16)
(broadcast ... (int16_t (bv #x0001 16)))
Ran bounds analysis for 22 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0001 16)))
"Building Expr:"
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) 1) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) 1) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) 1) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
optimized x86 0:
  (uint8_t (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
Ran synthesizer for 20 ms
(model
 [idx$0 0])
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) 1) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 23 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(sca-broadcast (int16_t (bv #x0002 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0002 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0002 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0002 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0002 16)))
optimized Halide 0:
  (int16_t (bv #x0002 16))
optimized x86 0:
  (int16_t (bv #x0002 16))
Ran synthesizer for 17 ms
(model)
(sca-broadcast (int16_t (bv #x0002 16)) 16)
(broadcast ... (int16_t (bv #x0002 16)))
Ran bounds analysis for 22 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0002 16)))
"Building Expr:"
(vec-mul
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) 1) 1 16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$131))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$131))

(list (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) 1) 1 16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) 1) 1 16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) 1) 1 16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$131)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$131)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$394 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$394 0) (bitvector 16)))
Ran synthesizer for 45 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) 1) 1 16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
Ran synthesizer for 17 ms
(model)
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
Ran bounds analysis for 24 ms
Ran bounds analysis for 17 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
"Building Expr:"
(load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))
optimized x86 0:
  (uint8_t (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))
Ran synthesizer for 21 ms
(model
 [idx$397 0])
(load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$526 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$526 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$528))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$528))

(list (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$785) (! x?$786) (! x?$787) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$788) (! x?$789) (! x?$790) 'int16))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$785) (! x?$786) (! x?$787) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$788) (! x?$789) (! x?$790) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$528)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$528)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$791 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$791 0) (bitvector 16)))
Ran synthesizer for 41 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$792 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$792 0) (bitvector 16))))
Ran synthesizer for 16 ms
(model)
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
Ran bounds analysis for 25 ms
Ran bounds analysis for 21 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16))) #f #f #f 'int16)
"Building Expr:"
(load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))
optimized x86 0:
  (uint8_t
 (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))
Ran synthesizer for 22 ms
(model
 [idx$794 0])
(load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
#<load-data>
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$923 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$923 0) (bitvector 16)))
Ran synthesizer for 19 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 27 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0002 16))
   (union [x?$928 #(struct:int16_t (bv #x0002 16))] [(! x?$928) #(struct:int8_t
                                                                  (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0002 16)))
  #f
  x?$926
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0002 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$929 #(struct:vs-mpy-add
                    ...
                    #<load-data>
                    (#(struct:int16_t (bv #x0002 16)))
                    #f
                    #f
                    #f
                    int16)] [(! x?$929) #(struct:cast
                                          ...
                                          #<load-data>
                                          int16
                                          #f)]))
  (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$1122))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) (union #:size 2 #:hash 1391252381844)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16))) #f x?$926 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16))) #f #f #f int16) (union #:size 2 #:hash 397413289189)> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$1122))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$1252)
  (! x?$1253)
  (! x?$1254)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1058) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 1 idx$1058) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1123) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 1 idx$1123) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (union [x?$928 #(struct:int16_t (bv #x0002 16))] [(! x?$928) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (union [x?$928 #(struct:int16_t (bv #x0002 16))] [(! x?$928) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$398) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$398) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (bitvector 16)) (ite x?$928 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 39 ms
(model
 [idx$398 1]
 [x?$928 #f])
(vec-add
 (vec-mul
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 34 ms
Ran bounds analysis for 23 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
optimized x86 0:
  (uint8_t (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
Ran synthesizer for 25 ms
(model
 [idx$1255 0])
(load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
#<load-data>
Ran bounds analysis for 24 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$1384 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1384 0) (bitvector 16)))
Ran synthesizer for 21 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 25 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (union [x?$1389 #(struct:int16_t (bv #x0002 16))] [(! x?$1389) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)))
  #f
  x?$1387
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$1390 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:int16_t (bv #x0002 16))
                      #(struct:int8_t (bv #x01 8)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1390) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$1583))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1419713834624)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8))) #f x?$1387 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 409739452039)> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$1583))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$1713)
  (! x?$1714)
  (! x?$1715)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1519) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$1519) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$1519) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1584) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$1584) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$1584) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (union [x?$1389 #(struct:int16_t (bv #x0002 16))] [(! x?$1389) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (union [x?$1389 #(struct:int16_t (bv #x0002 16))] [(! x?$1389) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$399) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$399) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$399) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (bitvector 16)) (ite x?$1389 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 39 ms
(model
 [idx$399 2]
 [x?$1389 #f])
(vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 34 ms
Ran bounds analysis for 26 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) -1) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) -1) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) -1) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
optimized x86 0:
  (uint8_t (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
Ran synthesizer for 25 ms
(model
 [idx$1716 0])
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't15) -1) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 24 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't15) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$1845 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1845 0) (bitvector 16)))
Ran synthesizer for 21 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 25 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (union [x?$1850 #(struct:int16_t (bv #x0002 16))] [(! x?$1850) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  #f
  x?$1848
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$1851 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:int16_t (bv #x0002 16))
                      #(struct:int8_t (bv #x01 8))
                      #(struct:int8_t (bv #x01 8)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1851) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$2044))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1420371791413)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f x?$1848 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 403888944391)> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$2044))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$2174)
  (! x?$2175)
  (! x?$2176)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1980) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$1980) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$1980) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$1980) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2045) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$2045) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$2045) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$2045) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$1850 #(struct:int16_t (bv #x0002 16))] [(! x?$1850) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$1850 #(struct:int16_t (bv #x0002 16))] [(! x?$1850) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$400) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$400) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$400) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$400) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (bitvector 16)) (ite x?$1850 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 90 ms
(model
 [idx$400 3]
 [x?$1850 #f])
(vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't15) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 32 ms
Ran bounds analysis for 23 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(vec-mul
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16))) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1420152475945) int16))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2181) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$2181) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$2181) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$2181) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$2180 #(struct:int16_t (bv #x0002 16))] [(! x?$2180) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)) (ite x?$2180 (bv #x0002 16) (bv #x0001 16))) (bvadd (bvmul (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)) (ite x?$2180 (bv #x0002 16) (bv #x0001 16))) (bvadd (bvmul (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16)) (bvmul (bv #x0002 16) (ite x?$2180 (bv #x0002 16) (bv #x0001 16)))) (bvmul (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)) (ite x?$2180 (bv #x0002 16) (bv #x0001 16)))))))
Ran synthesizer for 127 ms
(model
 [x?$2180 #t])
(vec-mul
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0002 16)) 16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 39 ms
Ran bounds analysis for 24 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int16_t (bv #x0002 16)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) -1) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) -1) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) -1) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))
optimized x86 0:
  (uint8_t
 (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))
Ran synthesizer for 23 ms
(model
 [idx$2245 0])
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) -1) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 22 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$2374 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$2374 0) (bitvector 16)))
Ran synthesizer for 19 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 24 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (union [x?$2379 #(struct:int16_t (bv #x0002 16))] [(! x?$2379) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16)))
  #f
  x?$2377
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (sca-mul
      (sca-cast (int16_t (bv #x0002 16)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16)))
    #f
    #f
    #f
    'int16)
   (union [x?$2380 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:sca-mul
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$2380) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$2573))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) (union #:size 2 #:hash 1418714940718)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))) #f x?$2377 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))) #f #f #f int16) (union #:size 2 #:hash 407119709011)> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$2573))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$2703)
  (! x?$2704)
  (! x?$2705)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2509) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$2509) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$2509) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$2509) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 4 idx$2509) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2574) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$2574) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$2574) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$2574) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 4 idx$2574) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (union [x?$2379 #(struct:int16_t (bv #x0002 16))] [(! x?$2379) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (union [x?$2379 #(struct:int16_t (bv #x0002 16))] [(! x?$2379) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$401) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$401) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$401) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$401) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$401) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))) (bitvector 16)) (ite x?$2379 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 60 ms
(model
 [idx$401 4]
 [x?$2379 #f])
(vec-add
 (vec-mul
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't15) 1 16) (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 37 ms
Ran bounds analysis for 26 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int16_t (bv #x0002 16)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) -1) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) -1) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) -1) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
optimized x86 0:
  (uint8_t
 (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 18 ms
(model
 [idx$2706 0])
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) -1) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) -1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$2835 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$2835 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (union [x?$2840 #(struct:int16_t (bv #x0002 16))] [(! x?$2840) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8)))
  #f
  x?$2838
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (sca-mul
      (sca-cast (int16_t (bv #x0002 16)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$2841 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:sca-mul
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:int8_t (bv #x01 8)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$2841) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$3034))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1420475042985)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8))) #f x?$2838 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 405681333412)> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$3034))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$3164)
  (! x?$3165)
  (! x?$3166)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2970) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$2970) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$2970) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 3 idx$2970) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$2970) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$2970) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$3035) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$3035) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$3035) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 3 idx$3035) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$3035) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$3035) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 5 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (union [x?$2840 #(struct:int16_t (bv #x0002 16))] [(! x?$2840) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (union [x?$2840 #(struct:int16_t (bv #x0002 16))] [(! x?$2840) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$402) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$402) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$402) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$402) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$402) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$402) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))) (bitvector 16)) (ite x?$2840 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 53 ms
(model
 [idx$402 5]
 [x?$2840 #f])
(vec-add
 (vec-add
  (vec-mul
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't15) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't24) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) -1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) -1) 1 16)
   (aligned 1 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 35 ms
Ran bounds analysis for 25 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int16_t (bv #x0002 16)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0002 16))
   (union [x?$3170 #(struct:int16_t (bv #x0002 16))] [(! x?$3170) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0002 16)))
  #f
  x?$3168
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0002 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$3171 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:int16_t (bv #x0002 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$3171) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int8_t (bv #x01 8))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int8_t (bv #x01 8))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int8_t (bv #x01 8))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:int8_t (bv #x01 8))
                                             #(struct:int8_t (bv #x01 8)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:sca-mul
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:sca-mul
      #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:sca-mul
      #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:sca-mul
      #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:int8_t (bv #x01 8))
    #(struct:int8_t (bv #x01 8))
    (union [x?$3367 #(struct:int16_t (bv #x0002 16))] [(! x?$3367) #(struct:int8_t
                                                                     (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:sca-mul
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:sca-mul
      #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:sca-mul
      #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:sca-mul
      #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
      #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
    #(struct:int8_t (bv #x01 8))
    #(struct:int8_t (bv #x01 8)))
  #f
  x?$3365
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:sca-mul
        #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)
        #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
      #(struct:sca-mul
        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
        #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
      #(struct:sca-mul
        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
        #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
      #(struct:sca-mul
        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
        #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16))
      #(struct:int8_t (bv #x01 8))
      #(struct:int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$3368 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:int16_t (bv #x0002 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$3368) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int8_t (bv #x01 8))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int8_t (bv #x01 8))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:sca-mul
                                               #(struct:sca-cast
                                                 #(struct:int8_t (bv #x01 8))
                                                 int16)
                                               #(struct:sca-cast
                                                 #(struct:int16_t
                                                   (bv #x0002 16))
                                                 int16))
                                             #(struct:int8_t (bv #x01 8))
                                             #(struct:int8_t (bv #x01 8)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16)) (union #:size 2 #:hash 1419163685894)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16))) #f x?$3168 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0002 16))) #f #f #f int16) (union #:size 2 #:hash 410594214311)> (#(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1419106174658)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f x?$3365 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 410599670389)> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$3300) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$3300) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$3300) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 3 idx$3300) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$3300) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$3300) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$3300) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 5 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$3497) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$3497) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$3497) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 3 idx$3497) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$3497) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$3497) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$3497) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 4 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (union [x?$3170 #(struct:int16_t (bv #x0002 16))] [(! x?$3170) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0002 16))
  (union [x?$3170 #(struct:int16_t (bv #x0002 16))] [(! x?$3170) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$1) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$1) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 2 idx$1) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 3 idx$1) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 4 idx$1) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$1) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$1) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (ite x?$3170 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 256 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int16_t (bv #x0002 16)))
 #f
 x?$3168
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (int16_t (bv #x0002 16)))
 #f
 x?$3168
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$3561 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app abstr-vals$3561 0) (bitvector 16))) (ite x?$3168 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$3367 #(struct:int16_t (bv #x0002 16))] [(! x?$3367) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$3367 #(struct:int16_t (bv #x0002 16))] [(! x?$3367) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$403) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$403) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$403) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$403) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$403) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$403) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 6 idx$403) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (bitvector 16)) (ite x?$3367 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 166 ms
(model
 [idx$403 6]
 [x?$3367 #t])
(vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't15) 1) 1 16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-add
   (vec-mul
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't15) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't24) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load (buffer input 'uint8) (ramp (var-lookup 't25) 1 16) (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) -1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) -1) 1 16)
    (aligned 1 0))
   'int16
   16)))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 35 ms
Ran bounds analysis for 25 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int16_t (bv #x0002 16)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int16_t (bv #x0002 16))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) 1) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) 1) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) 1) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))
optimized x86 0:
  (uint8_t
 (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))
Ran synthesizer for 18 ms
(model
 [idx$3562 0])
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't24) 1) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't24) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$3691 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$3691 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (union [x?$3696 #(struct:int16_t (bv #x0002 16))] [(! x?$3696) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16)))
  #f
  x?$3694
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (sca-mul
      (sca-cast (int16_t (bv #x0002 16)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (int8_t (bv #x01 8))
     (int8_t (bv #x01 8))
     (int16_t (bv #x0002 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$3697 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:sca-mul
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:int8_t (bv #x01 8))
                      #(struct:int8_t (bv #x01 8))
                      #(struct:int16_t (bv #x0002 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$3697) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$3890))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) (union #:size 2 #:hash 1466515467673)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16))) #f x?$3694 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16))) #f #f #f int16) (union #:size 2 #:hash 405247038100)> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$3890))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$4020)
  (! x?$4021)
  (! x?$4022)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$3826) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$3826) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$3826) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$3826) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$3826) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$3826) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$3826) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$3826) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 4 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$3891) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$3891) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$3891) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$3891) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$3891) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$3891) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$3891) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$3891) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 4 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (union [x?$3696 #(struct:int16_t (bv #x0002 16))] [(! x?$3696) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (union [x?$3696 #(struct:int16_t (bv #x0002 16))] [(! x?$3696) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$404) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$404) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$404) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$404) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$404) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$404) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 6 idx$404) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 7 idx$404) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))))) (bitvector 16)) (ite x?$3696 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 118 ms
(model
 [idx$404 7]
 [x?$3696 #f])
(vec-add
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't15) 1) 1 16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-add
    (vec-mul
     (vec-add
      (vec-add
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't15) 1 16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't24) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (var-lookup 't25) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) -1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) -1) 1 16)
     (aligned 1 0))
    'int16
    16)))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't24) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 36 ms
Ran bounds analysis for 26 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int16_t (bv #x0002 16)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int16_t (bv #x0002 16)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) 1) 1 16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) 1) 1 16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) 1) 1 16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
optimized x86 0:
  (uint8_t
 (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 18 ms
(model
 [idx$4023 0])
(load
 (buffer input 'uint8)
 (ramp (sca-add (var-lookup 't25) 1) 1 16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 18 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input 'uint8)
  (ramp (sca-add (var-lookup 't25) 1) 1 16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$4152 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$4152 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 20 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (union [x?$4157 #(struct:int16_t (bv #x0002 16))] [(! x?$4157) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8)))
  #f
  x?$4155
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (sca-mul
      (sca-cast (int16_t (bv #x0002 16)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (int8_t (bv #x01 8))
     (int8_t (bv #x01 8))
     (int16_t (bv #x0002 16))
     (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$4158 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:sca-mul
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:sca-mul
                        #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16)
                        #(struct:sca-cast
                          #(struct:int16_t (bv #x0002 16))
                          int16))
                      #(struct:int8_t (bv #x01 8))
                      #(struct:int8_t (bv #x01 8))
                      #(struct:int16_t (bv #x0002 16))
                      #(struct:int8_t (bv #x01 8)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$4158) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$4351))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1465834591235)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8))) #f x?$4155 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 420715186439)> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$4351))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$4481)
  (! x?$4482)
  (! x?$4483)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$4287) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$4287) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$4287) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$4287) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$4287) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$4287) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$4287) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$4287) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 8 idx$4287) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 4 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$4352) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$4352) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$4352) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$4352) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$4352) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$4352) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$4352) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$4352) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 8 idx$4352) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 5 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (union [x?$4157 #(struct:int16_t (bv #x0002 16))] [(! x?$4157) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (union [x?$4157 #(struct:int16_t (bv #x0002 16))] [(! x?$4157) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$405) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$405) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$405) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$405) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$405) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$405) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 6 idx$405) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 7 idx$405) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 8 idx$405) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))) (bitvector 16)) (ite x?$4157 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 187 ms
(model
 [idx$405 8]
 [x?$4157 #f])
(vec-add
 (vec-add
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't15) 1) 1 16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-add
     (vec-mul
      (vec-add
       (vec-add
        (vec-add
         (vec-mul
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't15) 1 16)
            (aligned 1 0))
           'int16
           16)
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't24) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (var-lookup 't25) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) -1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) -1) 1 16)
      (aligned 1 0))
     'int16
     16)))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't24) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer input 'uint8)
   (ramp (sca-add (var-lookup 't25) 1) 1 16)
   (aligned 1 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 37 ms
Ran bounds analysis for 30 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int16_t (bv #x0002 16)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(sca-broadcast (int16_t (bv #x0008 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0008 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0008 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0008 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0008 16)))
optimized Halide 0:
  (int16_t (bv #x0008 16))
optimized x86 0:
  (int16_t (bv #x0008 16))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (int16_t (bv #x0008 16)) 16)
(broadcast ... (int16_t (bv #x0008 16)))
Ran bounds analysis for 22 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0008 16)))
"Building Expr:"
(vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0008 16)) 16))
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0008 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0008 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$4488) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$4488) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$4488) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$4488) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$4488) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$4488) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$4488) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$4488) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 8 idx$4488) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 5 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0008 16)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0003 16))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$4552 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$4552 idx)))))
optimized-halide-expr:
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16))
optimized-template:
  (vs-shift-right ... #<abstr-expr> (int16_t (bv #x0003 16)) #f #f #t)
optimized Halide 0:
  (int16_t
 (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$4552 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$4552 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$4552 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64)))))
optimized x86 0:
  (int16_t (bvashr (app abstr-vals$4552 0) (bv #x0003 16)))
Ran synthesizer for 652 ms
(model)
(vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16))
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0003 16))
 #f
 #f
 #t)
Ran bounds analysis for 23 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0003 16))
 #f
 #f
 #t)
"Building Expr:"
(vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0008 16)) 16)))
"Fold templates"
(list
 #<load-data>
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0003 16))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0003 16))
  x?$4554
  x?$4555
  x?$4556))
here(#<load-data> #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (bv #x0003 16)) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (bv #x0003 16)) x?$4554 x?$4555 x?$4556))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0008 16)) 16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0008 16)) 16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$4561) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$4561) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$4561) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$4561) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$4561) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$4561) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$4561) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$4561) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 8 idx$4561) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 5 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0008 16)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0003 16))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$4625 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$4625 idx)))))
optimized-halide-expr:
  (vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
optimized-template:
  (vs-shift-right ... #<abstr-expr> (int16_t (bv #x0003 16)) #f #f #t)
optimized Halide 0:
  (int16_t
 (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$4625 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$4625 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$4625 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))))
optimized x86 0:
  (int16_t (bvashr (app abstr-vals$4625 0) (bv #x0003 16)))
Ran synthesizer for 674 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0008 16)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0003 16))
 x?$4554
 x?$4555
 x?$4556)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$4626 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$4626 idx)))))
optimized-halide-expr:
  (vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int16_t (bv #x0003 16))
 x?$4554
 x?$4555
 x?$4556)
optimized Halide 0:
  (int16_t
 (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$4626 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$4626 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$4626 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))))
optimized x86 0:
  (int16_t
 (ite x?$4554 (bvadd (ite x?$4556 (bvashr (app abstr-vals$4626 0) (bv #x0003 16)) (bvlshr (app abstr-vals$4626 0) (bv #x0003 16))) (bvand (bv #x0001 16) (ite x?$4556 (bvashr (app abstr-vals$4626 0) (bv #x0002 16)) (bvlshr (app abstr-vals$4626 0) (bv #x0002 16))))) (ite x?$4556 (bvashr (app abstr-vals$4626 0) (bv #x0003 16)) (bvlshr (app abstr-vals$4626 0) (bv #x0003 16)))))
Ran synthesizer for 656 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-bwand
 (sca-broadcast (int16_t (bv #x0001 16)) 16)
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0008 16)) 16)))
template:
  (bitwise-op
 ...
 'and
 (broadcast ... (int16_t (bv #x0001 16)))
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0003 16))
  #f
  #f
  #t))
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$4627 idx) (bv #x0001 16)) (bvsle (bv #x0001 16) (app abstr-vals$4627 idx))))
 (forall (idx) (&& (bvsle (app abstr-vals$4628 idx) (bv #x01fe 16)) (bvsle (bv #x0000 16) (app abstr-vals$4628 idx)))))
optimized-halide-expr:
  (vec-bwand #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (bitwise-op ... 'and #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (int16_t (bvand (app abstr-vals$4627 0) (app abstr-vals$4628 0)))
optimized x86 0:
  (int16_t (bvand (app abstr-vals$4627 0) (app abstr-vals$4628 0)))
Ran synthesizer for 35 ms
(model)
(vec-bwand #<abstr-halide-expr> #<abstr-halide-expr>)
(bitwise-op
 ...
 'and
 (broadcast ... (int16_t (bv #x0001 16)))
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0003 16))
  #f
  #f
  #t))
Ran bounds analysis for 19 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(bitwise-op
 ...
 'and
 (broadcast ... (int16_t (bv #x0001 16)))
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0003 16))
  #f
  #f
  #t))
"Building Expr:"
(sca-broadcast (int16_t (bv #x0010 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0010 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0010 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0010 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0010 16)))
optimized Halide 0:
  (int16_t (bv #x0010 16))
optimized x86 0:
  (int16_t (bv #x0010 16))
Ran synthesizer for 17 ms
(model)
(sca-broadcast (int16_t (bv #x0010 16)) 16)
(broadcast ... (int16_t (bv #x0010 16)))
Ran bounds analysis for 25 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0010 16)))
"Building Expr:"
(vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0010 16)) 16))
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0010 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0010 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$4635) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$4635) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$4635) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$4635) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$4635) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$4635) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$4635) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$4635) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 8 idx$4635) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 6 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-add
  (vec-add
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't15) 1) 1 16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0002 16)) 16))
    (vec-add
     (vec-add
      (vec-mul
       (vec-add
        (vec-add
         (vec-add
          (vec-mul
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't15) 1 16)
             (aligned 1 0))
            'int16
            16)
           (sca-broadcast (int16_t (bv #x0002 16)) 16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't24) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (var-lookup 't25) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) -1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) -1) 1 16)
       (aligned 1 0))
      'int16
      16)))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't24) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (vec-cast
   (load
    (buffer input 'uint8)
    (ramp (sca-add (var-lookup 't25) 1) 1 16)
    (aligned 1 0))
   'int16
   16))
 (sca-broadcast (int16_t (bv #x0010 16)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0004 16))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$4699 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$4699 idx)))))
optimized-halide-expr:
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16))
optimized-template:
  (vs-shift-right ... #<abstr-expr> (int16_t (bv #x0004 16)) #f #f #t)
optimized Halide 0:
  (int16_t
 (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$4699 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$4699 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$4699 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64)))))
optimized x86 0:
  (int16_t (bvashr (app abstr-vals$4699 0) (bv #x0004 16)))
Ran synthesizer for 675 ms
(model)
(vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16))
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0004 16))
 #f
 #f
 #t)
Ran bounds analysis for 23 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0004 16))
 #f
 #f
 #t)
"Building Expr:"
(vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
"Fold templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (union [x?$4708 #(struct:int16_t (bv #x0002 16))] [(! x?$4708) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  x?$4706
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (sca-mul
      (sca-cast (int16_t (bv #x0002 16)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (int8_t (bv #x01 8))
     (int8_t (bv #x01 8))
     (int16_t (bv #x0002 16))
     (int8_t (bv #x01 8))
     (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$4709 #(struct:bitwise-op
                     ...
                     and
                     #(struct:broadcast ... #(struct:int16_t (bv #x0001 16)))
                     #(struct:vs-shift-right
                       ...
                       #(struct:vs-mpy-add
                         ...
                         #<load-data>
                         (#(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int8_t (bv #x01 8))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int8_t (bv #x01 8))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int8_t (bv #x01 8))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:int8_t (bv #x01 8))
                          #(struct:int8_t (bv #x01 8))
                          #(struct:int16_t (bv #x0002 16))
                          #(struct:int8_t (bv #x01 8))
                          #(struct:int8_t (bv #x01 8)))
                         #f
                         #f
                         #f
                         int16)
                       #(struct:int16_t (bv #x0003 16))
                       #f
                       #f
                       #t))] [(! x?$4709) #(struct:vs-shift-right
                                            ...
                                            #(struct:vs-mpy-add
                                              ...
                                              #<load-data>
                                              (#(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int8_t (bv #x01 8))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int8_t (bv #x01 8))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int8_t (bv #x01 8))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:int8_t (bv #x01 8))
                                               #(struct:int8_t (bv #x01 8))
                                               #(struct:int16_t (bv #x0002 16))
                                               #(struct:int8_t (bv #x01 8))
                                               #(struct:int8_t (bv #x01 8)))
                                              #f
                                              #f
                                              #f
                                              int16)
                                            #(struct:int16_t (bv #x0004 16))
                                            #f
                                            #f
                                            #t)]))
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (ite x?$4701 (bv #x0003 16) (bv #x0004 16)))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0003 16))
  x?$4702
  x?$4703
  x?$4704)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (union [x?$4845 #(struct:int16_t (bv #x0002 16))] [(! x?$4845) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  x?$4843
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (sca-mul
      (sca-cast (int16_t (bv #x0002 16)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (sca-mul
      (sca-cast (int8_t (bv #x01 8)) 'int16)
      (sca-cast (int16_t (bv #x0002 16)) 'int16))
     (int8_t (bv #x01 8))
     (int8_t (bv #x01 8))
     (int16_t (bv #x0002 16))
     (int8_t (bv #x01 8))
     (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$4846 #(struct:bitwise-op
                     ...
                     and
                     #(struct:broadcast ... #(struct:int16_t (bv #x0001 16)))
                     #(struct:vs-shift-right
                       ...
                       #(struct:vs-mpy-add
                         ...
                         #<load-data>
                         (#(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int8_t (bv #x01 8))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int8_t (bv #x01 8))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:sca-mul
                            #(struct:sca-cast
                              #(struct:int8_t (bv #x01 8))
                              int16)
                            #(struct:sca-cast
                              #(struct:int16_t (bv #x0002 16))
                              int16))
                          #(struct:int8_t (bv #x01 8))
                          #(struct:int8_t (bv #x01 8))
                          #(struct:int16_t (bv #x0002 16))
                          #(struct:int8_t (bv #x01 8))
                          #(struct:int8_t (bv #x01 8)))
                         #f
                         #f
                         #f
                         int16)
                       #(struct:int16_t (bv #x0003 16))
                       #f
                       #f
                       #t))] [(! x?$4846) #(struct:vs-shift-right
                                            ...
                                            #(struct:vs-mpy-add
                                              ...
                                              #<load-data>
                                              (#(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int8_t (bv #x01 8))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int8_t (bv #x01 8))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:sca-mul
                                                 #(struct:sca-cast
                                                   #(struct:int8_t (bv #x01 8))
                                                   int16)
                                                 #(struct:sca-cast
                                                   #(struct:int16_t
                                                     (bv #x0002 16))
                                                   int16))
                                               #(struct:int8_t (bv #x01 8))
                                               #(struct:int8_t (bv #x01 8))
                                               #(struct:int16_t (bv #x0002 16))
                                               #(struct:int8_t (bv #x01 8))
                                               #(struct:int8_t (bv #x01 8)))
                                              #f
                                              #f
                                              #f
                                              int16)
                                            #(struct:int16_t (bv #x0004 16))
                                            #f
                                            #f
                                            #t)]))
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (ite x?$4838 (bv #x0003 16) (bv #x0004 16)))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0004 16))
  x?$4839
  x?$4840
  x?$4841))
here(#(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1421402258239)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f x?$4706 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 405974927157)> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (ite x?$4701 (bv #x0003 16) (bv #x0004 16))) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (bv #x0003 16)) x?$4702 x?$4703 x?$4704) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1421456821650)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f x?$4843 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 406032581933)> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (ite x?$4838 (bv #x0003 16) (bv #x0004 16))) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (bv #x0004 16)) x?$4839 x?$4840 x?$4841))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$4975) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$4975) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$4975) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$4975) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$4975) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$4975) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$4975) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$4975) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 8 idx$4975) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 8 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$4708 #(struct:int16_t (bv #x0002 16))] [(! x?$4708) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$4708 #(struct:int16_t (bv #x0002 16))] [(! x?$4708) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$406) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$406) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$406) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$406) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$406) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$406) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 6 idx$406) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 7 idx$406) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 8 idx$406) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))) (bitvector 16)) (ite x?$4708 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 1403 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 x?$4706
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 x?$4706
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$4706 (bv #x0001 16) (bv #x0000 16))))))))))))
Ran synthesizer for 1486 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$4845 #(struct:int16_t (bv #x0002 16))] [(! x?$4845) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (union [x?$4845 #(struct:int16_t (bv #x0002 16))] [(! x?$4845) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16)))))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$406) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (⊢ (= 1 idx$406) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 2 idx$406) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$406) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 4 idx$406) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 5 idx$406) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 6 idx$406) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 7 idx$406) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 8 idx$406) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))) (bitvector 16)) (ite x?$4845 (bv #x0002 16) (bv #x0001 16)))))
Ran synthesizer for 1611 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 x?$4843
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 x?$4843
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$4843 (bv #x0001 16) (bv #x0000 16))))))))))))
Ran synthesizer for 1654 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (ite x?$4701 (bv #x0003 16) (bv #x0004 16)))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$5039 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$5039 idx)))))
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int16_t (ite x?$4701 (bv #x0003 16) (bv #x0004 16)))
 #f
 #f
 #t)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5039 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5039 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5039 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5039 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5039 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5039 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (bvashr (app abstr-vals$5039 0) (ite x?$4701 (bv #x0003 16) (bv #x0004 16))))
Ran synthesizer for 2204 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0003 16))
 x?$4702
 x?$4703
 x?$4704)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$5040 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$5040 idx)))))
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int16_t (bv #x0003 16))
 x?$4702
 x?$4703
 x?$4704)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5040 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5040 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5040 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5040 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5040 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5040 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (ite x?$4702 (bvadd (ite x?$4704 (bvashr (app abstr-vals$5040 0) (bv #x0003 16)) (bvlshr (app abstr-vals$5040 0) (bv #x0003 16))) (bvand (bv #x0001 16) (ite x?$4704 (bvashr (app abstr-vals$5040 0) (bv #x0002 16)) (bvlshr (app abstr-vals$5040 0) (bv #x0002 16))))) (ite x?$4704 (bvashr (app abstr-vals$5040 0) (bv #x0003 16)) (bvlshr (app abstr-vals$5040 0) (bv #x0003 16)))))
Ran synthesizer for 1538 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (ite x?$4838 (bv #x0003 16) (bv #x0004 16)))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$5041 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$5041 idx)))))
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int16_t (ite x?$4838 (bv #x0003 16) (bv #x0004 16)))
 #f
 #f
 #t)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5041 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5041 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5041 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5041 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5041 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5041 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (bvashr (app abstr-vals$5041 0) (ite x?$4838 (bv #x0003 16) (bv #x0004 16))))
Ran synthesizer for 2295 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div
  (vec-add
   (vec-add
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't15) 1) 1 16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0002 16)) 16))
     (vec-add
      (vec-add
       (vec-mul
        (vec-add
         (vec-add
          (vec-add
           (vec-mul
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't15) 1 16)
              (aligned 1 0))
             'int16
             16)
            (sca-broadcast (int16_t (bv #x0002 16)) 16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't24) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (var-lookup 't25) 1 16)
            (aligned 1 0))
           'int16
           16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't15) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't24) -1) 1 16)
         (aligned 1 0))
        'int16
        16))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't25) -1) 1 16)
        (aligned 1 0))
       'int16
       16)))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't24) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (vec-cast
    (load
     (buffer input 'uint8)
     (ramp (sca-add (var-lookup 't25) 1) 1 16)
     (aligned 1 0))
    'int16
    16))
  (sca-broadcast (int16_t (bv #x0010 16)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0004 16))
 x?$4839
 x?$4840
 x?$4841)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$5042 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$5042 idx)))))
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16)))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int16_t (bv #x0004 16))
 x?$4839
 x?$4840
 x?$4841)
optimized Halide 0:
  (int16_t
 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5042 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5042 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5042 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5042 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5042 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5042 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64))))))
optimized x86 0:
  (int16_t
 (ite x?$4839 (bvadd (ite x?$4841 (bvashr (app abstr-vals$5042 0) (bv #x0004 16)) (bvlshr (app abstr-vals$5042 0) (bv #x0004 16))) (bvand (bv #x0001 16) (ite x?$4841 (bvashr (app abstr-vals$5042 0) (bv #x0003 16)) (bvlshr (app abstr-vals$5042 0) (bv #x0003 16))))) (ite x?$4841 (bvashr (app abstr-vals$5042 0) (bv #x0004 16)) (bvlshr (app abstr-vals$5042 0) (bv #x0004 16)))))
Ran synthesizer for 2267 ms
(model
 [x?$4839 #t])
(vec-add
 (vec-bwand
  (sca-broadcast (int16_t (bv #x0001 16)) 16)
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
 (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16)))
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0004 16))
 #t
 x?$4840
 x?$4841)
Ran bounds analysis for 31 ms
Ran bounds analysis for 26 ms
"Success?"
#t
(vs-shift-right ... (vs-mpy-add ... #<load-data> (list (sca-mul (sca-cast (int16_t (bv #x0002 16)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (sca-mul (sca-cast (int8_t (bv #x01 8)) 'int16) (sca-cast (int16_t (bv #x0002 16)) 'int16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8)) (int16_t (bv #x0002 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'int16) (int16_t (bv #x0004 16)) #t x?$4840 x?$4841)
"Building Expr:"
(vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  x?$5048
  x?$5049
  x?$5050
  'int16)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (ite x?$5044 (bv #x0003 16) (bv #x0004 16)))
  #t
  x?$4840
  x?$4841)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0004 16))
  x?$5045
  x?$5046
  x?$5047))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) x?$5048 x?$5049 x?$5050 int16) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (ite x?$5044 (bv #x0003 16) (bv #x0004 16))) #t x?$4840 x?$4841) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast #(struct:int16_t (bv #x0002 16)) int16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0002 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #(struct:int16_t (bv #x0004 16)) x?$5045 x?$5046 x?$5047))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (extract 7 0 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$5052) (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 1 idx$5052) (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 2 idx$5052) (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 3 idx$5052) (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (⊢ (= 4 idx$5052) (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 5 idx$5052) (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (⊢ (= 6 idx$5052) (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))))) (⊢ (= 7 idx$5052) (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))))) (⊢ (= 8 idx$5052) (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))))
Ran synthesizer for 1703 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 x?$5048
 x?$5049
 x?$5050
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (sca-mul
   (sca-cast (int16_t (bv #x0002 16)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast (int16_t (bv #x0002 16)) 'int16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8))
  (int16_t (bv #x0002 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 x?$5048
 x?$5049
 x?$5050
 'int16)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bvneg (bvashr (sign-extend (bvadd (zero-extend (app input (+ 1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)) (bvadd (zero-extend (app input (+ 1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16)) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ 1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bvadd (bvmul (bv #x0002 16) (bvadd (bvadd (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (zero-extend (app input (+ -1 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16)))) (zero-extend (app input (+ -1 (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47)))) (bitvector 16))) (zero-extend (app input (+ -1 (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))))) (bitvector 16)))))) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64)))))))
optimized x86 0:
  (int16_t
 (ite* (⊢ (&& (! x?$5050) (! (&& x?$5048 x?$5050))) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))))) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))))) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))))) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ t47 (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))))) (ite x?$5048 (bvadd (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0002 16) (zero-extend (app input (+ (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42)))) (- t47))) (bitvector 16))) (ite x?$5048 (bvadd (ite x?$5049 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16))))) (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0004 16) (zero-extend (app input (+ (+ -16 output.s0.x.x) (+ t67 (- (+ t61 t42))))) (bitvector 16))) (ite x?$5049 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0000 16))))) ...)) ...) ...) ...) ...) ...) ...) ...) ...) ...) ...) ...) ...) ...)) ...))
Ran synthesizer for 12 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (ite x?$5044 (bv #x0003 16) (bv #x0004 16)))
 #t
 x?$4840
 x?$4841)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$5116 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$5116 idx)))))
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int16_t (ite x?$5044 (bv #x0003 16) (bv #x0004 16)))
 #t
 x?$4840
 x?$4841)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5116 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5116 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5116 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5116 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5116 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5116 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64)))))))
optimized x86 0:
  (int16_t
 (bvadd (ite x?$4841 (bvashr (app abstr-vals$5116 0) (ite x?$5044 (bv #x0003 16) (bv #x0004 16))) (bvlshr (app abstr-vals$5116 0) (ite x?$5044 (bv #x0003 16) (bv #x0004 16)))) (bvand (bv #x0001 16) (ite x?$4841 (bvashr (app abstr-vals$5116 0) (ite x?$5044 (bv #x0002 16) (bv #x0003 16))) (bvlshr (app abstr-vals$5116 0) (ite x?$5044 (bv #x0002 16) (bv #x0003 16)))))))
Ran synthesizer for 21 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (sca-mul
    (sca-cast (int16_t (bv #x0002 16)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast (int16_t (bv #x0002 16)) 'int16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8))
   (int16_t (bv #x0002 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 (int16_t (bv #x0004 16))
 x?$5045
 x?$5046
 x?$5047)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$5117 idx) (bv #x0ff0 16)) (bvsle (bv #x0000 16) (app abstr-vals$5117 idx)))))
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int16_t (bv #x0004 16))
 x?$5045
 x?$5046
 x?$5047)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (bvadd (bvand (bv #x0001 16) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5117 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5117 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5117 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000008 64))))) (extract 15 0 (bvadd (bvashr (sign-extend (app abstr-vals$5117 0) (bitvector 64)) (bv #x000000000000003f 64)) (bvsdiv (bvadd (sign-extend (app abstr-vals$5117 0) (bitvector 64)) (bvneg (bvashr (sign-extend (app abstr-vals$5117 0) (bitvector 64)) (bv #x000000000000003f 64)))) (bv #x0000000000000010 64)))))))
optimized x86 0:
  (int16_t
 (ite x?$5045 (bvadd (ite x?$5047 (bvashr (app abstr-vals$5117 0) (bv #x0004 16)) (bvlshr (app abstr-vals$5117 0) (bv #x0004 16))) (bvand (bv #x0001 16) (ite x?$5047 (bvashr (app abstr-vals$5117 0) (bv #x0003 16)) (bvlshr (app abstr-vals$5117 0) (bv #x0003 16))))) (ite x?$5047 (bvashr (app abstr-vals$5117 0) (bv #x0004 16)) (bvlshr (app abstr-vals$5117 0) (bv #x0004 16)))))
Ran synthesizer for 21 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)
template:
  (cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0004 16))
  #t
  x?$4840
  x?$4841)
 'uint8
 #f)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$5118 idx) (bv #x00ff 16)) (bvsle (bv #x0000 16) (app abstr-vals$5118 idx)))))
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint8 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #f)
optimized Halide 0:
  (uint8_t (extract 7 0 (app abstr-vals$5118 0)))
optimized x86 0:
  (uint8_t (extract 7 0 (app abstr-vals$5118 0)))
Ran synthesizer for 38 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint8 16)
(cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0004 16))
  #t
  x?$4840
  x?$4841)
 'uint8
 #f)
Ran bounds analysis for 23 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0004 16))
  #t
  x?$4840
  x?$4841)
 'uint8
 #f)

(x86) Successfully found an equivalent IR expression.

(cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (sca-mul
     (sca-cast (int16_t (bv #x0002 16)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (sca-mul
     (sca-cast (int8_t (bv #x01 8)) 'int16)
     (sca-cast (int16_t (bv #x0002 16)) 'int16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8))
    (int16_t (bv #x0002 16))
    (int8_t (bv #x01 8))
    (int8_t (bv #x01 8)))
   #f
   #f
   #f
   'int16)
  (int16_t (bv #x0004 16))
  #t
  x?$4840
  x?$4841)
 'uint8
 #f)

Synthesis time: 26 seconds

Synthesizing x86 for:
(vec-cast
 (vec-add
  (vec-bwand
   (sca-broadcast (int16_t (bv #x0001 16)) 16)
   (vec-div
    (vec-add
     (vec-add
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't15) 1) 1 16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0002 16)) 16))
       (vec-add
        (vec-add
         (vec-mul
          (vec-add
           (vec-add
            (vec-add
             (vec-mul
              (vec-cast
               (load
                (buffer input 'uint8)
                (ramp (var-lookup 't15) 1 16)
                (aligned 1 0))
               'int16
               16)
              (sca-broadcast (int16_t (bv #x0002 16)) 16))
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't24) 1 16)
               (aligned 1 0))
              'int16
              16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't25) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (sca-add (var-lookup 't15) -1) 1 16)
             (aligned 1 0))
            'int16
            16))
          (sca-broadcast (int16_t (bv #x0002 16)) 16))
         (vec-cast
          (load
           (buffer input 'uint8)
           (ramp (sca-add (var-lookup 't24) -1) 1 16)
           (aligned 1 0))
          'int16
          16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't25) -1) 1 16)
          (aligned 1 0))
         'int16
         16)))
      (vec-cast
       (load
        (buffer input 'uint8)
        (ramp (sca-add (var-lookup 't24) 1) 1 16)
        (aligned 1 0))
       'int16
       16))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't25) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (sca-broadcast (int16_t (bv #x0008 16)) 16)))
  (vec-div
   (vec-add
    (vec-add
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't15) 1) 1 16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0002 16)) 16))
      (vec-add
       (vec-add
        (vec-mul
         (vec-add
          (vec-add
           (vec-add
            (vec-mul
             (vec-cast
              (load
               (buffer input 'uint8)
               (ramp (var-lookup 't15) 1 16)
               (aligned 1 0))
              'int16
              16)
             (sca-broadcast (int16_t (bv #x0002 16)) 16))
            (vec-cast
             (load
              (buffer input 'uint8)
              (ramp (var-lookup 't24) 1 16)
              (aligned 1 0))
             'int16
             16))
           (vec-cast
            (load
             (buffer input 'uint8)
             (ramp (var-lookup 't25) 1 16)
             (aligned 1 0))
            'int16
            16))
          (vec-cast
           (load
            (buffer input 'uint8)
            (ramp (sca-add (var-lookup 't15) -1) 1 16)
            (aligned 1 0))
           'int16
           16))
         (sca-broadcast (int16_t (bv #x0002 16)) 16))
        (vec-cast
         (load
          (buffer input 'uint8)
          (ramp (sca-add (var-lookup 't24) -1) 1 16)
          (aligned 1 0))
         'int16
         16))
       (vec-cast
        (load
         (buffer input 'uint8)
         (ramp (sca-add (var-lookup 't25) -1) 1 16)
         (aligned 1 0))
        'int16
        16)))
     (vec-cast
      (load
       (buffer input 'uint8)
       (ramp (sca-add (var-lookup 't24) 1) 1 16)
       (aligned 1 0))
      'int16
      16))
    (vec-cast
     (load
      (buffer input 'uint8)
      (ramp (sca-add (var-lookup 't25) 1) 1 16)
      (aligned 1 0))
     'int16
     16))
   (sca-broadcast (int16_t (bv #x0010 16)) 16)))
 'uint8
 16)


synthesize-x86 output:
#<void>
#f
