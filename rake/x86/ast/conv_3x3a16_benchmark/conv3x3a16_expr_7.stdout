Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
 (aligned 16 1))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
 (aligned 16 1))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
 (aligned 16 1))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 23 ms
(model
 [idx$0 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
 (aligned 16 1))
#<load-data>
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$131))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$131))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$131)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$131)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$196 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$196 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$131)
Ran bounds analysis for 22 ms
Ran bounds analysis for 13 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$131)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
optimized Halide 0:
  (int8_t (app mask (+ (+ 1 (- t161)) (- t136))))
optimized x86 0:
  (int8_t (app mask (+ (+ 1 (- t161)) (- t136))))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
Ran bounds analysis for 19 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
"Building Expr:"
(vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$199 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$199 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
 'int16
 #f)
Ran bounds analysis for 26 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$201)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
  'int16
  x?$266))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$201) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) int16 x?$266))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't118))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't118))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$459) (! x?$460) (! x?$461) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$462) (! x?$463) (! x?$464) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118))) (list (load-sca (buffer mask 'int8) (var-lookup 't118))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't118))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118))) '(1) (! x?$657) (! x?$658) (! x?$659) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$660) (! x?$661) (! x?$662) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$459) (! x?$460) (! x?$461) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$462) (! x?$463) (! x?$464) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
  (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't118)))
  '(1)
  (! x?$657)
  (! x?$658)
  (! x?$659)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$660) (! x?$661) (! x?$662) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$201)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$201)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$663 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$663 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$664 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$664 0) (bitvector 16))))
Ran synthesizer for 21 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 35 ms
Ran bounds analysis for 34 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't118))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't57) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't57) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't57) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 21 ms
(model
 [idx$666 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't57) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't57) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't57) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't57) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't57) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$795 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$795 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't57) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$797))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$797))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't57) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't57) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't57) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$797)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$797)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$862 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$862 0) (bitvector 16)))
Ran synthesizer for 20 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$797)
Ran bounds analysis for 25 ms
Ran bounds analysis for 17 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$797)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
optimized Halide 0:
  (int8_t (app mask (+ (- t161) (- t136))))
optimized x86 0:
  (int8_t (app mask (+ (- t161) (- t136))))
Ran synthesizer for 20 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
Ran bounds analysis for 24 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
"Building Expr:"
(vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$865 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$865 0) (bitvector 16)))
Ran synthesizer for 19 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
 'int16
 #f)
Ran bounds analysis for 27 ms
Ran bounds analysis for 19 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't57) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$867)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
  'int16
  x?$932))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$867) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>)) int16 x?$932))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't117))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't117))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1125) (! x?$1126) (! x?$1127) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1128) (! x?$1129) (! x?$1130) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117))) (list (load-sca (buffer mask 'int8) (var-lookup 't117))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't117))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117))) '(1) (! x?$1323) (! x?$1324) (! x?$1325) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1326) (! x?$1327) (! x?$1328) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1125) (! x?$1126) (! x?$1127) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1128) (! x?$1129) (! x?$1130) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
  (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't117)))
  '(1)
  (! x?$1323)
  (! x?$1324)
  (! x?$1325)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1326) (! x?$1327) (! x?$1328) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't57) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't57) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't57) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$867)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$867)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$1329 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1329 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't57) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$1330 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$1330 0) (bitvector 16))))
Ran synthesizer for 18 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 33 ms
Ran bounds analysis for 34 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't117))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
 (aligned 16 2))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
 (aligned 16 2))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
 (aligned 16 2))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 20 ms
(model
 [idx$1332 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
 (aligned 16 2))
#<load-data>
Ran bounds analysis for 20 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$1461 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$1461 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$1463))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$1463))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$1463)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$1463)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$1528 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1528 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$1463)
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$1463)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
optimized Halide 0:
  (int8_t (app mask (+ (- t136) (+ 2 (- t161)))))
optimized x86 0:
  (int8_t (app mask (+ (- t136) (+ 2 (- t161)))))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
Ran bounds analysis for 18 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
"Building Expr:"
(vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$1531 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$1531 0) (bitvector 16)))
Ran synthesizer for 14 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
 'int16
 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$1533)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
  'int16
  x?$1598))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$1533) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)) int16 x?$1598))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't116))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't116))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1791) (! x?$1792) (! x?$1793) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1794) (! x?$1795) (! x?$1796) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116))) (list (load-sca (buffer mask 'int8) (var-lookup 't116))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't116))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116))) '(1) (! x?$1989) (! x?$1990) (! x?$1991) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1992) (! x?$1993) (! x?$1994) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1791) (! x?$1792) (! x?$1793) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1794) (! x?$1795) (! x?$1796) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
  (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't116)))
  '(1)
  (! x?$1989)
  (! x?$1990)
  (! x?$1991)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1992) (! x?$1993) (! x?$1994) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$1533)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$1533)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16)) (zero-extend (app abstr-vals$1995 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1995 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16)) (zero-extend (app abstr-vals$1996 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16)) (zero-extend (app abstr-vals$1996 0) (bitvector 16))))
Ran synthesizer for 15 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 28 ms
Ran bounds analysis for 30 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't116))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't84) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't84) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't84) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 18 ms
(model
 [idx$1998 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't84) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 16 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't84) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't84) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't84) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't84) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$2127 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$2127 0) (bitvector 16)))
Ran synthesizer for 16 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 27 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't84) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$2129))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$2129))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't84) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't84) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't84) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$2129)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$2129)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$2194 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$2194 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$2129)
Ran bounds analysis for 20 ms
Ran bounds analysis for 14 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$2129)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
optimized Halide 0:
  (int8_t (app mask (+ t163 (- t136))))
optimized x86 0:
  (int8_t (app mask (+ t163 (- t136))))
Ran synthesizer for 16 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
Ran bounds analysis for 19 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
"Building Expr:"
(vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$2197 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$2197 0) (bitvector 16)))
Ran synthesizer for 16 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
 'int16
 #f)
Ran bounds analysis for 26 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't84) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$2199)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
  'int16
  x?$2264))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$2199) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)) int16 x?$2264))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't91))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't91))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$2457) (! x?$2458) (! x?$2459) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$2460) (! x?$2461) (! x?$2462) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91))) (list (load-sca (buffer mask 'int8) (var-lookup 't91))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't91))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91))) '(1) (! x?$2655) (! x?$2656) (! x?$2657) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$2658) (! x?$2659) (! x?$2660) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$2457) (! x?$2458) (! x?$2459) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$2460) (! x?$2461) (! x?$2462) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
  (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't91)))
  '(1)
  (! x?$2655)
  (! x?$2656)
  (! x?$2657)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$2658) (! x?$2659) (! x?$2660) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't84) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't84) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't84) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$2199)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$2199)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ t163 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$2661 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$2661 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't84) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ t163 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$2662 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ t163 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$2662 0) (bitvector 16))))
Ran synthesizer for 18 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 31 ms
Ran bounds analysis for 30 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't91))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
 (aligned 16 1))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
 (aligned 16 1))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
 (aligned 16 1))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 20 ms
(model
 [idx$2664 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
 (aligned 16 1))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$2793 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$2793 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 21 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$2795))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$2795))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$2795)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$2795)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$2860 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$2860 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$2795)
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$2795)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
optimized Halide 0:
  (int8_t (app mask (+ 1 (+ t163 (- t136)))))
optimized x86 0:
  (int8_t (app mask (+ 1 (+ t163 (- t136)))))
Ran synthesizer for 17 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
Ran bounds analysis for 19 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
"Building Expr:"
(vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$2863 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$2863 0) (bitvector 16)))
Ran synthesizer for 14 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 'int16
 #f)
Ran bounds analysis for 21 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$2865)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  'int16
  x?$2930))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$2865) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1))) int16 x?$2930))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$3123) (! x?$3124) (! x?$3125) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$3126) (! x?$3127) (! x?$3128) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) '(1) (! x?$3321) (! x?$3322) (! x?$3323) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$3324) (! x?$3325) (! x?$3326) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$3123) (! x?$3124) (! x?$3125) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$3126) (! x?$3127) (! x?$3128) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  '(1)
  (! x?$3321)
  (! x?$3322)
  (! x?$3323)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$3324) (! x?$3325) (! x?$3326) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$2865)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$2865)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$3327 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$3327 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$3328 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$3328 0) (bitvector 16))))
Ran synthesizer for 17 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 29 ms
Ran bounds analysis for 31 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
 (aligned 16 2))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
 (aligned 16 2))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
 (aligned 16 2))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 21 ms
(model
 [idx$3330 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
 (aligned 16 2))
#<load-data>
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$3459 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$3459 0) (bitvector 16)))
Ran synthesizer for 16 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 21 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$3461))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$3461))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$3461)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$3461)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$3526 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$3526 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$3461)
Ran bounds analysis for 23 ms
Ran bounds analysis for 14 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$3461)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
optimized Halide 0:
  (int8_t (app mask (+ 2 (+ t163 (- t136)))))
optimized x86 0:
  (int8_t (app mask (+ 2 (+ t163 (- t136)))))
Ran synthesizer for 16 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
Ran bounds analysis for 19 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
"Building Expr:"
(vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$3529 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$3529 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 'int16
 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 31 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$3531)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  'int16
  x?$3596))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$3531) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2))) int16 x?$3596))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$3789) (! x?$3790) (! x?$3791) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$3792) (! x?$3793) (! x?$3794) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) '(1) (! x?$3987) (! x?$3988) (! x?$3989) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$3990) (! x?$3991) (! x?$3992) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$3789) (! x?$3790) (! x?$3791) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$3792) (! x?$3793) (! x?$3794) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  '(1)
  (! x?$3987)
  (! x?$3988)
  (! x?$3989)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$3990) (! x?$3991) (! x?$3992) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$3531)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$3531)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$3993 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$3993 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$3994 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$3994 0) (bitvector 16))))
Ran synthesizer for 21 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 39 ms
Ran bounds analysis for 38 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't53) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't53) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't53) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 21 ms
(model
 [idx$3996 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-mul (var-lookup 't53) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 20 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't53) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't53) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't53) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-mul (var-lookup 't53) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$4125 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$4125 0) (bitvector 16)))
Ran synthesizer for 16 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 20 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't53) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$4127))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$4127))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't53) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't53) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-mul (var-lookup 't53) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$4127)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$4127)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$4192 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$4192 0) (bitvector 16)))
Ran synthesizer for 14 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$4127)
Ran bounds analysis for 19 ms
Ran bounds analysis for 12 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$4127)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
optimized Halide 0:
  (int8_t (app mask (+ t162 (- t136))))
optimized x86 0:
  (int8_t (app mask (+ t162 (- t136))))
Ran synthesizer for 14 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
Ran bounds analysis for 18 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
"Building Expr:"
(vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$4195 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$4195 0) (bitvector 16)))
Ran synthesizer for 16 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
 'int16
 #f)
Ran bounds analysis for 25 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't53) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$4197)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
  'int16
  x?$4262))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$4197) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)) int16 x?$4262))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't92))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't92))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$4455) (! x?$4456) (! x?$4457) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$4458) (! x?$4459) (! x?$4460) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92))) (list (load-sca (buffer mask 'int8) (var-lookup 't92))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't92))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92))) '(1) (! x?$4653) (! x?$4654) (! x?$4655) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$4656) (! x?$4657) (! x?$4658) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$4455) (! x?$4456) (! x?$4457) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$4458) (! x?$4459) (! x?$4460) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
  (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (var-lookup 't92)))
  '(1)
  (! x?$4653)
  (! x?$4654)
  (! x?$4655)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$4656) (! x?$4657) (! x?$4658) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't53) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't53) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't53) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$4197)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$4197)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ t162 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$4659 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$4659 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-mul (var-lookup 't53) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ t162 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$4660 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ t162 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$4660 0) (bitvector 16))))
Ran synthesizer for 17 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 33 ms
Ran bounds analysis for 33 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (var-lookup 't92))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
 (aligned 16 2))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
 (aligned 16 2))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
 (aligned 16 2))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 18 ms
(model
 [idx$4662 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
 (aligned 16 2))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
  (aligned 16 2))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$4791 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$4791 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$4793))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$4793))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
   (aligned 16 2))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$4793)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$4793)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$4858 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$4858 0) (bitvector 16)))
Ran synthesizer for 16 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$4793)
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$4793)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
optimized Halide 0:
  (int8_t (app mask (+ 2 (+ t162 (- t136)))))
optimized x86 0:
  (int8_t (app mask (+ 2 (+ t162 (- t136)))))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
Ran bounds analysis for 19 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
"Building Expr:"
(vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$4861 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$4861 0) (bitvector 16)))
Ran synthesizer for 22 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
 'int16
 #f)
Ran bounds analysis for 31 ms
Ran bounds analysis for 19 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$4863)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  'int16
  x?$4928))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$4863) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2))) int16 x?$4928))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$5121) (! x?$5122) (! x?$5123) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$5124) (! x?$5125) (! x?$5126) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))) (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))) '(1) (! x?$5319) (! x?$5320) (! x?$5321) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$5322) (! x?$5323) (! x?$5324) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$5121) (! x?$5122) (! x?$5123) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$5124) (! x?$5125) (! x?$5126) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  '(1)
  (! x?$5319)
  (! x?$5320)
  (! x?$5321)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$5322) (! x?$5323) (! x?$5324) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$4863)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$4863)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$5325 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$5325 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
    (aligned 16 2))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$5326 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$5326 0) (bitvector 16))))
Ran synthesizer for 18 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 34 ms
Ran bounds analysis for 38 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
 (aligned 16 1))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
 (aligned 16 1))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
 (aligned 16 1))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 22 ms
(model
 [idx$5328 0])
(load
 (buffer input_bounded 'uint8)
 (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
 (aligned 16 1))
#<load-data>
Ran bounds analysis for 22 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input_bounded 'uint8)
  (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
  (aligned 16 1))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$5457 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$5457 0) (bitvector 16)))
Ran synthesizer for 19 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$5459))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$5459))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer input_bounded 'uint8)
   (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
   (aligned 16 1))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$5459)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$5459)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$5524 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$5524 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$5459)
Ran bounds analysis for 22 ms
Ran bounds analysis for 15 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$5459)
"Building Expr:"
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) 16)
template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) 16)
optimized-template:
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
optimized Halide 0:
  (int8_t (app mask (+ 1 (+ t162 (- t136)))))
optimized x86 0:
  (int8_t (app mask (+ 1 (+ t162 (- t136)))))
Ran synthesizer for 17 ms
(model)
(sca-broadcast (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) 16)
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
"Building Expr:"
(vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  16)
 'int16
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  16)
 'int16
 16)
template:
  (cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
 'int16
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$5527 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$5527 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
 'int16
 #f)
Ran bounds analysis for 25 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(cast
 ...
 (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
 'int16
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$5529)
 (cast
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
  'int16
  x?$5594))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$5529) #(struct:cast ... #(struct:broadcast ... #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1))) int16 x?$5594))

(list (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$5787) (! x?$5788) (! x?$5789) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$5790) (! x?$5791) (! x?$5792) 'int16))
(list (vs-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) '(1) (! x?$5985) (! x?$5986) (! x?$5987) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$5988) (! x?$5989) (! x?$5990) 'int16))
"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$5787) (! x?$5788) (! x?$5789) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$5790) (! x?$5791) (! x?$5792) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
  #f
  #f
  #f
  'int16)
 (vv-mpy-add
  ...
  (broadcast ... (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
  '(1)
  (! x?$5985)
  (! x?$5986)
  (! x?$5987)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$5988) (! x?$5989) (! x?$5990) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
template:
  (cast ... #<load-data> 'int16 x?$5529)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$5529)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$5991 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$5991 0) (bitvector 16)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer input_bounded 'uint8)
    (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
    (aligned 16 1))
   'uint16
   16)
  'int16
  16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
 #f
 #f
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$5992 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$5992 0) (bitvector 16))))
Ran synthesizer for 18 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast
  (sca-broadcast
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   16)
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 32 ms
Ran bounds analysis for 31 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (union [(&& (! xi?$5997) (! xi?$5998)) #(struct:int8_t (bv #x01 8))] [(|| xi?$5997 (&& xi?$5998 (! xi?$5997))) #(struct:load-sca
                                                                                                                    #(struct:buffer
                                                                                                                      mask
                                                                                                                      int8)
                                                                                                                    #(struct:sca-add
                                                                                                                      #<var-lookup:
                                                                                                                       t92>
                                                                                                                      (ite* (⊢ xi?$5997 1) (⊢ (&& xi?$5998 (! xi?$5997)) 2))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
  #f
  x?$5995
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)))
    #f
    #f
    #f
    'int16)
   (union [x?$5999 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #(struct:sca-add #<var-lookup: t92> 2)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$5999) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    (union [(&& (! xi?$6195) (! xi?$6196)) #(struct:int8_t (bv #x01 8))] [(|| xi?$6195 (&& xi?$6196 (! xi?$6195))) #(struct:load-sca
                                                                                                                     #(struct:buffer
                                                                                                                       mask
                                                                                                                       int8)
                                                                                                                     #(struct:sca-add
                                                                                                                       #<var-lookup:
                                                                                                                        t92>
                                                                                                                       (ite* (⊢ xi?$6195 1) (⊢ (&& xi?$6196 (! xi?$6195)) 2))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1)))
  #f
  x?$6193
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1)))
    #f
    #f
    #f
    'int16)
   (union [x?$6197 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #(struct:sca-add #<var-lookup: t92> 2)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$6197) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) (union #:size 2 #:hash 548156802748873859)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2))) #f x?$5995 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2))) #f #f #f int16) (union #:size 2 #:hash 420276482219)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) (union #:size 2 #:hash 548156802759619392)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1))) #f x?$6193 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1))) #f #f #f int16) (union #:size 2 #:hash 420325654010)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$6128) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$6128) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$6326) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$6326) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (union [(&& (! xi?$5997) (! xi?$5998)) #(struct:int8_t (bv #x01 8))] [(|| xi?$5997 (&& xi?$5998 (! xi?$5997))) #(struct:load-sca
                                                                                                                   #(struct:buffer
                                                                                                                     mask
                                                                                                                     int8)
                                                                                                                   #(struct:sca-add
                                                                                                                     #<var-lookup:
                                                                                                                      t92>
                                                                                                                     (ite* (⊢ xi?$5997 1) (⊢ (&& xi?$5998 (! xi?$5997)) 2))))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (union [(&& (! xi?$5997) (! xi?$5998)) #(struct:int8_t (bv #x01 8))] [(|| xi?$5997 (&& xi?$5998 (! xi?$5997))) #(struct:load-sca
                                                                                                                   #(struct:buffer
                                                                                                                     mask
                                                                                                                     int8)
                                                                                                                   #(struct:sca-add
                                                                                                                     #<var-lookup:
                                                                                                                      t92>
                                                                                                                     (ite* (⊢ xi?$5997 1) (⊢ (&& xi?$5998 (! xi?$5997)) 2))))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4663) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4663) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$5997) (! xi?$5998)) (bv #x01 8)) (⊢ (|| xi?$5997 (&& xi?$5998 (! xi?$5997))) (app mask (+ (+ t162 (- t136)) (ite* (⊢ xi?$5997 1) (⊢ (&& xi?$5998 (! xi?$5997)) 2)))))) (bitvector 16)))))
Ran synthesizer for 92 ms
(model
 [idx$4663 1]
 [xi?$5997 #t]
 [xi?$5998 #f])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    16)
   'int16
   16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    16)
   'int16
   16)))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 111 ms
Ran bounds analysis for 80 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (union [(&& (! xi?$6393) (&& (! xi?$6394) (! xi?$6395))) #(struct:int8_t
                                                              (bv #x01 8))] [(|| xi?$6393 (&& (! xi?$6393) (|| xi?$6394 (&& xi?$6395 (! xi?$6394))))) #(struct:load-sca
                                                                                                                                                        #(struct:buffer
                                                                                                                                                          mask
                                                                                                                                                          int8)
                                                                                                                                                        (union #:size 2 #:hash -851756851007340775))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
  #f
  x?$6391
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
    #f
    #f
    #f
    'int16)
   (union [x?$6396 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t92>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$6396) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (load-sca (buffer mask 'int8) (var-lookup 't92)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    (union [(&& (! xi?$6592) (&& (! xi?$6593) (! xi?$6594))) #(struct:int8_t
                                                               (bv #x01 8))] [(|| xi?$6592 (&& (! xi?$6592) (|| xi?$6593 (&& xi?$6594 (! xi?$6593))))) #(struct:load-sca
                                                                                                                                                         #(struct:buffer
                                                                                                                                                           mask
                                                                                                                                                           int8)
                                                                                                                                                         (union #:size 2 #:hash -851756850089640219))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1)))
  #f
  x?$6590
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1)))
    #f
    #f
    #f
    'int16)
   (union [x?$6595 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t92>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$6595) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) (union #:size 2 #:hash -493432866182954147)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)) #f x?$6391 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)) #f #f #f int16) (union #:size 2 #:hash 417626487698)> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) (union #:size 2 #:hash -493434087951763920)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1))) #f x?$6590 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1))) #f #f #f int16) (union #:size 2 #:hash 417678898713)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$6525) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$6525) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$6525) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$6724) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$6724) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$6724) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (union [(&& (! xi?$6393) (&& (! xi?$6394) (! xi?$6395))) #(struct:int8_t
                                                             (bv #x01 8))] [(|| xi?$6393 (&& (! xi?$6393) (|| xi?$6394 (&& xi?$6395 (! xi?$6394))))) #(struct:load-sca
                                                                                                                                                       #(struct:buffer
                                                                                                                                                         mask
                                                                                                                                                         int8)
                                                                                                                                                       (union #:size 2 #:hash -851756851007340775))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (union [(&& (! xi?$6393) (&& (! xi?$6394) (! xi?$6395))) #(struct:int8_t
                                                             (bv #x01 8))] [(|| xi?$6393 (&& (! xi?$6393) (|| xi?$6394 (&& xi?$6395 (! xi?$6394))))) #(struct:load-sca
                                                                                                                                                       #(struct:buffer
                                                                                                                                                         mask
                                                                                                                                                         int8)
                                                                                                                                                       (union #:size 2 #:hash -851756851007340775))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$3997) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$3997) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$3997) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$6393) (&& (! xi?$6394) (! xi?$6395))) (bv #x01 8)) (⊢ (|| xi?$6393 (&& (! xi?$6393) (|| xi?$6394 (&& xi?$6395 (! xi?$6394))))) (app mask (ite* (⊢ xi?$6393 (+ t162 (- t136))) (⊢ (&& (! xi?$6393) (|| xi?$6394 (&& xi?$6395 (! xi?$6394)))) (+ (+ t162 (- t136)) (ite* (⊢ xi?$6394 1) (⊢ (&& xi?$6395 (! xi?$6394)) 2)))))))) (bitvector 16)))))
Ran synthesizer for 189 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
 #f
 x?$6391
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't92)))
 #f
 x?$6391
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))) (bvmul (sign-extend (app mask (+ t162 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$6788 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (sign-extend (app mask (+ t162 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$6788 0) (bitvector 16))) (ite x?$6391 (bv #x0001 16) (bv #x0000 16))))
Ran synthesizer for 89 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (union [(&& (! xi?$6592) (&& (! xi?$6593) (! xi?$6594))) #(struct:int8_t
                                                             (bv #x01 8))] [(|| xi?$6592 (&& (! xi?$6592) (|| xi?$6593 (&& xi?$6594 (! xi?$6593))))) #(struct:load-sca
                                                                                                                                                       #(struct:buffer
                                                                                                                                                         mask
                                                                                                                                                         int8)
                                                                                                                                                       (union #:size 2 #:hash -851756850089640219))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (union [(&& (! xi?$6592) (&& (! xi?$6593) (! xi?$6594))) #(struct:int8_t
                                                             (bv #x01 8))] [(|| xi?$6592 (&& (! xi?$6592) (|| xi?$6593 (&& xi?$6594 (! xi?$6593))))) #(struct:load-sca
                                                                                                                                                       #(struct:buffer
                                                                                                                                                         mask
                                                                                                                                                         int8)
                                                                                                                                                       (union #:size 2 #:hash -851756850089640219))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4664) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4664) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$4664) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$6592) (&& (! xi?$6593) (! xi?$6594))) (bv #x01 8)) (⊢ (|| xi?$6592 (&& (! xi?$6592) (|| xi?$6593 (&& xi?$6594 (! xi?$6593))))) (app mask (ite* (⊢ xi?$6592 (+ t162 (- t136))) (⊢ (&& (! xi?$6592) (|| xi?$6593 (&& xi?$6594 (! xi?$6593)))) (+ (+ t162 (- t136)) (ite* (⊢ xi?$6593 1) (⊢ (&& xi?$6594 (! xi?$6593)) 2)))))))) (bitvector 16)))))
Ran synthesizer for 152 ms
(model
 [idx$4664 2]
 [xi?$6592 #t]
 [xi?$6593 #f]
 [xi?$6594 #f])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't53) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     16)
    'int16
    16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     16)
    'int16
    16))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 288 ms
Ran bounds analysis for 203 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (union [(&& (! xi?$6792) (&& (! xi?$6793) (&& (! xi?$6794) (! xi?$6795)))) #(struct:int8_t
                                                                                (bv #x01 8))] [(|| xi?$6792 (&& (! xi?$6792) (|| xi?$6793 (&& (! xi?$6793) (|| xi?$6794 (&& xi?$6795 (! xi?$6794))))))) #(struct:load-sca
                                                                                                                                                                                                          #(struct:buffer
                                                                                                                                                                                                            mask
                                                                                                                                                                                                            int8)
                                                                                                                                                                                                          (union #:size 2 #:hash 908998137020908765))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
  #f
  x?$6790
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
    #f
    #f
    #f
    'int16)
   (union [x?$6796 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #(struct:sca-add #<var-lookup: t91> 2)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$6796) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    (union [(&& (! xi?$6992) (&& (! xi?$6993) (&& (! xi?$6994) (! xi?$6995)))) #(struct:int8_t
                                                                                 (bv #x01 8))] [(|| xi?$6992 (&& (! xi?$6992) (|| xi?$6993 (&& (! xi?$6993) (|| xi?$6994 (&& xi?$6995 (! xi?$6994))))))) #(struct:load-sca
                                                                                                                                                                                                           #(struct:buffer
                                                                                                                                                                                                             mask
                                                                                                                                                                                                             int8)
                                                                                                                                                                                                           (union #:size 2 #:hash 793140718713466002))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>))
  #f
  x?$6990
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>))
    #f
    #f
    #f
    'int16)
   (union [x?$6996 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #(struct:sca-add #<var-lookup: t91> 2)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$6996) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) (union #:size 2 #:hash 1132342772908147907)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2))) #f x?$6790 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2))) #f #f #f int16) (union #:size 2 #:hash 406001046356)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) (union #:size 2 #:hash -71012177904911851)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)) #f x?$6990 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)) #f #f #f int16) (union #:size 2 #:hash 406048617856)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$6925) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$6925) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$6925) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$6925) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$7125) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$7125) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$7125) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$7125) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (union [(&& (! xi?$6792) (&& (! xi?$6793) (&& (! xi?$6794) (! xi?$6795)))) #(struct:int8_t
                                                                               (bv #x01 8))] [(|| xi?$6792 (&& (! xi?$6792) (|| xi?$6793 (&& (! xi?$6793) (|| xi?$6794 (&& xi?$6795 (! xi?$6794))))))) #(struct:load-sca
                                                                                                                                                                                                         #(struct:buffer
                                                                                                                                                                                                           mask
                                                                                                                                                                                                           int8)
                                                                                                                                                                                                         (union #:size 2 #:hash 908998137020908765))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (union [(&& (! xi?$6792) (&& (! xi?$6793) (&& (! xi?$6794) (! xi?$6795)))) #(struct:int8_t
                                                                               (bv #x01 8))] [(|| xi?$6792 (&& (! xi?$6792) (|| xi?$6793 (&& (! xi?$6793) (|| xi?$6794 (&& xi?$6795 (! xi?$6794))))))) #(struct:load-sca
                                                                                                                                                                                                         #(struct:buffer
                                                                                                                                                                                                           mask
                                                                                                                                                                                                           int8)
                                                                                                                                                                                                         (union #:size 2 #:hash 908998137020908765))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$3331) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 1 idx$3331) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$3331) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$3331) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$6792) (&& (! xi?$6793) (&& (! xi?$6794) (! xi?$6795)))) (bv #x01 8)) (⊢ (|| xi?$6792 (&& (! xi?$6792) (|| xi?$6793 (&& (! xi?$6793) (|| xi?$6794 (&& xi?$6795 (! xi?$6794))))))) (app mask (ite* (⊢ xi?$6792 (+ t162 (- t136))) (⊢ (&& (! xi?$6792) (|| xi?$6793 (&& (! xi?$6793) (|| xi?$6794 (&& xi?$6795 (! xi?$6794)))))) (+ (ite* (⊢ xi?$6793 2) (⊢ (&& (! xi?$6793) (|| xi?$6794 (&& xi?$6795 (! xi?$6794)))) (ite* (⊢ xi?$6794 1) (⊢ (&& xi?$6795 (! xi?$6794)) 2)))) (+ (- t136) (ite* (⊢ xi?$6793 t163) (⊢ (&& (! xi?$6793) (|| xi?$6794 (&& xi?$6795 (! xi?$6794)))) t162))))))))) (bitvector 16)))))
Ran synthesizer for 176 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 #f
 x?$6790
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 #f
 x?$6790
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))) (bvmul (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$7189 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$7189 0) (bitvector 16))) (ite x?$6790 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (union [(&& (! xi?$6992) (&& (! xi?$6993) (&& (! xi?$6994) (! xi?$6995)))) #(struct:int8_t
                                                                               (bv #x01 8))] [(|| xi?$6992 (&& (! xi?$6992) (|| xi?$6993 (&& (! xi?$6993) (|| xi?$6994 (&& xi?$6995 (! xi?$6994))))))) #(struct:load-sca
                                                                                                                                                                                                         #(struct:buffer
                                                                                                                                                                                                           mask
                                                                                                                                                                                                           int8)
                                                                                                                                                                                                         (union #:size 2 #:hash 793140718713466002))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (union [(&& (! xi?$6992) (&& (! xi?$6993) (&& (! xi?$6994) (! xi?$6995)))) #(struct:int8_t
                                                                               (bv #x01 8))] [(|| xi?$6992 (&& (! xi?$6992) (|| xi?$6993 (&& (! xi?$6993) (|| xi?$6994 (&& xi?$6995 (! xi?$6994))))))) #(struct:load-sca
                                                                                                                                                                                                         #(struct:buffer
                                                                                                                                                                                                           mask
                                                                                                                                                                                                           int8)
                                                                                                                                                                                                         (union #:size 2 #:hash 793140718713466002))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4665) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4665) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$4665) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$4665) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$6992) (&& (! xi?$6993) (&& (! xi?$6994) (! xi?$6995)))) (bv #x01 8)) (⊢ (|| xi?$6992 (&& (! xi?$6992) (|| xi?$6993 (&& (! xi?$6993) (|| xi?$6994 (&& xi?$6995 (! xi?$6994))))))) (app mask (ite* (⊢ xi?$6992 (+ t162 (- t136))) (⊢ (&& (! xi?$6992) (|| xi?$6993 (&& (! xi?$6993) (|| xi?$6994 (&& xi?$6995 (! xi?$6994)))))) (+ (ite* (⊢ xi?$6993 2) (⊢ (&& (! xi?$6993) (|| xi?$6994 (&& xi?$6995 (! xi?$6994)))) (ite* (⊢ xi?$6994 1) (⊢ (&& xi?$6995 (! xi?$6994)) 2)))) (+ (- t136) (ite* (⊢ xi?$6993 t163) (⊢ (&& (! xi?$6993) (|| xi?$6994 (&& xi?$6995 (! xi?$6994)))) t162))))))))) (bitvector 16)))))
Ran synthesizer for 129 ms
(model
 [idx$4665 3]
 [xi?$6992 #f]
 [xi?$6993 #t]
 [xi?$6994 #f]
 [xi?$6995 #f])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't53) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      16)
     'int16
     16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      16)
     'int16
     16)))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 160 ms
Ran bounds analysis for 120 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (union [(&& (! xi?$7193) (&& (! xi?$7194) (&& (! xi?$7195) (&& (! xi?$7196) (! xi?$7197))))) #(struct:int8_t
                                                                                                  (bv #x01 8))] [(|| xi?$7193 (&& (! xi?$7193) (|| xi?$7194 (&& (! xi?$7194) (|| xi?$7195 (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                            #(struct:buffer
                                                                                                                                                                                                                                                              mask
                                                                                                                                                                                                                                                              int8)
                                                                                                                                                                                                                                                            (union #:size 2 #:hash -724100080123237218))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
  #f
  x?$7191
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
    #f
    #f
    #f
    'int16)
   (union [x?$7198 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #(struct:sca-add #<var-lookup: t91> 1)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$7198) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    (union [(&& (! xi?$7394) (&& (! xi?$7395) (&& (! xi?$7396) (&& (! xi?$7397) (! xi?$7398))))) #(struct:int8_t
                                                                                                   (bv #x01 8))] [(|| xi?$7394 (&& (! xi?$7394) (|| xi?$7395 (&& (! xi?$7395) (|| xi?$7396 (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                             #(struct:buffer
                                                                                                                                                                                                                                                               mask
                                                                                                                                                                                                                                                               int8)
                                                                                                                                                                                                                                                             (union #:size 2 #:hash -730459374463491940))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2)))
  #f
  x?$7392
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 2)))
    #f
    #f
    #f
    'int16)
   (union [x?$7399 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #(struct:sca-add #<var-lookup: t91> 1)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$7399) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) (union #:size 2 #:hash -1053131905948079778)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1))) #f x?$7191 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1))) #f #f #f int16) (union #:size 2 #:hash 420120012145)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) (union #:size 2 #:hash -654624519721737294)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2))) #f x?$7392 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2))) #f #f #f int16) (union #:size 2 #:hash 420035726794)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$7327) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 1 idx$7327) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$7327) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$7327) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$7327) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$7528) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 1 idx$7528) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$7528) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$7528) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$7528) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (union [(&& (! xi?$7193) (&& (! xi?$7194) (&& (! xi?$7195) (&& (! xi?$7196) (! xi?$7197))))) #(struct:int8_t
                                                                                                 (bv #x01 8))] [(|| xi?$7193 (&& (! xi?$7193) (|| xi?$7194 (&& (! xi?$7194) (|| xi?$7195 (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                           #(struct:buffer
                                                                                                                                                                                                                                                             mask
                                                                                                                                                                                                                                                             int8)
                                                                                                                                                                                                                                                           (union #:size 2 #:hash -724100080123237218))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (union [(&& (! xi?$7193) (&& (! xi?$7194) (&& (! xi?$7195) (&& (! xi?$7196) (! xi?$7197))))) #(struct:int8_t
                                                                                                 (bv #x01 8))] [(|| xi?$7193 (&& (! xi?$7193) (|| xi?$7194 (&& (! xi?$7194) (|| xi?$7195 (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                           #(struct:buffer
                                                                                                                                                                                                                                                             mask
                                                                                                                                                                                                                                                             int8)
                                                                                                                                                                                                                                                           (union #:size 2 #:hash -724100080123237218))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$2665) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 1 idx$2665) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$2665) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$2665) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$2665) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$7193) (&& (! xi?$7194) (&& (! xi?$7195) (&& (! xi?$7196) (! xi?$7197))))) (bv #x01 8)) (⊢ (|| xi?$7193 (&& (! xi?$7193) (|| xi?$7194 (&& (! xi?$7194) (|| xi?$7195 (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196))))))))) (app mask (ite* (⊢ xi?$7193 (+ t162 (- t136))) (⊢ (&& (! xi?$7193) (|| xi?$7194 (&& (! xi?$7194) (|| xi?$7195 (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196)))))))) (+ (ite* (⊢ xi?$7194 1) (⊢ (&& (! xi?$7194) (|| xi?$7195 (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196)))))) (ite* (⊢ xi?$7195 2) (⊢ (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196)))) (ite* (⊢ xi?$7196 1) (⊢ (&& xi?$7197 (! xi?$7196)) 2)))))) (+ (- t136) (ite* (⊢ xi?$7194 t163) (⊢ (&& (! xi?$7194) (|| xi?$7195 (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196)))))) (ite* (⊢ xi?$7195 t163) (⊢ (&& (! xi?$7195) (|| xi?$7196 (&& xi?$7197 (! xi?$7196)))) t162))))))))))) (bitvector 16)))))
Ran synthesizer for 289 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 #f
 x?$7191
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 #f
 x?$7191
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))) (bvmul (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$7592 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16)) (zero-extend (app abstr-vals$7592 0) (bitvector 16))) (ite x?$7191 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (union [(&& (! xi?$7394) (&& (! xi?$7395) (&& (! xi?$7396) (&& (! xi?$7397) (! xi?$7398))))) #(struct:int8_t
                                                                                                 (bv #x01 8))] [(|| xi?$7394 (&& (! xi?$7394) (|| xi?$7395 (&& (! xi?$7395) (|| xi?$7396 (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                           #(struct:buffer
                                                                                                                                                                                                                                                             mask
                                                                                                                                                                                                                                                             int8)
                                                                                                                                                                                                                                                           (union #:size 2 #:hash -730459374463491940))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (union [(&& (! xi?$7394) (&& (! xi?$7395) (&& (! xi?$7396) (&& (! xi?$7397) (! xi?$7398))))) #(struct:int8_t
                                                                                                 (bv #x01 8))] [(|| xi?$7394 (&& (! xi?$7394) (|| xi?$7395 (&& (! xi?$7395) (|| xi?$7396 (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                           #(struct:buffer
                                                                                                                                                                                                                                                             mask
                                                                                                                                                                                                                                                             int8)
                                                                                                                                                                                                                                                           (union #:size 2 #:hash -730459374463491940))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4666) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4666) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$4666) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$4666) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$4666) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$7394) (&& (! xi?$7395) (&& (! xi?$7396) (&& (! xi?$7397) (! xi?$7398))))) (bv #x01 8)) (⊢ (|| xi?$7394 (&& (! xi?$7394) (|| xi?$7395 (&& (! xi?$7395) (|| xi?$7396 (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397))))))))) (app mask (ite* (⊢ xi?$7394 (+ t162 (- t136))) (⊢ (&& (! xi?$7394) (|| xi?$7395 (&& (! xi?$7395) (|| xi?$7396 (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397)))))))) (+ (ite* (⊢ xi?$7395 1) (⊢ (&& (! xi?$7395) (|| xi?$7396 (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397)))))) (ite* (⊢ xi?$7396 2) (⊢ (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397)))) (ite* (⊢ xi?$7397 1) (⊢ (&& xi?$7398 (! xi?$7397)) 2)))))) (+ (- t136) (ite* (⊢ xi?$7395 t163) (⊢ (&& (! xi?$7395) (|| xi?$7396 (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397)))))) (ite* (⊢ xi?$7396 t163) (⊢ (&& (! xi?$7396) (|| xi?$7397 (&& xi?$7398 (! xi?$7397)))) t162))))))))))) (bitvector 16)))))
Ran synthesizer for 210 ms
(model
 [idx$4666 4]
 [xi?$7394 #f]
 [xi?$7395 #t]
 [xi?$7396 #t]
 [xi?$7397 #f]
 [xi?$7398 #t])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't53) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
       16)
      'int16
      16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
       16)
      'int16
      16))))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 244 ms
Ran bounds analysis for 105 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (union [(&& (! xi?$7596) (&& (! xi?$7597) (&& (! xi?$7598) (&& (! xi?$7599) (&& (! xi?$7600) (! xi?$7601)))))) #(struct:int8_t
                                                                                                                    (bv #x01 8))] [(|| xi?$7596 (&& (! xi?$7596) (|| xi?$7597 (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                              #(struct:buffer
                                                                                                                                                                                                                                                                                                                mask
                                                                                                                                                                                                                                                                                                                int8)
                                                                                                                                                                                                                                                                                                              (union #:size 2 #:hash 815417043632252435))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
  #f
  x?$7594
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
    #f
    #f
    #f
    'int16)
   (union [x?$7602 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t91>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$7602) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (load-sca (buffer mask 'int8) (var-lookup 't91)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1))
    (union [(&& (! xi?$7798) (&& (! xi?$7799) (&& (! xi?$7800) (&& (! xi?$7801) (&& (! xi?$7802) (! xi?$7803)))))) #(struct:int8_t
                                                                                                                     (bv #x01 8))] [(|| xi?$7798 (&& (! xi?$7798) (|| xi?$7799 (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                               #(struct:buffer
                                                                                                                                                                                                                                                                                                                 mask
                                                                                                                                                                                                                                                                                                                 int8)
                                                                                                                                                                                                                                                                                                               (union #:size 2 #:hash 488589872549886852))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1)))
  #f
  x?$7796
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 1)))
    #f
    #f
    #f
    'int16)
   (union [x?$7804 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t91>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$7804) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) (union #:size 2 #:hash -274937910805375244)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)) #f x?$7594 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)) #f #f #f int16) (union #:size 2 #:hash 412525003732)> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) (union #:size 2 #:hash -928984715580103732)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1))) #f x?$7796 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1))) #f #f #f int16) (union #:size 2 #:hash 416483756294)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$7731) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 1 idx$7731) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 2 idx$7731) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$7731) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$7731) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$7731) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$7933) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 1 idx$7933) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 2 idx$7933) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$7933) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$7933) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$7933) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (union [(&& (! xi?$7596) (&& (! xi?$7597) (&& (! xi?$7598) (&& (! xi?$7599) (&& (! xi?$7600) (! xi?$7601)))))) #(struct:int8_t
                                                                                                                   (bv #x01 8))] [(|| xi?$7596 (&& (! xi?$7596) (|| xi?$7597 (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                             #(struct:buffer
                                                                                                                                                                                                                                                                                                               mask
                                                                                                                                                                                                                                                                                                               int8)
                                                                                                                                                                                                                                                                                                             (union #:size 2 #:hash 815417043632252435))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (union [(&& (! xi?$7596) (&& (! xi?$7597) (&& (! xi?$7598) (&& (! xi?$7599) (&& (! xi?$7600) (! xi?$7601)))))) #(struct:int8_t
                                                                                                                   (bv #x01 8))] [(|| xi?$7596 (&& (! xi?$7596) (|| xi?$7597 (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                             #(struct:buffer
                                                                                                                                                                                                                                                                                                               mask
                                                                                                                                                                                                                                                                                                               int8)
                                                                                                                                                                                                                                                                                                             (union #:size 2 #:hash 815417043632252435))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$1999) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 1 idx$1999) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 2 idx$1999) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$1999) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$1999) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$1999) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$7596) (&& (! xi?$7597) (&& (! xi?$7598) (&& (! xi?$7599) (&& (! xi?$7600) (! xi?$7601)))))) (bv #x01 8)) (⊢ (|| xi?$7596 (&& (! xi?$7596) (|| xi?$7597 (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))))) (app mask (ite* (⊢ (&& (|| xi?$7597 (&& (|| xi?$7598 (&& (|| xi?$7599 (&& (&& xi?$7601 (! xi?$7600)) (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))) (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))))) (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))))))) (&& (! xi?$7596) (|| xi?$7597 (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))))) (+ (ite* (⊢ xi?$7597 1) (⊢ (&& (|| xi?$7598 (&& (|| xi?$7599 (&& (&& xi?$7601 (! xi?$7600)) (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))) (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))))) (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))) (ite* (⊢ xi?$7598 2) (⊢ (&& (|| xi?$7599 (&& (&& xi?$7601 (! xi?$7600)) (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))) (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))) (ite* (⊢ xi?$7599 1) (⊢ (&& (&& xi?$7601 (! xi?$7600)) (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))) 2)))))) (+ (- t136) (ite* (⊢ xi?$7597 t163) (⊢ (&& (|| xi?$7598 (&& (|| xi?$7599 (&& (&& xi?$7601 (! xi?$7600)) (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))) (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))))) (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))) (ite* (⊢ xi?$7598 t163) (⊢ (&& (|| xi?$7599 (&& (&& xi?$7601 (! xi?$7600)) (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))) (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))) t162))))))) (⊢ (|| xi?$7596 (&& (&& (&& (&& xi?$7600 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))) (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))) (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))) (&& (! xi?$7596) (|| xi?$7597 (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600)))))))))))) (+ (- t136) (ite* (⊢ xi?$7596 t162) (⊢ (&& (&& (&& (&& xi?$7600 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))) (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))) (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))) (&& (! xi?$7596) (|| xi?$7597 (&& (! xi?$7597) (|| xi?$7598 (&& (! xi?$7598) (|| xi?$7599 (&& (! xi?$7599) (|| xi?$7600 (&& xi?$7601 (! xi?$7600))))))))))) t163)))))))) (bitvector 16)))))
Ran synthesizer for 344 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
 #f
 x?$7594
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't91)))
 #f
 x?$7594
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))) (bvmul (sign-extend (app mask (+ t163 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$7997 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (sign-extend (app mask (+ t163 (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$7997 0) (bitvector 16))) (ite x?$7594 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (union [(&& (! xi?$7798) (&& (! xi?$7799) (&& (! xi?$7800) (&& (! xi?$7801) (&& (! xi?$7802) (! xi?$7803)))))) #(struct:int8_t
                                                                                                                   (bv #x01 8))] [(|| xi?$7798 (&& (! xi?$7798) (|| xi?$7799 (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                             #(struct:buffer
                                                                                                                                                                                                                                                                                                               mask
                                                                                                                                                                                                                                                                                                               int8)
                                                                                                                                                                                                                                                                                                             (union #:size 2 #:hash 488589872549886852))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (union [(&& (! xi?$7798) (&& (! xi?$7799) (&& (! xi?$7800) (&& (! xi?$7801) (&& (! xi?$7802) (! xi?$7803)))))) #(struct:int8_t
                                                                                                                   (bv #x01 8))] [(|| xi?$7798 (&& (! xi?$7798) (|| xi?$7799 (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                             #(struct:buffer
                                                                                                                                                                                                                                                                                                               mask
                                                                                                                                                                                                                                                                                                               int8)
                                                                                                                                                                                                                                                                                                             (union #:size 2 #:hash 488589872549886852))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4667) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4667) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$4667) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$4667) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$4667) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$4667) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$7798) (&& (! xi?$7799) (&& (! xi?$7800) (&& (! xi?$7801) (&& (! xi?$7802) (! xi?$7803)))))) (bv #x01 8)) (⊢ (|| xi?$7798 (&& (! xi?$7798) (|| xi?$7799 (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))))) (app mask (ite* (⊢ (&& (|| xi?$7799 (&& (|| xi?$7800 (&& (|| xi?$7801 (&& (&& xi?$7803 (! xi?$7802)) (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))) (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))))) (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))))))) (&& (! xi?$7798) (|| xi?$7799 (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))))) (+ (ite* (⊢ xi?$7799 1) (⊢ (&& (|| xi?$7800 (&& (|| xi?$7801 (&& (&& xi?$7803 (! xi?$7802)) (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))) (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))))) (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))) (ite* (⊢ xi?$7800 2) (⊢ (&& (|| xi?$7801 (&& (&& xi?$7803 (! xi?$7802)) (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))) (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))) (ite* (⊢ xi?$7801 1) (⊢ (&& (&& xi?$7803 (! xi?$7802)) (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))) 2)))))) (+ (- t136) (ite* (⊢ xi?$7799 t163) (⊢ (&& (|| xi?$7800 (&& (|| xi?$7801 (&& (&& xi?$7803 (! xi?$7802)) (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))) (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))))) (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))) (ite* (⊢ xi?$7800 t163) (⊢ (&& (|| xi?$7801 (&& (&& xi?$7803 (! xi?$7802)) (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))) (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))) t162))))))) (⊢ (|| xi?$7798 (&& (&& (&& (&& xi?$7802 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))) (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))) (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))) (&& (! xi?$7798) (|| xi?$7799 (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802)))))))))))) (+ (- t136) (ite* (⊢ xi?$7798 t162) (⊢ (&& (&& (&& (&& xi?$7802 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))) (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))) (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))) (&& (! xi?$7798) (|| xi?$7799 (&& (! xi?$7799) (|| xi?$7800 (&& (! xi?$7800) (|| xi?$7801 (&& (! xi?$7801) (|| xi?$7802 (&& xi?$7803 (! xi?$7802))))))))))) t163)))))))) (bitvector 16)))))
Ran synthesizer for 260 ms
(model
 [idx$4667 5]
 [xi?$7798 #f]
 [xi?$7799 #f]
 [xi?$7800 #f]
 [xi?$7801 #f]
 [xi?$7802 #t]
 [xi?$7803 #f])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't84) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't53) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
        16)
       'int16
       16))
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
        16)
       'int16
       16)))))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 182 ms
Ran bounds analysis for 235 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) (load-sca (buffer mask 'int8) (var-lookup 't91))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (union [(&& (! xi?$8001) (&& (! xi?$8002) (&& (! xi?$8003) (&& (! xi?$8004) (&& (! xi?$8005) (&& (! xi?$8006) (! xi?$8007))))))) #(struct:int8_t
                                                                                                                                      (bv #x01 8))] [(|| xi?$8001 (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                  mask
                                                                                                                                                                                                                                                                                                                                                                  int8)
                                                                                                                                                                                                                                                                                                                                                                (union #:size 2 #:hash -270042219270033232))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
  #f
  x?$7999
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
    #f
    #f
    #f
    'int16)
   (union [x?$8008 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t116>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$8008) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t91>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (load-sca (buffer mask 'int8) (var-lookup 't116)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)
    (union [(&& (! xi?$8204) (&& (! xi?$8205) (&& (! xi?$8206) (&& (! xi?$8207) (&& (! xi?$8208) (&& (! xi?$8209) (! xi?$8210))))))) #(struct:int8_t
                                                                                                                                       (bv #x01 8))] [(|| xi?$8204 (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                 #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                   mask
                                                                                                                                                                                                                                                                                                                                                                   int8)
                                                                                                                                                                                                                                                                                                                                                                 (union #:size 2 #:hash 202467421365661361))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>))
  #f
  x?$8202
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>))
    #f
    #f
    #f
    'int16)
   (union [x?$8211 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t116>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$8211) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t91>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) (union #:size 2 #:hash 878238325042060472)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)) #f x?$7999 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)) #f #f #f int16) (union #:size 2 #:hash 413139718446)> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) (union #:size 2 #:hash 965927744291075622)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)) #f x?$8202 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)) #f #f #f int16) (union #:size 2 #:hash 412992651825)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$8137) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$8137) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$8137) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 3 idx$8137) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$8137) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$8137) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 6 idx$8137) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$8340) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$8340) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$8340) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 3 idx$8340) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$8340) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$8340) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 6 idx$8340) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (union [(&& (! xi?$8001) (&& (! xi?$8002) (&& (! xi?$8003) (&& (! xi?$8004) (&& (! xi?$8005) (&& (! xi?$8006) (! xi?$8007))))))) #(struct:int8_t
                                                                                                                                     (bv #x01 8))] [(|| xi?$8001 (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                               #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                 mask
                                                                                                                                                                                                                                                                                                                                                                 int8)
                                                                                                                                                                                                                                                                                                                                                               (union #:size 2 #:hash -270042219270033232))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (union [(&& (! xi?$8001) (&& (! xi?$8002) (&& (! xi?$8003) (&& (! xi?$8004) (&& (! xi?$8005) (&& (! xi?$8006) (! xi?$8007))))))) #(struct:int8_t
                                                                                                                                     (bv #x01 8))] [(|| xi?$8001 (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                               #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                 mask
                                                                                                                                                                                                                                                                                                                                                                 int8)
                                                                                                                                                                                                                                                                                                                                                               (union #:size 2 #:hash -270042219270033232))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$1333) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$1333) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$1333) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 3 idx$1333) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$1333) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$1333) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 6 idx$1333) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$8001) (&& (! xi?$8002) (&& (! xi?$8003) (&& (! xi?$8004) (&& (! xi?$8005) (&& (! xi?$8006) (! xi?$8007))))))) (bv #x01 8)) (⊢ (|| xi?$8001 (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))))) (app mask (ite* (⊢ (&& (|| xi?$8002 (&& (&& (|| xi?$8004 (&& (|| xi?$8005 (&& (&& xi?$8007 (! xi?$8006)) (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))) (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))))) (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))))) (+ (ite* (⊢ xi?$8002 1) (⊢ (&& (&& (|| xi?$8004 (&& (|| xi?$8005 (&& (&& xi?$8007 (! xi?$8006)) (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))) (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))) (ite* (⊢ xi?$8004 2) (⊢ (&& (|| xi?$8005 (&& (&& xi?$8007 (! xi?$8006)) (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) (ite* (⊢ xi?$8005 1) (⊢ (&& (&& xi?$8007 (! xi?$8006)) (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))) 2)))))) (+ (- t136) (ite* (⊢ xi?$8002 t163) (⊢ (&& (&& (|| xi?$8004 (&& (|| xi?$8005 (&& (&& xi?$8007 (! xi?$8006)) (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))) (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))) (ite* (⊢ xi?$8004 t163) (⊢ (&& (|| xi?$8005 (&& (&& xi?$8007 (! xi?$8006)) (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) t162))))))) (⊢ (|| xi?$8001 (&& (&& (|| xi?$8003 (&& (&& (&& xi?$8006 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))) (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))) (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))))))) (+ (- t136) (ite* (⊢ (&& xi?$8003 (&& (&& (|| xi?$8003 (&& (&& (&& xi?$8006 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))) (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))) (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))))))) (+ 2 (- t161))) (⊢ (|| xi?$8001 (&& (&& (&& (&& xi?$8006 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))) (&& (&& (|| xi?$8003 (&& (&& (&& xi?$8006 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))) (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))) (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))))))) (ite* (⊢ xi?$8001 t162) (⊢ (&& (&& (&& (&& xi?$8006 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))) (&& (&& (|| xi?$8003 (&& (&& (&& xi?$8006 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))) (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))) (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))) (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006))))))))))) (&& (! xi?$8001) (|| xi?$8002 (&& (! xi?$8002) (|| xi?$8003 (&& (! xi?$8003) (|| xi?$8004 (&& (! xi?$8004) (|| xi?$8005 (&& (! xi?$8005) (|| xi?$8006 (&& xi?$8007 (! xi?$8006)))))))))))))) t163)))))))))) (bitvector 16)))))
Ran synthesizer for 412 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
 #f
 x?$7999
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't116)))
 #f
 x?$7999
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))) (bvmul (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16)) (zero-extend (app abstr-vals$8404 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16)) (zero-extend (app abstr-vals$8404 0) (bitvector 16))) (ite x?$7999 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (union [(&& (! xi?$8204) (&& (! xi?$8205) (&& (! xi?$8206) (&& (! xi?$8207) (&& (! xi?$8208) (&& (! xi?$8209) (! xi?$8210))))))) #(struct:int8_t
                                                                                                                                     (bv #x01 8))] [(|| xi?$8204 (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                               #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                 mask
                                                                                                                                                                                                                                                                                                                                                                 int8)
                                                                                                                                                                                                                                                                                                                                                               (union #:size 2 #:hash 202467421365661361))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (union [(&& (! xi?$8204) (&& (! xi?$8205) (&& (! xi?$8206) (&& (! xi?$8207) (&& (! xi?$8208) (&& (! xi?$8209) (! xi?$8210))))))) #(struct:int8_t
                                                                                                                                     (bv #x01 8))] [(|| xi?$8204 (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                               #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                 mask
                                                                                                                                                                                                                                                                                                                                                                 int8)
                                                                                                                                                                                                                                                                                                                                                               (union #:size 2 #:hash 202467421365661361))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4668) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4668) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$4668) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$4668) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$4668) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$4668) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$4668) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$8204) (&& (! xi?$8205) (&& (! xi?$8206) (&& (! xi?$8207) (&& (! xi?$8208) (&& (! xi?$8209) (! xi?$8210))))))) (bv #x01 8)) (⊢ (|| xi?$8204 (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))))) (app mask (ite* (⊢ (&& (|| xi?$8205 (&& (&& (|| xi?$8207 (&& (|| xi?$8208 (&& (&& xi?$8210 (! xi?$8209)) (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))) (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))))) (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))))) (+ (ite* (⊢ xi?$8205 1) (⊢ (&& (&& (|| xi?$8207 (&& (|| xi?$8208 (&& (&& xi?$8210 (! xi?$8209)) (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))) (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))) (ite* (⊢ xi?$8207 2) (⊢ (&& (|| xi?$8208 (&& (&& xi?$8210 (! xi?$8209)) (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) (ite* (⊢ xi?$8208 1) (⊢ (&& (&& xi?$8210 (! xi?$8209)) (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))) 2)))))) (+ (- t136) (ite* (⊢ xi?$8205 t163) (⊢ (&& (&& (|| xi?$8207 (&& (|| xi?$8208 (&& (&& xi?$8210 (! xi?$8209)) (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))) (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))) (ite* (⊢ xi?$8207 t163) (⊢ (&& (|| xi?$8208 (&& (&& xi?$8210 (! xi?$8209)) (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) t162))))))) (⊢ (|| xi?$8204 (&& (&& (|| xi?$8206 (&& (&& (&& xi?$8209 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))) (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))) (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))))))) (+ (- t136) (ite* (⊢ (&& xi?$8206 (&& (&& (|| xi?$8206 (&& (&& (&& xi?$8209 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))) (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))) (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))))))) (+ 2 (- t161))) (⊢ (|| xi?$8204 (&& (&& (&& (&& xi?$8209 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))) (&& (&& (|| xi?$8206 (&& (&& (&& xi?$8209 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))) (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))) (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))))))) (ite* (⊢ xi?$8204 t162) (⊢ (&& (&& (&& (&& xi?$8209 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))) (&& (&& (|| xi?$8206 (&& (&& (&& xi?$8209 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))) (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))) (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))) (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209))))))))))) (&& (! xi?$8204) (|| xi?$8205 (&& (! xi?$8205) (|| xi?$8206 (&& (! xi?$8206) (|| xi?$8207 (&& (! xi?$8207) (|| xi?$8208 (&& (! xi?$8208) (|| xi?$8209 (&& xi?$8210 (! xi?$8209)))))))))))))) t163)))))))))) (bitvector 16)))))
Ran synthesizer for 130 ms
(model
 [idx$4668 6]
 [xi?$8204 #f]
 [xi?$8205 #f]
 [xi?$8206 #t]
 [xi?$8207 #f]
 [xi?$8208 #f]
 [xi?$8209 #f]
 [xi?$8210 #f])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
     (aligned 16 2))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't84) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't53) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
         16)
        'int16
        16))
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
         16)
        'int16
        16))))))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (load-sca (buffer mask 'int8) (var-lookup 't116)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 292 ms
Ran bounds analysis for 411 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) (load-sca (buffer mask 'int8) (var-lookup 't91)) (load-sca (buffer mask 'int8) (var-lookup 't116))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (union [(&& (! xi?$8408) (&& (! xi?$8409) (&& (! xi?$8410) (&& (! xi?$8411) (&& (! xi?$8412) (&& (! xi?$8413) (&& (! xi?$8414) (! xi?$8415)))))))) #(struct:int8_t
                                                                                                                                                        (bv #x01 8))] [(|| xi?$8408 (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                  #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                    mask
                                                                                                                                                                                                                                                                                                                                                                                                                    int8)
                                                                                                                                                                                                                                                                                                                                                                                                                  (union #:size 2 #:hash -605602283716907888))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
  #f
  x?$8406
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
    #f
    #f
    #f
    'int16)
   (union [x?$8416 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t117>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$8416) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t91>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t116>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (load-sca (buffer mask 'int8) (var-lookup 't117)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)
    (union [(&& (! xi?$8612) (&& (! xi?$8613) (&& (! xi?$8614) (&& (! xi?$8615) (&& (! xi?$8616) (&& (! xi?$8617) (&& (! xi?$8618) (! xi?$8619)))))))) #(struct:int8_t
                                                                                                                                                         (bv #x01 8))] [(|| xi?$8612 (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                   #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                     mask
                                                                                                                                                                                                                                                                                                                                                                                                                     int8)
                                                                                                                                                                                                                                                                                                                                                                                                                   (union #:size 2 #:hash 204412595850026435))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>))
  #f
  x?$8610
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>))
    #f
    #f
    #f
    'int16)
   (union [x?$8620 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t117>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$8620) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t91>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t116>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) (union #:size 2 #:hash 478905531347072250)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>)) #f x?$8406 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>)) #f #f #f int16) (union #:size 2 #:hash 418210365667)> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) (union #:size 2 #:hash 638863102567211737)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)) #f x?$8610 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)) #f #f #f int16) (union #:size 2 #:hash 418026691428)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$8545) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$8545) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$8545) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 3 idx$8545) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$8545) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$8545) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 6 idx$8545) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 7 idx$8545) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$8749) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$8749) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$8749) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 3 idx$8749) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$8749) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 5 idx$8749) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 6 idx$8749) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 7 idx$8749) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't117))
  (union [(&& (! xi?$8408) (&& (! xi?$8409) (&& (! xi?$8410) (&& (! xi?$8411) (&& (! xi?$8412) (&& (! xi?$8413) (&& (! xi?$8414) (! xi?$8415)))))))) #(struct:int8_t
                                                                                                                                                       (bv #x01 8))] [(|| xi?$8408 (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                 #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                   mask
                                                                                                                                                                                                                                                                                                                                                                                                                   int8)
                                                                                                                                                                                                                                                                                                                                                                                                                 (union #:size 2 #:hash -605602283716907888))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't117))
  (union [(&& (! xi?$8408) (&& (! xi?$8409) (&& (! xi?$8410) (&& (! xi?$8411) (&& (! xi?$8412) (&& (! xi?$8413) (&& (! xi?$8414) (! xi?$8415)))))))) #(struct:int8_t
                                                                                                                                                       (bv #x01 8))] [(|| xi?$8408 (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                 #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                   mask
                                                                                                                                                                                                                                                                                                                                                                                                                   int8)
                                                                                                                                                                                                                                                                                                                                                                                                                 (union #:size 2 #:hash -605602283716907888))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$667) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$667) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 2 idx$667) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$667) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$667) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$667) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 6 idx$667) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 7 idx$667) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$8408) (&& (! xi?$8409) (&& (! xi?$8410) (&& (! xi?$8411) (&& (! xi?$8412) (&& (! xi?$8413) (&& (! xi?$8414) (! xi?$8415)))))))) (bv #x01 8)) (⊢ (|| xi?$8408 (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))))) (app mask (ite* (⊢ (&& (|| xi?$8409 (&& (&& (|| xi?$8411 (&& (|| xi?$8412 (&& (&& (&& xi?$8415 (! xi?$8414)) (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))) (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))))) (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))))) (+ (ite* (⊢ xi?$8409 1) (⊢ (&& (&& (|| xi?$8411 (&& (|| xi?$8412 (&& (&& (&& xi?$8415 (! xi?$8414)) (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))) (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))) (ite* (⊢ xi?$8411 2) (⊢ (&& (|| xi?$8412 (&& (&& (&& xi?$8415 (! xi?$8414)) (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (ite* (⊢ xi?$8412 1) (⊢ (&& (&& (&& xi?$8415 (! xi?$8414)) (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) 2)))))) (+ (- t136) (ite* (⊢ xi?$8409 t163) (⊢ (&& (&& (|| xi?$8411 (&& (|| xi?$8412 (&& (&& (&& xi?$8415 (! xi?$8414)) (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))) (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))) (ite* (⊢ xi?$8411 t163) (⊢ (&& (|| xi?$8412 (&& (&& (&& xi?$8415 (! xi?$8414)) (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) t162))))))) (⊢ (|| xi?$8408 (&& (&& (|| xi?$8410 (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))) (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))) (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))))))) (+ (- t136) (ite* (⊢ (&& (|| xi?$8410 (&& xi?$8413 (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))) (&& (&& (|| xi?$8410 (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))) (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))) (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))))))) (+ (- t161) (ite* (⊢ xi?$8410 2) (⊢ (&& xi?$8413 (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))) 0)))) (⊢ (|| xi?$8408 (&& (&& (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))) (&& (&& (|| xi?$8410 (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))) (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))) (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))))))) (ite* (⊢ xi?$8408 t162) (⊢ (&& (&& (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))) (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))) (&& (&& (|| xi?$8410 (&& (&& (&& (|| xi?$8413 (&& xi?$8414 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))) (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))) (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))) (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))) (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414))))))))))))) (&& (! xi?$8408) (|| xi?$8409 (&& (! xi?$8409) (|| xi?$8410 (&& (! xi?$8410) (|| xi?$8411 (&& (! xi?$8411) (|| xi?$8412 (&& (! xi?$8412) (|| xi?$8413 (&& (! xi?$8413) (|| xi?$8414 (&& xi?$8415 (! xi?$8414)))))))))))))))) t163)))))))))) (bitvector 16)))))
Ran synthesizer for 456 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
 #f
 x?$8406
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't117)))
 #f
 x?$8406
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))) (bvmul (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$8813 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$8813 0) (bitvector 16))) (ite x?$8406 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (union [(&& (! xi?$8612) (&& (! xi?$8613) (&& (! xi?$8614) (&& (! xi?$8615) (&& (! xi?$8616) (&& (! xi?$8617) (&& (! xi?$8618) (! xi?$8619)))))))) #(struct:int8_t
                                                                                                                                                       (bv #x01 8))] [(|| xi?$8612 (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                 #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                   mask
                                                                                                                                                                                                                                                                                                                                                                                                                   int8)
                                                                                                                                                                                                                                                                                                                                                                                                                 (union #:size 2 #:hash 204412595850026435))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (union [(&& (! xi?$8612) (&& (! xi?$8613) (&& (! xi?$8614) (&& (! xi?$8615) (&& (! xi?$8616) (&& (! xi?$8617) (&& (! xi?$8618) (! xi?$8619)))))))) #(struct:int8_t
                                                                                                                                                       (bv #x01 8))] [(|| xi?$8612 (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                 #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                   mask
                                                                                                                                                                                                                                                                                                                                                                                                                   int8)
                                                                                                                                                                                                                                                                                                                                                                                                                 (union #:size 2 #:hash 204412595850026435))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4669) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4669) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$4669) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$4669) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$4669) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$4669) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$4669) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 7 idx$4669) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$8612) (&& (! xi?$8613) (&& (! xi?$8614) (&& (! xi?$8615) (&& (! xi?$8616) (&& (! xi?$8617) (&& (! xi?$8618) (! xi?$8619)))))))) (bv #x01 8)) (⊢ (|| xi?$8612 (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))))) (app mask (ite* (⊢ (&& (|| xi?$8613 (&& (&& (|| xi?$8615 (&& (|| xi?$8616 (&& (&& (&& xi?$8619 (! xi?$8618)) (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))) (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))))) (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))))) (+ (ite* (⊢ xi?$8613 1) (⊢ (&& (&& (|| xi?$8615 (&& (|| xi?$8616 (&& (&& (&& xi?$8619 (! xi?$8618)) (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))) (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))) (ite* (⊢ xi?$8615 2) (⊢ (&& (|| xi?$8616 (&& (&& (&& xi?$8619 (! xi?$8618)) (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (ite* (⊢ xi?$8616 1) (⊢ (&& (&& (&& xi?$8619 (! xi?$8618)) (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) 2)))))) (+ (- t136) (ite* (⊢ xi?$8613 t163) (⊢ (&& (&& (|| xi?$8615 (&& (|| xi?$8616 (&& (&& (&& xi?$8619 (! xi?$8618)) (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))) (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))) (ite* (⊢ xi?$8615 t163) (⊢ (&& (|| xi?$8616 (&& (&& (&& xi?$8619 (! xi?$8618)) (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) t162))))))) (⊢ (|| xi?$8612 (&& (&& (|| xi?$8614 (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))) (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))) (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))))))) (+ (- t136) (ite* (⊢ (&& (|| xi?$8614 (&& xi?$8617 (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))) (&& (&& (|| xi?$8614 (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))) (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))) (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))))))) (+ (- t161) (ite* (⊢ xi?$8614 2) (⊢ (&& xi?$8617 (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))) 0)))) (⊢ (|| xi?$8612 (&& (&& (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))) (&& (&& (|| xi?$8614 (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))) (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))) (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))))))) (ite* (⊢ xi?$8612 t162) (⊢ (&& (&& (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))) (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))) (&& (&& (|| xi?$8614 (&& (&& (&& (|| xi?$8617 (&& xi?$8618 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))) (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))) (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))) (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))) (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618))))))))))))) (&& (! xi?$8612) (|| xi?$8613 (&& (! xi?$8613) (|| xi?$8614 (&& (! xi?$8614) (|| xi?$8615 (&& (! xi?$8615) (|| xi?$8616 (&& (! xi?$8616) (|| xi?$8617 (&& (! xi?$8617) (|| xi?$8618 (&& xi?$8619 (! xi?$8618)))))))))))))))) t163)))))))))) (bitvector 16)))))
Ran synthesizer for 183 ms
(model
 [idx$4669 7]
 [xi?$8612 #f]
 [xi?$8613 #f]
 [xi?$8614 #f]
 [xi?$8615 #f]
 [xi?$8616 #f]
 [xi?$8617 #t]
 [xi?$8618 #f]
 [xi?$8619 #t])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-mul (var-lookup 't57) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
      (aligned 16 2))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't84) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast
       (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
       16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't53) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
          16)
         'int16
         16))
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
          16)
         'int16
         16)))))))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (load-sca (buffer mask 'int8) (var-lookup 't117)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 593 ms
Ran bounds analysis for 189 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) (load-sca (buffer mask 'int8) (var-lookup 't91)) (load-sca (buffer mask 'int8) (var-lookup 't116)) (load-sca (buffer mask 'int8) (var-lookup 't117))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (var-lookup 't118))
   (union [(&& (! xi?$8817) (&& (! xi?$8818) (&& (! xi?$8819) (&& (! xi?$8820) (&& (! xi?$8821) (&& (! xi?$8822) (&& (! xi?$8823) (&& (! xi?$8824) (! xi?$8825))))))))) #(struct:int8_t
                                                                                                                                                                          (bv #x01 8))] [(|| xi?$8817 (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      mask
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      int8)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (union #:size 2 #:hash -169620537137735026))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  x?$8815
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
    #f
    #f
    #f
    'int16)
   (union [x?$8826 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t118>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$8826) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t91>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t116>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t117>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (load-sca (buffer mask 'int8) (var-lookup 't118)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>)
    (union [(&& (! xi?$9022) (&& (! xi?$9023) (&& (! xi?$9024) (&& (! xi?$9025) (&& (! xi?$9026) (&& (! xi?$9027) (&& (! xi?$9028) (&& (! xi?$9029) (! xi?$9030))))))))) #(struct:int8_t
                                                                                                                                                                           (bv #x01 8))] [(|| xi?$9022 (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       mask
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       int8)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     (union #:size 2 #:hash 869249480911324945))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t92> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 2))
    #(struct:load-sca
      #(struct:buffer mask int8)
      #(struct:sca-add #<var-lookup: t91> 1))
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)
    #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>))
  #f
  x?$9020
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t92> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>)
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 2))
      #(struct:load-sca
        #(struct:buffer mask int8)
        #(struct:sca-add #<var-lookup: t91> 1))
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>)
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>)
      #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>))
    #f
    #f
    #f
    'int16)
   (union [x?$9031 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:load-sca
                        #(struct:buffer mask int8)
                        #<var-lookup: t118>))
                     #f
                     #f
                     #f
                     int16)] [(! x?$9031) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t92>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t92>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 2))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #(struct:sca-add
                                                 #<var-lookup: t91>
                                                 1))
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t91>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t116>)
                                             #(struct:load-sca
                                               #(struct:buffer mask int8)
                                               #<var-lookup: t117>))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>) (union #:size 2 #:hash 34121483299664303)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f x?$8815 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f #f #f int16) (union #:size 2 #:hash 429332020212)> (#(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) (union #:size 2 #:hash -398920682729701939)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>)) #f x?$9020 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>)) #f #f #f int16) (union #:size 2 #:hash 429360722551)> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$8955) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$8955) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$8955) (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 3 idx$8955) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$8955) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$8955) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$8955) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 7 idx$8955) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 8 idx$8955) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$9160) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$9160) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$9160) (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 3 idx$9160) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$9160) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$9160) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$9160) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 7 idx$9160) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 8 idx$9160) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't118))
  (union [(&& (! xi?$8817) (&& (! xi?$8818) (&& (! xi?$8819) (&& (! xi?$8820) (&& (! xi?$8821) (&& (! xi?$8822) (&& (! xi?$8823) (&& (! xi?$8824) (! xi?$8825))))))))) #(struct:int8_t
                                                                                                                                                                         (bv #x01 8))] [(|| xi?$8817 (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     mask
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     int8)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (union #:size 2 #:hash -169620537137735026))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (var-lookup 't118))
  (union [(&& (! xi?$8817) (&& (! xi?$8818) (&& (! xi?$8819) (&& (! xi?$8820) (&& (! xi?$8821) (&& (! xi?$8822) (&& (! xi?$8823) (&& (! xi?$8824) (! xi?$8825))))))))) #(struct:int8_t
                                                                                                                                                                         (bv #x01 8))] [(|| xi?$8817 (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     mask
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     int8)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (union #:size 2 #:hash -169620537137735026))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$1) (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$1) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 2 idx$1) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$1) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$1) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$1) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$1) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 7 idx$1) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 8 idx$1) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$8817) (&& (! xi?$8818) (&& (! xi?$8819) (&& (! xi?$8820) (&& (! xi?$8821) (&& (! xi?$8822) (&& (! xi?$8823) (&& (! xi?$8824) (! xi?$8825))))))))) (bv #x01 8)) (⊢ (|| xi?$8817 (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))))) (app mask (ite* (⊢ (&& (|| xi?$8818 (&& (|| xi?$8819 (&& (|| xi?$8820 (&& xi?$8821 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))))) (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))))))) (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))))) (+ (ite* (⊢ xi?$8818 1) (⊢ (&& (|| xi?$8819 (&& (|| xi?$8820 (&& xi?$8821 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))))) (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))) (ite* (⊢ xi?$8819 1) (⊢ (&& (|| xi?$8820 (&& xi?$8821 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))) 2)))) (+ (- t136) (ite* (⊢ xi?$8818 t163) (⊢ (&& (|| xi?$8819 (&& (|| xi?$8820 (&& xi?$8821 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))))) (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))) (ite* (⊢ xi?$8819 t162) (⊢ (&& (|| xi?$8820 (&& xi?$8821 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))) (ite* (⊢ xi?$8820 t163) (⊢ (&& xi?$8821 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))) t162))))))))) (⊢ (|| xi?$8817 (&& (&& (&& (&& (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))) (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))) (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))) (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))))))))) (+ (- t136) (ite* (⊢ (&& (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))) (&& (&& (&& (&& (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))) (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))) (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))) (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))))))))) (+ (- t161) (ite* (⊢ xi?$8823 0) (⊢ (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))) (ite* (⊢ xi?$8824 1) (⊢ (&& xi?$8825 (! xi?$8824)) 2)))))) (⊢ (|| xi?$8817 (&& xi?$8822 (&& (&& (&& (&& (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))) (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))) (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))) (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))))))) (ite* (⊢ xi?$8817 t162) (⊢ (&& xi?$8822 (&& (&& (&& (&& (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))) (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))) (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))) (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824))))))))))))))) (&& (! xi?$8817) (|| xi?$8818 (&& (! xi?$8818) (|| xi?$8819 (&& (! xi?$8819) (|| xi?$8820 (&& (! xi?$8820) (|| xi?$8821 (&& (! xi?$8821) (|| xi?$8822 (&& (! xi?$8822) (|| xi?$8823 (&& (! xi?$8823) (|| xi?$8824 (&& xi?$8825 (! xi?$8824)))))))))))))))))) t163)))))))))) (bitvector 16)))))
Ran synthesizer for 484 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
 #f
 x?$8815
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (load-sca (buffer mask 'int8) (var-lookup 't118)))
 #f
 x?$8815
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))) (bvmul (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$9224 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16)) (zero-extend (app abstr-vals$9224 0) (bitvector 16))) (ite x?$8815 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (load-sca (buffer mask 'int8) (var-lookup 't117))
  (union [(&& (! xi?$9022) (&& (! xi?$9023) (&& (! xi?$9024) (&& (! xi?$9025) (&& (! xi?$9026) (&& (! xi?$9027) (&& (! xi?$9028) (&& (! xi?$9029) (! xi?$9030))))))))) #(struct:int8_t
                                                                                                                                                                         (bv #x01 8))] [(|| xi?$9022 (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     mask
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     int8)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (union #:size 2 #:hash 869249480911324945))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (load-sca (buffer mask 'int8) (var-lookup 't117))
  (union [(&& (! xi?$9022) (&& (! xi?$9023) (&& (! xi?$9024) (&& (! xi?$9025) (&& (! xi?$9026) (&& (! xi?$9027) (&& (! xi?$9028) (&& (! xi?$9029) (! xi?$9030))))))))) #(struct:int8_t
                                                                                                                                                                         (bv #x01 8))] [(|| xi?$9022 (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))))) #(struct:load-sca
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #(struct:buffer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     mask
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     int8)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (union #:size 2 #:hash 869249480911324945))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16)))))))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$4670) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 1 idx$4670) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$4670) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 3 idx$4670) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 4 idx$4670) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$4670) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$4670) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 7 idx$4670) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 8 idx$4670) (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))))) (bitvector 16)) (sign-extend (ite* (⊢ (&& (! xi?$9022) (&& (! xi?$9023) (&& (! xi?$9024) (&& (! xi?$9025) (&& (! xi?$9026) (&& (! xi?$9027) (&& (! xi?$9028) (&& (! xi?$9029) (! xi?$9030))))))))) (bv #x01 8)) (⊢ (|| xi?$9022 (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))))) (app mask (ite* (⊢ (&& (|| xi?$9023 (&& (|| xi?$9024 (&& (|| xi?$9025 (&& xi?$9026 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))))) (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))))))) (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))))) (+ (ite* (⊢ xi?$9023 1) (⊢ (&& (|| xi?$9024 (&& (|| xi?$9025 (&& xi?$9026 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))))) (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))) (ite* (⊢ xi?$9024 1) (⊢ (&& (|| xi?$9025 (&& xi?$9026 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))) 2)))) (+ (- t136) (ite* (⊢ xi?$9023 t163) (⊢ (&& (|| xi?$9024 (&& (|| xi?$9025 (&& xi?$9026 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))))) (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))) (ite* (⊢ xi?$9024 t162) (⊢ (&& (|| xi?$9025 (&& xi?$9026 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))) (ite* (⊢ xi?$9025 t163) (⊢ (&& xi?$9026 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))) t162))))))))) (⊢ (|| xi?$9022 (&& (&& (&& (&& (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))) (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))) (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))) (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))))))))) (+ (- t136) (ite* (⊢ (&& (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))) (&& (&& (&& (&& (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))) (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))) (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))) (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))))))))) (+ (- t161) (ite* (⊢ xi?$9028 0) (⊢ (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))) (ite* (⊢ xi?$9029 1) (⊢ (&& xi?$9030 (! xi?$9029)) 2)))))) (⊢ (|| xi?$9022 (&& xi?$9027 (&& (&& (&& (&& (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))) (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))) (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))) (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))))))) (ite* (⊢ xi?$9022 t162) (⊢ (&& xi?$9027 (&& (&& (&& (&& (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))) (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))) (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))) (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029))))))))))))))) (&& (! xi?$9022) (|| xi?$9023 (&& (! xi?$9023) (|| xi?$9024 (&& (! xi?$9024) (|| xi?$9025 (&& (! xi?$9025) (|| xi?$9026 (&& (! xi?$9026) (|| xi?$9027 (&& (! xi?$9027) (|| xi?$9028 (&& (! xi?$9028) (|| xi?$9029 (&& xi?$9030 (! xi?$9029)))))))))))))))))) t163)))))))))) (bitvector 16)))))
Ran synthesizer for 423 ms
(model
 [idx$4670 8]
 [xi?$9022 #f]
 [xi?$9023 #f]
 [xi?$9024 #f]
 [xi?$9025 #f]
 [xi?$9026 #f]
 [xi?$9027 #f]
 [xi?$9028 #f]
 [xi?$9029 #t]
 [xi?$9030 #f])
(vec-add
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer input_bounded 'uint8)
     (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
     (aligned 16 1))
    'uint16
    16)
   'int16
   16)
  (vec-cast
   (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
   'int16
   16))
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-mul (var-lookup 't57) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
       (aligned 16 2))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't84) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast
        (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
        16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't53) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
           16)
          'int16
          16))
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
           16)
          'int16
          16))))))))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't92))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
  (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
  (load-sca (buffer mask 'int8) (var-lookup 't91))
  (load-sca (buffer mask 'int8) (var-lookup 't116))
  (load-sca (buffer mask 'int8) (var-lookup 't117))
  (load-sca (buffer mask 'int8) (var-lookup 't118)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 237 ms
Ran bounds analysis for 197 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) (load-sca (buffer mask 'int8) (var-lookup 't91)) (load-sca (buffer mask 'int8) (var-lookup 't116)) (load-sca (buffer mask 'int8) (var-lookup 't117)) (load-sca (buffer mask 'int8) (var-lookup 't118))) #f #f #f 'int16)
"Building Expr:"
(sca-broadcast (uint16_t (bv #x0004 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (uint16_t (bv #x0004 16)) 16)
template:
  (broadcast ... (uint16_t (bv #x0004 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (uint16_t (bv #x0004 16)) 16)
optimized-template:
  (broadcast ... (uint16_t (bv #x0004 16)))
optimized Halide 0:
  (uint16_t (bv #x0004 16))
optimized x86 0:
  (uint16_t (bv #x0004 16))
Ran synthesizer for 22 ms
(model)
(sca-broadcast (uint16_t (bv #x0004 16)) 16)
(broadcast ... (uint16_t (bv #x0004 16)))
Ran bounds analysis for 22 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(broadcast ... (uint16_t (bv #x0004 16)))
"Building Expr:"
(vec-shr
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't57) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't84) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't53) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
            16)
           'int16
           16))
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
            16)
           'int16
           16))))))))))
 (sca-broadcast (uint16_t (bv #x0004 16)) 16))
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-shr
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't57) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't84) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't53) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
            16)
           'int16
           16))
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
            16)
           'int16
           16))))))))))
 (sca-broadcast (uint16_t (bv #x0004 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-shr
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't57) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't84) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't53) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
            16)
           'int16
           16))
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
            16)
           'int16
           16))))))))))
 (sca-broadcast (uint16_t (bv #x0004 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$9237) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$9237) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$9237) (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 3 idx$9237) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$9237) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$9237) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$9237) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 7 idx$9237) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 8 idx$9237) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-shr
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't57) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't84) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't53) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
            16)
           'int16
           16))
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
            16)
           'int16
           16))))))))))
 (sca-broadcast (uint16_t (bv #x0004 16)) 16))
template:
  (vs-shift-right
 ...
 (union [x?$9301 #(struct:vs-mpy-add
                   ...
                   #<load-data>
                   (#(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t92> 2))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t92> 1))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t92>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t91> 2))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t91> 1))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t91>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t116>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t117>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t118>))
                   #f
                   #f
                   #f
                   int16)] [(! x?$9301) #(struct:broadcast
                                          ...
                                          #(struct:uint16_t (bv #x0004 16)))])
 (uint16_t (bv #x0004 16))
 #f
 #f
 #t)
axioms:
  '()
optimized-halide-expr:
  (vec-shr
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't57) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't84) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't53) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
            16)
           'int16
           16))
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
            16)
           'int16
           16))))))))))
 (sca-broadcast (uint16_t (bv #x0004 16)) 16))
optimized-template:
  (vs-shift-right
 ...
 (union [x?$9301 #(struct:vs-mpy-add
                   ...
                   #<load-data>
                   (#(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t92> 2))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t92> 1))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t92>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t91> 2))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #(struct:sca-add #<var-lookup: t91> 1))
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t91>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t116>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t117>)
                    #(struct:load-sca
                      #(struct:buffer mask int8)
                      #<var-lookup: t118>))
                   #f
                   #f
                   #f
                   int16)] [(! x?$9301) #(struct:broadcast
                                          ...
                                          #(struct:uint16_t (bv #x0004 16)))])
 (uint16_t (bv #x0004 16))
 #f
 #f
 #t)
optimized Halide 0:
  (int16_t
 (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)))
optimized x86 0:
  (union [x?$9301 #(struct:int16_t
                  (bvashr (ite x?$9301 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x0004 16)))] [(! x?$9301) #(struct:uint16_t
bvashr (ite x?$9301 (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x0004 16)))])
Ran synthesizer for 27 ms
(model
 [x?$9301 #t])
(vec-shr
 (vec-add
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer input_bounded 'uint8)
      (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
      (aligned 16 1))
     'uint16
     16)
    'int16
    16)
   (vec-cast
    (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
    'int16
    16))
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-mul (var-lookup 't57) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
        (aligned 16 2))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't84) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
          (aligned 16 1))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast
         (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
         16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't53) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
            16)
           'int16
           16))
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
            16)
           'int16
           16))))))))))
 (sca-broadcast (uint16_t (bv #x0004 16)) 16))
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 #f
 #f
 #t)
Ran bounds analysis for 347 ms
Ran bounds analysis for 416 ms
"Extended success?"
#t
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 #f
 #f
 #t)
"Building Expr:"
(sca-broadcast (int16_t (bv #x00ff 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x00ff 16)) 16)
template:
  (broadcast ... (int16_t (bv #x00ff 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x00ff 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x00ff 16)))
optimized Halide 0:
  (int16_t (bv #x00ff 16))
optimized x86 0:
  (int16_t (bv #x00ff 16))
Ran synthesizer for 17 ms
(model)
(sca-broadcast (int16_t (bv #x00ff 16)) 16)
(broadcast ... (int16_t (bv #x00ff 16)))
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x00ff 16)))
"Building Expr:"
(vec-min
 (vec-shr
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't57) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't84) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-mul (var-lookup 't53) 16) 1 16)
             (aligned 16 0))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
             16)
            'int16
            16))
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
              (aligned 16 1))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
             16)
            'int16
            16))))))))))
  (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
"Fold templates"
(list
 #<load-data>
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  x?$9302
  x?$9303
  x?$9304))
here(#<load-data> #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f #f #f int16) #(struct:uint16_t (bv #x0004 16)) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f #f #f int16) #(struct:uint16_t (bv #x0004 16)) x?$9302 x?$9303 x?$9304))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-min
 (vec-shr
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't57) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't84) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-mul (var-lookup 't53) 16) 1 16)
             (aligned 16 0))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
             16)
            'int16
            16))
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
              (aligned 16 1))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
             16)
            'int16
            16))))))))))
  (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-min
 (vec-shr
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't57) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't84) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-mul (var-lookup 't53) 16) 1 16)
             (aligned 16 0))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
             16)
            'int16
            16))
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
              (aligned 16 1))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
             16)
            'int16
            16))))))))))
  (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (ite (bvsle (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x00ff 16)))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$9317) (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 1 idx$9317) (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 2 idx$9317) (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 3 idx$9317) (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 4 idx$9317) (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 5 idx$9317) (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173))))) (⊢ (= 6 idx$9317) (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173))))) (⊢ (= 7 idx$9317) (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173))))) (⊢ (= 8 idx$9317) (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))))))
run-x86-synthesizer
halide-expr:
  (vec-min
 (vec-shr
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't57) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't84) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-mul (var-lookup 't53) 16) 1 16)
             (aligned 16 0))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
             16)
            'int16
            16))
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
              (aligned 16 1))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
             16)
            'int16
            16))))))))))
  (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 #f
 #f
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-min
 (vec-shr #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
optimized-template:
  (vs-shift-right ... #<abstr-expr> (uint16_t (bv #x0004 16)) #f #f #t)
optimized Halide 0:
  (int16_t
 (ite (bvsle (bvashr (app abstr-vals$9381 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9381 0) (bv #x0004 16)) (bv #x00ff 16)))
optimized x86 0:
  (int16_t (bvashr (app abstr-vals$9381 0) (bv #x0004 16)))
Ran synthesizer for 47 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-min
 (vec-shr
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't57) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't84) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-mul (var-lookup 't53) 16) 1 16)
             (aligned 16 0))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
             16)
            'int16
            16))
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
              (aligned 16 1))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
             16)
            'int16
            16))))))))))
  (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 x?$9302
 x?$9303
 x?$9304)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-min
 (vec-shr #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (uint16_t (bv #x0004 16))
 x?$9302
 x?$9303
 x?$9304)
optimized Halide 0:
  (int16_t
 (ite (bvsle (bvashr (app abstr-vals$9382 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9382 0) (bv #x0004 16)) (bv #x00ff 16)))
optimized x86 0:
  (int16_t
 (ite x?$9302 (bvadd (ite x?$9304 (bvashr (app abstr-vals$9382 0) (bv #x0004 16)) (bvlshr (app abstr-vals$9382 0) (bv #x0004 16))) (bvand (bv #x0001 16) (ite x?$9304 (bvashr (app abstr-vals$9382 0) (bv #x0003 16)) (bvlshr (app abstr-vals$9382 0) (bv #x0003 16))))) (ite x?$9304 (bvashr (app abstr-vals$9382 0) (bv #x0004 16)) (bvlshr (app abstr-vals$9382 0) (bv #x0004 16)))))
Ran synthesizer for 48 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-min
 (vec-shr
  (vec-add
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer input_bounded 'uint8)
       (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
       (aligned 16 1))
      'uint16
      16)
     'int16
     16)
    (vec-cast
     (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
     'int16
     16))
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-mul (var-lookup 't57) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
         (aligned 16 2))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't84) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
           (aligned 16 1))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast
          (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
          16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
            (aligned 16 2))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-mul (var-lookup 't53) 16) 1 16)
             (aligned 16 0))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
             16)
            'int16
            16))
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
              (aligned 16 1))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
             16)
            'int16
            16))))))))))
  (sca-broadcast (uint16_t (bv #x0004 16)) 16))
 (sca-broadcast (int16_t (bv #x00ff 16)) 16))
template:
  (minimum
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 (broadcast ... (int16_t (bv #x00ff 16))))
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$9383 idx) (bv #x07ff 16)) (bvsle (bv #xf800 16) (app abstr-vals$9383 idx))))
 (forall (idx) (&& (bvsle (app abstr-vals$9384 idx) (bv #x00ff 16)) (bvsle (bv #x00ff 16) (app abstr-vals$9384 idx)))))
optimized-halide-expr:
  (vec-min #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (minimum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (int16_t
 (ite (bvsle (app abstr-vals$9383 0) (app abstr-vals$9384 0)) (app abstr-vals$9383 0) (app abstr-vals$9384 0)))
optimized x86 0:
  (int16_t
 (ite (bvsle (app abstr-vals$9383 0) (app abstr-vals$9384 0)) (app abstr-vals$9383 0) (app abstr-vals$9384 0)))
Ran synthesizer for 37 ms
(model)
(vec-min #<abstr-halide-expr> #<abstr-halide-expr>)
(minimum
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 (broadcast ... (int16_t (bv #x00ff 16))))
Ran bounds analysis for 25 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
(minimum
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 (broadcast ... (int16_t (bv #x00ff 16))))
"Building Expr:"
(sca-broadcast (int16_t (bv #x0000 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0000 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0000 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0000 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0000 16)))
optimized Halide 0:
  (int16_t (bv #x0000 16))
optimized x86 0:
  (int16_t (bv #x0000 16))
Ran synthesizer for 17 ms
(model)
(sca-broadcast (int16_t (bv #x0000 16)) 16)
(broadcast ... (int16_t (bv #x0000 16)))
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0000 16)))
"Building Expr:"
(vec-max
 (vec-min
  (vec-shr
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't57) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't84) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-mul (var-lookup 't53) 16) 1 16)
              (aligned 16 0))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
               (aligned 16 2))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
              16)
             'int16
             16))
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
               (aligned 16 1))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
              16)
             'int16
             16))))))))))
   (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
"Fold templates"
(list
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  x?$9387
  x?$9388
  x?$9389))
here(#(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f #f #f int16) #(struct:uint16_t (bv #x0004 16)) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f #f #f int16) #(struct:uint16_t (bv #x0004 16)) x?$9387 x?$9388 x?$9389))

"Replace templates"
(list
 (cast
  ...
  (vs-shift-right
   ...
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't92))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't91))
     (load-sca (buffer mask 'int8) (var-lookup 't116))
     (load-sca (buffer mask 'int8) (var-lookup 't117))
     (load-sca (buffer mask 'int8) (var-lookup 't118)))
    #f
    #f
    #f
    'int16)
   (uint16_t (bv #x0004 16))
   #f
   #f
   #t)
  'int16
  #t)
 (cast ... (broadcast ... (int16_t (bv #x00ff 16))) 'int16 #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (vec-shr
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't57) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't84) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-mul (var-lookup 't53) 16) 1 16)
              (aligned 16 0))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
               (aligned 16 2))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
              16)
             'int16
             16))
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
               (aligned 16 1))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
              16)
             'int16
             16))))))))))
   (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 #f
 #f
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (vec-min
  (vec-shr #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
optimized-template:
  (vs-shift-right ... #<abstr-expr> (uint16_t (bv #x0004 16)) #f #f #t)
optimized Halide 0:
  (int16_t
 (ite (bvsle (bv #x0000 16) (ite (bvsle (bvashr (app abstr-vals$9402 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9402 0) (bv #x0004 16)) (bv #x00ff 16))) (ite (bvsle (bvashr (app abstr-vals$9402 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9402 0) (bv #x0004 16)) (bv #x00ff 16)) (bv #x0000 16)))
optimized x86 0:
  (int16_t (bvashr (app abstr-vals$9402 0) (bv #x0004 16)))
Ran synthesizer for 50 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (vec-shr
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't57) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't84) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-mul (var-lookup 't53) 16) 1 16)
              (aligned 16 0))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
               (aligned 16 2))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
              16)
             'int16
             16))
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
               (aligned 16 1))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
              16)
             'int16
             16))))))))))
   (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 x?$9387
 x?$9388
 x?$9389)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (vec-min
  (vec-shr #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (uint16_t (bv #x0004 16))
 x?$9387
 x?$9388
 x?$9389)
optimized Halide 0:
  (int16_t
 (ite (bvsle (bv #x0000 16) (ite (bvsle (bvashr (app abstr-vals$9403 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9403 0) (bv #x0004 16)) (bv #x00ff 16))) (ite (bvsle (bvashr (app abstr-vals$9403 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9403 0) (bv #x0004 16)) (bv #x00ff 16)) (bv #x0000 16)))
optimized x86 0:
  (int16_t
 (ite x?$9387 (bvadd (ite x?$9389 (bvashr (app abstr-vals$9403 0) (bv #x0004 16)) (bvlshr (app abstr-vals$9403 0) (bv #x0004 16))) (bvand (bv #x0001 16) (ite x?$9389 (bvashr (app abstr-vals$9403 0) (bv #x0003 16)) (bvlshr (app abstr-vals$9403 0) (bv #x0003 16))))) (ite x?$9389 (bvashr (app abstr-vals$9403 0) (bv #x0004 16)) (bvlshr (app abstr-vals$9403 0) (bv #x0004 16)))))
Ran synthesizer for 49 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (vec-shr
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't57) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't84) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-mul (var-lookup 't53) 16) 1 16)
              (aligned 16 0))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
               (aligned 16 2))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
              16)
             'int16
             16))
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
               (aligned 16 1))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
              16)
             'int16
             16))))))))))
   (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
template:
  (cast ... (broadcast ... (int16_t (bv #x00ff 16))) 'int16 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$9404 idx) (bv #x00ff 16)) (bvsle (bv #x00ff 16) (app abstr-vals$9404 idx)))))
optimized-halide-expr:
  (vec-max
 (vec-min
  (vec-shr
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't57) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't84) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-mul (var-lookup 't53) 16) 1 16)
              (aligned 16 0))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
               (aligned 16 2))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
              16)
             'int16
             16))
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
               (aligned 16 1))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
              16)
             'int16
             16))))))))))
   (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  #<abstr-halide-expr>)
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 #t)
optimized Halide 0:
  (int16_t
 (ite (bvsle (bv #x0000 16) (ite (bvsle (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9404 0)) (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9404 0))) (ite (bvsle (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9404 0)) (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9404 0)) (bv #x0000 16)))
optimized x86 0:
  (int16_t (app abstr-vals$9404 0))
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (vec-shr
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't57) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't84) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-mul (var-lookup 't53) 16) 1 16)
              (aligned 16 0))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
               (aligned 16 2))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
              16)
             'int16
             16))
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
               (aligned 16 1))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
              16)
             'int16
             16))))))))))
   (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
template:
  (cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 'int16
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$9405 idx) (bv #x07ff 16)) (bvsle (bv #xf800 16) (app abstr-vals$9405 idx)))))
optimized-halide-expr:
  (vec-max
 (vec-min #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 #t)
optimized Halide 0:
  (int16_t
 (ite (bvsle (bv #x0000 16) (ite (bvsle (app abstr-vals$9405 0) (bv #x00ff 16)) (app abstr-vals$9405 0) (bv #x00ff 16))) (ite (bvsle (app abstr-vals$9405 0) (bv #x00ff 16)) (app abstr-vals$9405 0) (bv #x00ff 16)) (bv #x0000 16)))
optimized x86 0:
  (int16_t (app abstr-vals$9405 0))
Ran synthesizer for 67 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (vec-shr
   (vec-add
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer input_bounded 'uint8)
        (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
        (aligned 16 1))
       'uint16
       16)
      'int16
      16)
     (vec-cast
      (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
      'int16
      16))
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-mul (var-lookup 't57) 16) 1 16)
         (aligned 16 0))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
          (aligned 16 2))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-mul (var-lookup 't84) 16) 1 16)
           (aligned 16 0))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
            (aligned 16 1))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast
           (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
           16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
             (aligned 16 2))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-mul (var-lookup 't53) 16) 1 16)
              (aligned 16 0))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't92)) 16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
               (aligned 16 2))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
              16)
             'int16
             16))
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
               (aligned 16 1))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
              16)
             'int16
             16))))))))))
   (sca-broadcast (uint16_t (bv #x0004 16)) 16))
  (sca-broadcast (int16_t (bv #x00ff 16)) 16))
 (sca-broadcast (int16_t (bv #x0000 16)) 16))
template:
  (maximum
 ...
 (minimum
  ...
  (vs-shift-right
   ...
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't92))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't91))
     (load-sca (buffer mask 'int8) (var-lookup 't116))
     (load-sca (buffer mask 'int8) (var-lookup 't117))
     (load-sca (buffer mask 'int8) (var-lookup 't118)))
    #f
    #f
    #f
    'int16)
   (uint16_t (bv #x0004 16))
   #f
   #f
   #t)
  (broadcast ... (int16_t (bv #x00ff 16))))
 (broadcast ... (int16_t (bv #x0000 16))))
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$9406 idx) (bv #x00ff 16)) (bvsle (bv #xf800 16) (app abstr-vals$9406 idx))))
 (forall (idx) (&& (bvsle (app abstr-vals$9407 idx) (bv #x0000 16)) (bvsle (bv #x0000 16) (app abstr-vals$9407 idx)))))
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (int16_t
 (ite (bvsle (app abstr-vals$9407 0) (app abstr-vals$9406 0)) (app abstr-vals$9406 0) (app abstr-vals$9407 0)))
optimized x86 0:
  (int16_t
 (ite (bvsle (app abstr-vals$9407 0) (app abstr-vals$9406 0)) (app abstr-vals$9406 0) (app abstr-vals$9407 0)))
Ran synthesizer for 37 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 (minimum
  ...
  (vs-shift-right
   ...
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't92))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't91))
     (load-sca (buffer mask 'int8) (var-lookup 't116))
     (load-sca (buffer mask 'int8) (var-lookup 't117))
     (load-sca (buffer mask 'int8) (var-lookup 't118)))
    #f
    #f
    #f
    'int16)
   (uint16_t (bv #x0004 16))
   #f
   #f
   #t)
  (broadcast ... (int16_t (bv #x00ff 16))))
 (broadcast ... (int16_t (bv #x0000 16))))
Ran bounds analysis for 23 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(maximum
 ...
 (minimum
  ...
  (vs-shift-right
   ...
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't92))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't91))
     (load-sca (buffer mask 'int8) (var-lookup 't116))
     (load-sca (buffer mask 'int8) (var-lookup 't117))
     (load-sca (buffer mask 'int8) (var-lookup 't118)))
    #f
    #f
    #f
    'int16)
   (uint16_t (bv #x0004 16))
   #f
   #f
   #t)
  (broadcast ... (int16_t (bv #x00ff 16))))
 (broadcast ... (int16_t (bv #x0000 16))))
"Building Expr:"
(vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
"Fold templates"
(list
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  x?$9410
  x?$9411
  x?$9412))
here(#(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f #f #f int16) #(struct:uint16_t (bv #x0004 16)) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #<load-data> (#(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t92> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t92>) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 2)) #(struct:load-sca #(struct:buffer mask int8) #(struct:sca-add #<var-lookup: t91> 1)) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t91>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t116>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t117>) #(struct:load-sca #(struct:buffer mask int8) #<var-lookup: t118>)) #f #f #f int16) #(struct:uint16_t (bv #x0004 16)) x?$9410 x?$9411 x?$9412))

"Replace templates"
(list
 (cast
  ...
  (vs-shift-right
   ...
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't92))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
     (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
     (load-sca (buffer mask 'int8) (var-lookup 't91))
     (load-sca (buffer mask 'int8) (var-lookup 't116))
     (load-sca (buffer mask 'int8) (var-lookup 't117))
     (load-sca (buffer mask 'int8) (var-lookup 't118)))
    #f
    #f
    #f
    'int16)
   (uint16_t (bv #x0004 16))
   #f
   #f
   #t)
  'uint8
  #t)
 (cast ... (broadcast ... (int16_t (bv #x00ff 16))) 'uint8 #t)
 (cast
  ...
  (minimum
   ...
   (vs-shift-right
    ...
    (vs-mpy-add
     ...
     #<load-data>
     (list
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
      (load-sca (buffer mask 'int8) (var-lookup 't92))
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
      (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
      (load-sca (buffer mask 'int8) (var-lookup 't91))
      (load-sca (buffer mask 'int8) (var-lookup 't116))
      (load-sca (buffer mask 'int8) (var-lookup 't117))
      (load-sca (buffer mask 'int8) (var-lookup 't118)))
     #f
     #f
     #f
     'int16)
    (uint16_t (bv #x0004 16))
    #f
    #f
    #t)
   (broadcast ... (int16_t (bv #x00ff 16))))
  'uint8
  #t)
 (cast ... (broadcast ... (int16_t (bv #x0000 16))) 'uint8 #t))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 #f
 #f
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
optimized-template:
  (vs-shift-right ... #<abstr-expr> (uint16_t (bv #x0004 16)) #f #f #t)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (ite (bvsle (bv #x0000 16) (ite (bvsle (bvashr (app abstr-vals$9413 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9413 0) (bv #x0004 16)) (bv #x00ff 16))) (ite (bvsle (bvashr (app abstr-vals$9413 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9413 0) (bv #x0004 16)) (bv #x00ff 16)) (bv #x0000 16))))
optimized x86 0:
  (int16_t (bvashr (app abstr-vals$9413 0) (bv #x0004 16)))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't92))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
   (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
   (load-sca (buffer mask 'int8) (var-lookup 't91))
   (load-sca (buffer mask 'int8) (var-lookup 't116))
   (load-sca (buffer mask 'int8) (var-lookup 't117))
   (load-sca (buffer mask 'int8) (var-lookup 't118)))
  #f
  #f
  #f
  'int16)
 (uint16_t (bv #x0004 16))
 x?$9410
 x?$9411
 x?$9412)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr #<abstr-halide-expr> (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (uint16_t (bv #x0004 16))
 x?$9410
 x?$9411
 x?$9412)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (ite (bvsle (bv #x0000 16) (ite (bvsle (bvashr (app abstr-vals$9414 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9414 0) (bv #x0004 16)) (bv #x00ff 16))) (ite (bvsle (bvashr (app abstr-vals$9414 0) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (app abstr-vals$9414 0) (bv #x0004 16)) (bv #x00ff 16)) (bv #x0000 16))))
optimized x86 0:
  (int16_t
 (ite x?$9410 (bvadd (ite x?$9412 (bvashr (app abstr-vals$9414 0) (bv #x0004 16)) (bvlshr (app abstr-vals$9414 0) (bv #x0004 16))) (bvand (bv #x0001 16) (ite x?$9412 (bvashr (app abstr-vals$9414 0) (bv #x0003 16)) (bvlshr (app abstr-vals$9414 0) (bv #x0003 16))))) (ite x?$9412 (bvashr (app abstr-vals$9414 0) (bv #x0004 16)) (bvlshr (app abstr-vals$9414 0) (bv #x0004 16)))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
template:
  (cast ... (broadcast ... (int16_t (bv #x00ff 16))) 'uint8 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$9415 idx) (bv #x00ff 16)) (bvsle (bv #x00ff 16) (app abstr-vals$9415 idx)))))
optimized-halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   #<abstr-halide-expr>)
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (ite (bvsle (bv #x0000 16) (ite (bvsle (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9415 0)) (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9415 0))) (ite (bvsle (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9415 0)) (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (app abstr-vals$9415 0)) (bv #x0000 16))))
optimized x86 0:
  (uint8_t
 (ite (bvslt (app abstr-vals$9415 0) (bv #x0000 16)) (bv #x00 8) (ite (bvslt (bv #x00ff 16) (app abstr-vals$9415 0)) (bv #xff 8) (extract 7 0 (app abstr-vals$9415 0)))))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
template:
  (cast ... (broadcast ... (int16_t (bv #x0000 16))) 'uint8 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$9416 idx) (bv #x0000 16)) (bvsle (bv #x0000 16) (app abstr-vals$9416 idx)))))
optimized-halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  #<abstr-halide-expr>)
 'uint8
 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (ite (bvsle (app abstr-vals$9416 0) (ite (bvsle (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x00ff 16))) (ite (bvsle (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x00ff 16)) (bvashr (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (+ 1 (- t161)) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t161) (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -24 t173)))) (bitvector 16)) (sign-extend (app mask (+ (- t136) (+ 2 (- t161)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ t163 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -32 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t163 (- t136)))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -16 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ t162 (- t136))) (bitvector 16))) (bvadd (bvmul (zero-extend (app input_bounded (+ -14 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 2 (+ t162 (- t136)))) (bitvector 16))) (bvmul (zero-extend (app input_bounded (+ -15 (+ output.s0.x.x (+ -40 t173)))) (bitvector 16)) (sign-extend (app mask (+ 1 (+ t162 (- t136)))) (bitvector 16))))))))))) (bv #x0004 16)) (bv #x00ff 16)) (app abstr-vals$9416 0))))
optimized x86 0:
  (uint8_t
 (ite (bvslt (app abstr-vals$9416 0) (bv #x0000 16)) (bv #x00 8) (ite (bvslt (bv #x00ff 16) (app abstr-vals$9416 0)) (bv #xff 8) (extract 7 0 (app abstr-vals$9416 0)))))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
template:
  (cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 'uint8
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$9417 idx) (bv #x07ff 16)) (bvsle (bv #xf800 16) (app abstr-vals$9417 idx)))))
optimized-halide-expr:
  (vec-cast
 (vec-max
  (vec-min #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint8 #t)
optimized Halide 0:
  (uint8_t
 (extract 7 0 (ite (bvsle (bv #x0000 16) (ite (bvsle (app abstr-vals$9417 0) (bv #x00ff 16)) (app abstr-vals$9417 0) (bv #x00ff 16))) (ite (bvsle (app abstr-vals$9417 0) (bv #x00ff 16)) (app abstr-vals$9417 0) (bv #x00ff 16)) (bv #x0000 16))))
optimized x86 0:
  (uint8_t
 (ite (bvslt (app abstr-vals$9417 0) (bv #x0000 16)) (bv #x00 8) (ite (bvslt (bv #x00ff 16) (app abstr-vals$9417 0)) (bv #xff 8) (extract 7 0 (app abstr-vals$9417 0)))))
Ran synthesizer for 61 ms
(model)
(vec-cast
 (vec-max
  (vec-min #<abstr-halide-expr> (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)
(cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 'uint8
 #t)
Ran bounds analysis for 21 ms
Ran bounds analysis for 12 ms
"Success?"
#t
(cast ... (vs-shift-right ... (vs-mpy-add ... #<load-data> (list (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1)) (load-sca (buffer mask 'int8) (var-lookup 't92)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2)) (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1)) (load-sca (buffer mask 'int8) (var-lookup 't91)) (load-sca (buffer mask 'int8) (var-lookup 't116)) (load-sca (buffer mask 'int8) (var-lookup 't117)) (load-sca (buffer mask 'int8) (var-lookup 't118))) #f #f #f 'int16) (uint16_t (bv #x0004 16)) #f #f #t) 'uint8 #t)

(x86) Successfully found an equivalent IR expression.

(cast
 ...
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   #<load-data>
   (list
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't92))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
    (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
    (load-sca (buffer mask 'int8) (var-lookup 't91))
    (load-sca (buffer mask 'int8) (var-lookup 't116))
    (load-sca (buffer mask 'int8) (var-lookup 't117))
    (load-sca (buffer mask 'int8) (var-lookup 't118)))
   #f
   #f
   #f
   'int16)
  (uint16_t (bv #x0004 16))
  #f
  #f
  #t)
 'uint8
 #t)

Synthesis time: 15 seconds

Synthesizing x86 for:
(vec-cast
 (vec-max
  (vec-min
   (vec-shr
    (vec-add
     (vec-mul
      (vec-cast
       (vec-cast
        (load
         (buffer input_bounded 'uint8)
         (ramp (sca-add (sca-mul (var-lookup 't57) 16) 1) 1 16)
         (aligned 16 1))
        'uint16
        16)
       'int16
       16)
      (vec-cast
       (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't118)) 16)
       'int16
       16))
     (vec-add
      (vec-mul
       (vec-cast
        (vec-cast
         (load
          (buffer input_bounded 'uint8)
          (ramp (sca-mul (var-lookup 't57) 16) 1 16)
          (aligned 16 0))
         'uint16
         16)
        'int16
        16)
       (vec-cast
        (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't117)) 16)
        'int16
        16))
      (vec-add
       (vec-mul
        (vec-cast
         (vec-cast
          (load
           (buffer input_bounded 'uint8)
           (ramp (sca-add (sca-mul (var-lookup 't57) 16) 2) 1 16)
           (aligned 16 2))
          'uint16
          16)
         'int16
         16)
        (vec-cast
         (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't116)) 16)
         'int16
         16))
       (vec-add
        (vec-mul
         (vec-cast
          (vec-cast
           (load
            (buffer input_bounded 'uint8)
            (ramp (sca-mul (var-lookup 't84) 16) 1 16)
            (aligned 16 0))
           'uint16
           16)
          'int16
          16)
         (vec-cast
          (sca-broadcast (load-sca (buffer mask 'int8) (var-lookup 't91)) 16)
          'int16
          16))
        (vec-add
         (vec-mul
          (vec-cast
           (vec-cast
            (load
             (buffer input_bounded 'uint8)
             (ramp (sca-add (sca-mul (var-lookup 't84) 16) 1) 1 16)
             (aligned 16 1))
            'uint16
            16)
           'int16
           16)
          (vec-cast
           (sca-broadcast
            (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 1))
            16)
           'int16
           16))
         (vec-add
          (vec-mul
           (vec-cast
            (vec-cast
             (load
              (buffer input_bounded 'uint8)
              (ramp (sca-add (sca-mul (var-lookup 't84) 16) 2) 1 16)
              (aligned 16 2))
             'uint16
             16)
            'int16
            16)
           (vec-cast
            (sca-broadcast
             (load-sca (buffer mask 'int8) (sca-add (var-lookup 't91) 2))
             16)
            'int16
            16))
          (vec-add
           (vec-mul
            (vec-cast
             (vec-cast
              (load
               (buffer input_bounded 'uint8)
               (ramp (sca-mul (var-lookup 't53) 16) 1 16)
               (aligned 16 0))
              'uint16
              16)
             'int16
             16)
            (vec-cast
             (sca-broadcast
              (load-sca (buffer mask 'int8) (var-lookup 't92))
              16)
             'int16
             16))
           (vec-add
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 2) 1 16)
                (aligned 16 2))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 2))
               16)
              'int16
              16))
            (vec-mul
             (vec-cast
              (vec-cast
               (load
                (buffer input_bounded 'uint8)
                (ramp (sca-add (sca-mul (var-lookup 't53) 16) 1) 1 16)
                (aligned 16 1))
               'uint16
               16)
              'int16
              16)
             (vec-cast
              (sca-broadcast
               (load-sca (buffer mask 'int8) (sca-add (var-lookup 't92) 1))
               16)
              'int16
              16))))))))))
    (sca-broadcast (uint16_t (bv #x0004 16)) 16))
   (sca-broadcast (int16_t (bv #x00ff 16)) 16))
  (sca-broadcast (int16_t (bv #x0000 16)) 16))
 'uint8
 16)


synthesize-x86 output:
#<void>
#f
