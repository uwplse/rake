Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))
Ran synthesizer for 21 ms
(model
 [idx$0 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(sca-broadcast (uint16_t (bv #x0002 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (uint16_t (bv #x0002 16)) 16)
template:
  (broadcast ... (uint16_t (bv #x0002 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (uint16_t (bv #x0002 16)) 16)
optimized-template:
  (broadcast ... (uint16_t (bv #x0002 16)))
optimized Halide 0:
  (uint16_t (bv #x0002 16))
optimized x86 0:
  (uint16_t (bv #x0002 16))
Ran synthesizer for 14 ms
(model)
(sca-broadcast (uint16_t (bv #x0002 16)) 16)
(broadcast ... (uint16_t (bv #x0002 16)))
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(broadcast ... (uint16_t (bv #x0002 16)))
"Building Expr:"
(vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$131))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$131))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (uint16_t (bv #x0004 16)))
  #f
  #f
  #f
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$131)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-shl
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$131)
optimized Halide 0:
  (int16_t
 (bvshl (zero-extend (app abstr-vals$196 0) (bitvector 16)) (bv #x0002 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$196 0) (bitvector 16)))
Ran synthesizer for 42 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-shl
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvshl (zero-extend (app abstr-vals$197 0) (bitvector 16)) (bv #x0002 16)))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0004 16) (zero-extend (app abstr-vals$197 0) (bitvector 16))))
Ran synthesizer for 55 ms
(model)
(vec-shl
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
Ran bounds analysis for 20 ms
Ran bounds analysis for 17 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))))
Ran synthesizer for 18 ms
(model
 [idx$199 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 17 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$328 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$328 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 20 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$330))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$330))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (uint16_t (bv #x0004 16)))
  #f
  #f
  #f
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$330)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-shl
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$330)
optimized Halide 0:
  (int16_t
 (bvshl (zero-extend (app abstr-vals$395 0) (bitvector 16)) (bv #x0002 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$395 0) (bitvector 16)))
Ran synthesizer for 44 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-shl
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
   (aligned 16 0))
  'int16
  16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-shl
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvshl (zero-extend (app abstr-vals$396 0) (bitvector 16)) (bv #x0002 16)))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0004 16) (zero-extend (app abstr-vals$396 0) (bitvector 16))))
Ran synthesizer for 56 ms
(model)
(vec-shl
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (uint16_t (bv #x0002 16)) 16))
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
Ran bounds analysis for 21 ms
Ran bounds analysis for 18 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))
Ran synthesizer for 21 ms
(model
 [idx$398 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint16_t
 (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
  (aligned 16 0))
 'uint16
 16)
template:
  (cast ... #<load-data> 'uint16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint16 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint16 #f)
optimized Halide 0:
  (uint16_t (zero-extend (app abstr-vals$527 0) (bitvector 16)))
optimized x86 0:
  (uint16_t (zero-extend (app abstr-vals$527 0) (bitvector 16)))
Ran synthesizer for 19 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint16 16)
(cast ... #<load-data> 'uint16 #f)
Ran bounds analysis for 23 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint16 #f)
"Building Expr:"
(vec-cast
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$529))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$529))

"Replace templates"
(list (cast ... #<load-data> 'int16 #f))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
   (aligned 16 0))
  'uint16
  16)
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 x?$529)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$529)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$594 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$594 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
(cast ... #<load-data> 'int16 x?$529)
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Success?"
#t
(cast ... #<load-data> 'int16 x?$529)
"Building Expr:"
(sca-broadcast (int8_t (bv #x06 8)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int8_t (bv #x06 8)) 16)
template:
  (broadcast ... (int8_t (bv #x06 8)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int8_t (bv #x06 8)) 16)
optimized-template:
  (broadcast ... (int8_t (bv #x06 8)))
optimized Halide 0:
  (int8_t (bv #x06 8))
optimized x86 0:
  (int8_t (bv #x06 8))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (int8_t (bv #x06 8)) 16)
(broadcast ... (int8_t (bv #x06 8)))
Ran bounds analysis for 22 ms
Ran bounds analysis for 11 ms
"Extended success?"
#t
(broadcast ... (int8_t (bv #x06 8)))
"Building Expr:"
(vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)
template:
  (cast ... (broadcast ... (int8_t (bv #x06 8))) 'int16 #f)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$596 idx) (bv #x06 8)) (bvsle (bv #x06 8) (app abstr-vals$596 idx)))))
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (sign-extend (app abstr-vals$596 0) (bitvector 16)))
optimized x86 0:
  (int16_t (sign-extend (app abstr-vals$596 0) (bitvector 16)))
Ran synthesizer for 36 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... (broadcast ... (int8_t (bv #x06 8))) 'int16 #f)
Ran bounds analysis for 17 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(cast ... (broadcast ... (int8_t (bv #x06 8))) 'int16 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
"Fold templates"
(list
 #<load-data>
 (cast ... #<load-data> 'int16 x?$598)
 (cast ... (broadcast ... (int8_t (bv #x06 8))) 'int16 x?$663))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$598) #(struct:cast ... #(struct:broadcast ... #(struct:int8_t (bv #x06 8))) int16 x?$663))

(list (vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$856) (! x?$857) (! x?$858) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$859) (! x?$860) (! x?$861) 'int16))
(list (vs-mpy-add ... (broadcast ... (int8_t (bv #x06 8))) (list (int8_t (bv #x06 8))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16) (vv-mpy-add ... (broadcast ... (int8_t (bv #x06 8))) '(1) (! x?$1054) (! x?$1055) (! x?$1056) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1057) (! x?$1058) (! x?$1059) 'int16))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16)
 (vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$856) (! x?$857) (! x?$858) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$859) (! x?$860) (! x?$861) 'int16)
 (vs-mpy-add
  ...
  (broadcast ... (int8_t (bv #x06 8)))
  (list (int8_t (bv #x06 8)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16)
 (vv-mpy-add
  ...
  (broadcast ... (int8_t (bv #x06 8)))
  '(1)
  (! x?$1054)
  (! x?$1055)
  (! x?$1056)
  'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1057) (! x?$1058) (! x?$1059) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
template:
  (cast ... #<load-data> 'int16 x?$598)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$598)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0006 16) (zero-extend (app abstr-vals$1060 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1060 0) (bitvector 16)))
Ran synthesizer for 41 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
    (aligned 16 0))
   'uint16
   16)
  'int16
  16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
template:
  (vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int8_t (bv #x06 8))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0006 16) (zero-extend (app abstr-vals$1061 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0006 16) (zero-extend (app abstr-vals$1061 0) (bitvector 16))))
Ran synthesizer for 15 ms
(model)
(vec-mul
 (vec-cast (vec-cast #<abstr-halide-expr> 'uint16 16) 'int16 16)
 (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))
(vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16)
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int8_t (bv #x06 8))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (uint16_t (bv #x0004 16))
   (union [(&& xi?$1067 (! xi?$1066)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1066 (&& (! xi?$1066) (! xi?$1067))) #(struct:int8_t
                                                                                                                         (ite* (⊢ xi?$1066 (bv #x06 8)) (⊢ (&& (! xi?$1066) (! xi?$1067)) (bv #x01 8))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (uint16_t (bv #x0004 16)))
  #f
  x?$1064
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (uint16_t (bv #x0004 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$1068 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:uint16_t (bv #x0004 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1068) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:int8_t (bv #x06 8)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (uint16_t (bv #x0004 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:int8_t (bv #x06 8))
    (union [(&& xi?$1265 (! xi?$1264)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1264 (&& (! xi?$1264) (! xi?$1265))) #(struct:int8_t
                                                                                                                          (ite* (⊢ xi?$1264 (bv #x06 8)) (⊢ (&& (! xi?$1264) (! xi?$1265)) (bv #x01 8))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:int8_t (bv #x06 8)))
  #f
  x?$1262
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:int8_t (bv #x06 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$1266 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:uint16_t (bv #x0004 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1266) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:int8_t (bv #x06 8)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (int8_t (bv #x06 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) (union #:size 2 #:hash 1417717552509)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16))) #f x?$1064 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16))) #f #f #f int16) (union #:size 2 #:hash 409205047301)> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int8_t (bv #x06 8)) (union #:size 2 #:hash 1417630258244)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int8_t (bv #x06 8))) #f x?$1262 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int8_t (bv #x06 8))) #f #f #f int16) (union #:size 2 #:hash 409192042331)> (#(struct:int8_t (bv #x06 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1197) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$1197) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16)))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1395) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$1395) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))))
Ran synthesizer for 1 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (union [(&& xi?$1067 (! xi?$1066)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1066 (&& (! xi?$1066) (! xi?$1067))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1066 (bv #x06 8)) (⊢ (&& (! xi?$1066) (! xi?$1067)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (union [(&& xi?$1067 (! xi?$1066)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1066 (&& (! xi?$1066) (! xi?$1067))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1066 (bv #x06 8)) (⊢ (&& (! xi?$1066) (! xi?$1067)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0004 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$200) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$200) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))) (bitvector 16)) (ite* (⊢ (&& xi?$1067 (! xi?$1066)) (bv #x0004 16)) (⊢ (|| xi?$1066 (&& (! xi?$1066) (! xi?$1067))) (sign-extend (ite* (⊢ xi?$1066 (bv #x06 8)) (⊢ (&& (! xi?$1066) (! xi?$1067)) (bv #x01 8))) (bitvector 16)))))))
Ran synthesizer for 85 ms
(model
 [idx$200 1]
 [xi?$1066 #t]
 [xi?$1067 #f])
(vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-mul
  (vec-cast
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
     (aligned 16 0))
    'uint16
    16)
   'int16
   16)
  (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16)))
(vs-mpy-add
 ...
 #<load-data>
 (list (uint16_t (bv #x0004 16)) (int8_t (bv #x06 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 25 ms
Ran bounds analysis for 18 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16)) (int8_t (bv #x06 8))) #f #f #f 'int16)
"Building Expr:"
(vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (uint16_t (bv #x0004 16))
   (union [(&& xi?$1463 (! xi?$1462)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1462 (&& (! xi?$1462) (! xi?$1463))) #(struct:int8_t
                                                                                                                         (ite* (⊢ xi?$1462 (bv #x06 8)) (⊢ (&& (! xi?$1462) (! xi?$1463)) (bv #x01 8))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (uint16_t (bv #x0004 16)))
  #f
  x?$1460
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (uint16_t (bv #x0004 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$1464 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:uint16_t (bv #x0004 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1464) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:uint16_t (bv #x0004 16))
                                             #(struct:int8_t (bv #x06 8)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (uint16_t (bv #x0004 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:uint16_t (bv #x0004 16))
    #(struct:int8_t (bv #x06 8))
    (union [(&& xi?$1661 (! xi?$1660)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1660 (&& (! xi?$1660) (! xi?$1661))) #(struct:int8_t
                                                                                                                          (ite* (⊢ xi?$1660 (bv #x06 8)) (⊢ (&& (! xi?$1660) (! xi?$1661)) (bv #x01 8))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  '(#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)))
  #f
  x?$1658
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    '(#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$1662 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:uint16_t (bv #x0004 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1662) #(struct:vs-mpy-add
                                            ...
                                            #<load-data>
                                            (#(struct:uint16_t (bv #x0004 16))
                                             #(struct:int8_t (bv #x06 8)))
                                            #f
                                            #f
                                            #f
                                            int16)]))
  (list (uint16_t (bv #x0004 16)) (int8_t (bv #x06 8)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) (union #:size 2 #:hash 1420619570083)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16))) #f x?$1460 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16))) #f #f #f int16) (union #:size 2 #:hash 409526104047)> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) (union #:size 2 #:hash 1420615765244)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8))) #f x?$1658 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8))) #f #f #f int16) (union #:size 2 #:hash 409761509523)> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1593) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$1593) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 2 idx$1593) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$1791) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$1791) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 2 idx$1791) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (union [(&& xi?$1463 (! xi?$1462)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1462 (&& (! xi?$1462) (! xi?$1463))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1462 (bv #x06 8)) (⊢ (&& (! xi?$1462) (! xi?$1463)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (union [(&& xi?$1463 (! xi?$1462)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1462 (&& (! xi?$1462) (! xi?$1463))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1462 (bv #x06 8)) (⊢ (&& (! xi?$1462) (! xi?$1463)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0004 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$1) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137))))) (⊢ (= 1 idx$1) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 2 idx$1) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))))) (bitvector 16)) (ite* (⊢ (&& xi?$1463 (! xi?$1462)) (bv #x0004 16)) (⊢ (|| xi?$1462 (&& (! xi?$1462) (! xi?$1463))) (sign-extend (ite* (⊢ xi?$1462 (bv #x06 8)) (⊢ (&& (! xi?$1462) (! xi?$1463)) (bv #x01 8))) (bitvector 16)))))))
Ran synthesizer for 117 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (uint16_t (bv #x0004 16)))
 #f
 x?$1460
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (uint16_t (bv #x0004 16)))
 #f
 x?$1460
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16)))) (bvshl (zero-extend (app abstr-vals$1855 0) (bitvector 16)) (bv #x0002 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0004 16) (zero-extend (app abstr-vals$1855 0) (bitvector 16))) (ite x?$1460 (bv #x0001 16) (bv #x0000 16))))
Ran synthesizer for 88 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (union [(&& xi?$1661 (! xi?$1660)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1660 (&& (! xi?$1660) (! xi?$1661))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1660 (bv #x06 8)) (⊢ (&& (! xi?$1660) (! xi?$1661)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (union [(&& xi?$1661 (! xi?$1660)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1660 (&& (! xi?$1660) (! xi?$1661))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1660 (bv #x06 8)) (⊢ (&& (! xi?$1660) (! xi?$1661)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))) (bvmul (bv #x0004 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$201) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$201) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 2 idx$201) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))) (bitvector 16)) (ite* (⊢ (&& xi?$1661 (! xi?$1660)) (bv #x0004 16)) (⊢ (|| xi?$1660 (&& (! xi?$1660) (! xi?$1661))) (sign-extend (ite* (⊢ xi?$1660 (bv #x06 8)) (⊢ (&& (! xi?$1660) (! xi?$1661)) (bv #x01 8))) (bitvector 16)))))))
Ran synthesizer for 135 ms
(model
 [idx$201 2]
 [xi?$1660 #f]
 [xi?$1661 #t])
(vec-add
 (vec-shl
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
    (aligned 16 0))
   'int16
   16)
  (sca-broadcast (uint16_t (bv #x0002 16)) 16))
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-mul
   (vec-cast
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
      (aligned 16 0))
     'uint16
     16)
    'int16
    16)
   (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 25 ms
Ran bounds analysis for 20 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16)) (int8_t (bv #x06 8)) (uint16_t (bv #x0004 16))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))))
Ran synthesizer for 18 ms
(model
 [idx$1856 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 16 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$1985 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1985 0) (bitvector 16)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 20 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x06 8))
   (uint16_t (bv #x0004 16))
   (union [(&& xi?$1991 (! xi?$1990)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1990 (&& (! xi?$1990) (! xi?$1991))) #(struct:int8_t
                                                                                                                         (ite* (⊢ xi?$1990 (bv #x06 8)) (⊢ (&& (! xi?$1990) (! xi?$1991)) (bv #x01 8))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x06 8))
   (uint16_t (bv #x0004 16)))
  #f
  x?$1988
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (uint16_t (bv #x0004 16))
     (int8_t (bv #x06 8))
     (uint16_t (bv #x0004 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$1992 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:uint16_t (bv #x0004 16))
                      #(struct:int8_t (bv #x06 8))
                      #(struct:uint16_t (bv #x0004 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1992) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x06 8))
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$2185))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16)) (union #:size 2 #:hash 1421246278956)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16))) #f x?$1988 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16))) #f #f #f int16) (union #:size 2 #:hash 404252945308)> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$2185))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$2316)
  (! x?$2317)
  (! x?$2318)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2121) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$2121) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 2 idx$2121) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137))))) (⊢ (= 3 idx$2121) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2186) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$2186) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 2 idx$2186) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137))))) (⊢ (= 3 idx$2186) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16))
  (union [(&& xi?$1991 (! xi?$1990)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1990 (&& (! xi?$1990) (! xi?$1991))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1990 (bv #x06 8)) (⊢ (&& (! xi?$1990) (! xi?$1991)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16))
  (union [(&& xi?$1991 (! xi?$1990)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$1990 (&& (! xi?$1990) (! xi?$1991))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$1990 (bv #x06 8)) (⊢ (&& (! xi?$1990) (! xi?$1991)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))) (bvmul (bv #x0004 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)))) (bvmul (bv #x0004 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$202) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$202) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 2 idx$202) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137))))) (⊢ (= 3 idx$202) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))))) (bitvector 16)) (ite* (⊢ (&& xi?$1991 (! xi?$1990)) (bv #x0004 16)) (⊢ (|| xi?$1990 (&& (! xi?$1990) (! xi?$1991))) (sign-extend (ite* (⊢ xi?$1990 (bv #x06 8)) (⊢ (&& (! xi?$1990) (! xi?$1991)) (bv #x01 8))) (bitvector 16)))))))
Ran synthesizer for 170 ms
(model
 [idx$202 3]
 [xi?$1990 #f]
 [xi?$1991 #f])
(vec-add
 (vec-add
  (vec-shl
   (vec-cast
    (load
     (buffer bounded_input 'uint8)
     (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
     (aligned 16 0))
    'int16
    16)
   (sca-broadcast (uint16_t (bv #x0002 16)) 16))
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-mul
    (vec-cast
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
       (aligned 16 0))
      'uint16
      16)
     'int16
     16)
    (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 26 ms
Ran bounds analysis for 21 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16)) (int8_t (bv #x06 8)) (uint16_t (bv #x0004 16)) (int8_t (bv #x01 8))) #f #f #f 'int16)
"Building Expr:"
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
 (aligned 16 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
 (aligned 16 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
 (aligned 16 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))))
Ran synthesizer for 17 ms
(model
 [idx$2319 0])
(load
 (buffer bounded_input 'uint8)
 (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
 (aligned 16 0))
#<load-data>
Ran bounds analysis for 17 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))) (bitvector 16)))
optimized x86 0:
  (uint8_t (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer bounded_input 'uint8)
  (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
  (aligned 16 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$2448 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$2448 0) (bitvector 16)))
Ran synthesizer for 17 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x06 8))
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x01 8))
   (union [(&& xi?$2454 (! xi?$2453)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$2453 (&& (! xi?$2453) (! xi?$2454))) #(struct:int8_t
                                                                                                                         (ite* (⊢ xi?$2453 (bv #x06 8)) (⊢ (&& (! xi?$2453) (! xi?$2454)) (bv #x01 8))))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x06 8))
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x01 8)))
  #f
  x?$2451
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list
     (uint16_t (bv #x0004 16))
     (int8_t (bv #x06 8))
     (uint16_t (bv #x0004 16))
     (int8_t (bv #x01 8)))
    #f
    #f
    #f
    'int16)
   (union [x?$2455 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:uint16_t (bv #x0004 16))
                      #(struct:int8_t (bv #x06 8))
                      #(struct:uint16_t (bv #x0004 16))
                      #(struct:int8_t (bv #x01 8)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$2455) #(struct:cast
                                            ...
                                            #<load-data>
                                            int16
                                            #f)]))
  (list
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x06 8))
   (uint16_t (bv #x0004 16))
   (int8_t (bv #x01 8))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16)
 #<load-data>
 (cast ... #<load-data> 'int16 x?$2648))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x01 8)) (union #:size 2 #:hash 1419604476200)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x01 8))) #f x?$2451 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) (union #:size 2 #:hash 407026882731)> (#(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x06 8)) #(struct:uint16_t (bv #x0004 16)) #(struct:int8_t (bv #x01 8)) #(struct:int8_t (bv #x01 8))) #f #f #f int16) #<load-data> #(struct:cast ... #<load-data> int16 x?$2648))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$2779)
  (! x?$2780)
  (! x?$2781)
  'int16))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2584) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$2584) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137))))) (⊢ (= 2 idx$2584) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 3 idx$2584) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137))))) (⊢ (= 4 idx$2584) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (ite* (⊢ (= 0 idx$2649) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$2649) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137))))) (⊢ (= 2 idx$2649) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 3 idx$2649) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137))))) (⊢ (= 4 idx$2649) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x01 8))
  (union [(&& xi?$2454 (! xi?$2453)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$2453 (&& (! xi?$2453) (! xi?$2454))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$2453 (bv #x06 8)) (⊢ (&& (! xi?$2453) (! xi?$2454)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x01 8))
  (union [(&& xi?$2454 (! xi?$2453)) #(struct:uint16_t (bv #x0004 16))] [(|| xi?$2453 (&& (! xi?$2453) (! xi?$2454))) #(struct:int8_t
                                                                                                                        (ite* (⊢ xi?$2453 (bv #x06 8)) (⊢ (&& (! xi?$2453) (! xi?$2454)) (bv #x01 8))))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)) (bv #x0002 16)) (bvadd (bvshl (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)) (bv #x0002 16)) (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvadd (bvadd (bvadd (bvadd (bvmul (bv #x0006 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137)))) (bitvector 16))) (bvmul (bv #x0004 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137)))) (bitvector 16)))) (bvmul (bv #x0004 16) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137)))) (bitvector 16)))) (zero-extend (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137)))) (bitvector 16))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$203) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -40 t137))))) (⊢ (= 1 idx$203) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -32 t137))))) (⊢ (= 2 idx$203) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -24 t137))))) (⊢ (= 3 idx$203) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -16 t137))))) (⊢ (= 4 idx$203) (app bounded_input (+ -16 (+ rows.s0.x.x (+ -48 t137)))))) (bitvector 16)) (ite* (⊢ (&& xi?$2454 (! xi?$2453)) (bv #x0004 16)) (⊢ (|| xi?$2453 (&& (! xi?$2453) (! xi?$2454))) (sign-extend (ite* (⊢ xi?$2453 (bv #x06 8)) (⊢ (&& (! xi?$2453) (! xi?$2454)) (bv #x01 8))) (bitvector 16)))))))
Ran synthesizer for 163 ms
(model
 [idx$203 4]
 [xi?$2453 #f]
 [xi?$2454 #f])
(vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 28 ms
Ran bounds analysis for 22 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (uint16_t (bv #x0004 16)) (int8_t (bv #x06 8)) (uint16_t (bv #x0004 16)) (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'int16)

(x86) Successfully found an equivalent IR expression.

(vs-mpy-add
 ...
 #<load-data>
 (list
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x06 8))
  (uint16_t (bv #x0004 16))
  (int8_t (bv #x01 8))
  (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)

Synthesis time: 3 seconds

Synthesizing x86 for:
(vec-add
 (vec-add
  (vec-add
   (vec-shl
    (vec-cast
     (load
      (buffer bounded_input 'uint8)
      (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't97)) 16) 1 16)
      (aligned 16 0))
     'int16
     16)
    (sca-broadcast (uint16_t (bv #x0002 16)) 16))
   (vec-add
    (vec-shl
     (vec-cast
      (load
       (buffer bounded_input 'uint8)
       (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't101)) 16) 1 16)
       (aligned 16 0))
      'int16
      16)
     (sca-broadcast (uint16_t (bv #x0002 16)) 16))
    (vec-mul
     (vec-cast
      (vec-cast
       (load
        (buffer bounded_input 'uint8)
        (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't100)) 16) 1 16)
        (aligned 16 0))
       'uint16
       16)
      'int16
      16)
     (vec-cast (sca-broadcast (int8_t (bv #x06 8)) 16) 'int16 16))))
  (vec-cast
   (load
    (buffer bounded_input 'uint8)
    (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't98)) 16) 1 16)
    (aligned 16 0))
   'int16
   16))
 (vec-cast
  (load
   (buffer bounded_input 'uint8)
   (ramp (sca-mul (sca-add rows.s0.x.x (var-lookup 't103)) 16) 1 16)
   (aligned 16 0))
  'int16
  16))


synthesize-x86 output:
#<void>
#f
