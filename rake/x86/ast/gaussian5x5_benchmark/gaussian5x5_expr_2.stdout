Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(ramp
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (ramp
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
template:
  (build-vec
 ...
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
axioms:
  '()
optimized-halide-expr:
  (ramp
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
optimized-template:
  (build-vec
 ...
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
optimized Halide 0:
  (int32_t
 (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))))
optimized x86 0:
  (int32_t
 (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))))
Ran synthesizer for 27 ms
(model)
(ramp
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
(build-vec
 ...
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
Ran bounds analysis for 38 ms
Ran bounds analysis for 30 ms
"Extended success?"
#t
(build-vec
 ...
 (sca-add
  (sca-mul
   (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
   (int32_t (bv #x00000010 32)))
  (int32_t (bv #xfffffffe 32)))
 (int32_t (bv #x00000001 32))
 16)
"Building Expr:"
(sca-broadcast
 (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast
 (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
 16)
template:
  (broadcast ... (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast
 (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
 16)
optimized-template:
  (broadcast ... (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
optimized Halide 0:
  (int32_t (bvadd (bv #xffffffff 32) input.extent.0))
optimized x86 0:
  (int32_t (bvadd (bv #xffffffff 32) input.extent.0))
Ran synthesizer for 16 ms
(model)
(sca-broadcast
 (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
 16)
(broadcast ... (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
Ran bounds analysis for 32 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
(broadcast ... (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
"Building Expr:"
(vec-min
 (ramp
  (sca-add
   (sca-mul
    (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
    (int32_t (bv #x00000010 32)))
   (int32_t (bv #xfffffffe 32)))
  (int32_t (bv #x00000001 32))
  16)
 (sca-broadcast
  (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
  16))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-min
 (ramp
  (sca-add
   (sca-mul
    (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
    (int32_t (bv #x00000010 32)))
   (int32_t (bv #xfffffffe 32)))
  (int32_t (bv #x00000001 32))
  16)
 (sca-broadcast
  (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
  16))
template:
  (minimum
 ...
 (build-vec
  ...
  (sca-add
   (sca-mul
    (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
    (int32_t (bv #x00000010 32)))
   (int32_t (bv #xfffffffe 32)))
  (int32_t (bv #x00000001 32))
  16)
 (broadcast
  ...
  (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$0 idx) (bv #x7ffffffe 32)) (bvsle (bv #x8000000e 32) (app abstr-vals$0 idx))))
 #t)
optimized-halide-expr:
  (vec-min #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (minimum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (int32_t
 (ite (bvsle (app abstr-vals$0 0) (app abstr-vals$1 0)) (app abstr-vals$0 0) (app abstr-vals$1 0)))
optimized x86 0:
  (int32_t
 (ite (bvsle (app abstr-vals$0 0) (app abstr-vals$1 0)) (app abstr-vals$0 0) (app abstr-vals$1 0)))
Ran synthesizer for 34 ms
(model)
(vec-min #<abstr-halide-expr> #<abstr-halide-expr>)
(minimum
 ...
 (build-vec
  ...
  (sca-add
   (sca-mul
    (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
    (int32_t (bv #x00000010 32)))
   (int32_t (bv #xfffffffe 32)))
  (int32_t (bv #x00000001 32))
  16)
 (broadcast
  ...
  (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
Ran bounds analysis for 37 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
(minimum
 ...
 (build-vec
  ...
  (sca-add
   (sca-mul
    (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
    (int32_t (bv #x00000010 32)))
   (int32_t (bv #xfffffffe 32)))
  (int32_t (bv #x00000001 32))
  16)
 (broadcast
  ...
  (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
"Building Expr:"
(sca-broadcast (int32_t (bv #x00000000 32)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int32_t (bv #x00000000 32)) 16)
template:
  (broadcast ... (int32_t (bv #x00000000 32)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int32_t (bv #x00000000 32)) 16)
optimized-template:
  (broadcast ... (int32_t (bv #x00000000 32)))
optimized Halide 0:
  (int32_t (bv #x00000000 32))
optimized x86 0:
  (int32_t (bv #x00000000 32))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (int32_t (bv #x00000000 32)) 16)
(broadcast ... (int32_t (bv #x00000000 32)))
Ran bounds analysis for 21 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(broadcast ... (int32_t (bv #x00000000 32)))
"Building Expr:"
(vec-max
 (vec-min
  (ramp
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (sca-broadcast
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
   16))
 (sca-broadcast (int32_t (bv #x00000000 32)) 16))
"Fold templates"
'()
here()

"Replace templates"
(list
 (cast
  ...
  (build-vec
   ...
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  'int32
  #t)
 (cast
  ...
  (broadcast
   ...
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
  'int32
  #t))
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (ramp
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (sca-broadcast
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
   16))
 (sca-broadcast (int32_t (bv #x00000000 32)) 16))
template:
  (cast
 ...
 (build-vec
  ...
  (sca-add
   (sca-mul
    (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
    (int32_t (bv #x00000010 32)))
   (int32_t (bv #xfffffffe 32)))
  (int32_t (bv #x00000001 32))
  16)
 'int32
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$4 idx) (bv #x7ffffffe 32)) (bvsle (bv #x8000000e 32) (app abstr-vals$4 idx)))))
optimized-halide-expr:
  (vec-max
 (vec-min
  #<abstr-halide-expr>
  (sca-broadcast
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
   16))
 (sca-broadcast (int32_t (bv #x00000000 32)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 #t)
optimized Halide 0:
  (int32_t
 (ite (bvsle (bv #x00000000 32) (ite (bvsle (app abstr-vals$4 0) (bvadd (bv #xffffffff 32) input.extent.0)) (app abstr-vals$4 0) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (app abstr-vals$4 0) (bvadd (bv #xffffffff 32) input.extent.0)) (app abstr-vals$4 0) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)))
optimized x86 0:
  (int32_t (app abstr-vals$4 0))
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (ramp
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (sca-broadcast
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
   16))
 (sca-broadcast (int32_t (bv #x00000000 32)) 16))
template:
  (cast
 ...
 (broadcast
  ...
  (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
 'int32
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-max
 (vec-min
  (ramp
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  #<abstr-halide-expr>)
 (sca-broadcast (int32_t (bv #x00000000 32)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 #t)
optimized Halide 0:
  (int32_t
 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$5 0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$5 0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$5 0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$5 0)) (bv #x00000000 32)))
optimized x86 0:
  (int32_t (app abstr-vals$5 0))
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-max
 (vec-min
  (ramp
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (sca-broadcast
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
   16))
 (sca-broadcast (int32_t (bv #x00000000 32)) 16))
template:
  (maximum
 ...
 (minimum
  ...
  (build-vec
   ...
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (broadcast
   ...
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
 (broadcast ... (int32_t (bv #x00000000 32))))
axioms:
  (list
 (forall (idx) (bvsle (app abstr-vals$6 idx) (bv #x7ffffffe 32)))
 (forall (idx) (&& (bvsle (app abstr-vals$7 idx) (bv #x00000000 32)) (bvsle (bv #x00000000 32) (app abstr-vals$7 idx)))))
optimized-halide-expr:
  (vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (maximum ... #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (int32_t
 (ite (bvsle (app abstr-vals$7 0) (app abstr-vals$6 0)) (app abstr-vals$6 0) (app abstr-vals$7 0)))
optimized x86 0:
  (int32_t
 (ite (bvsle (app abstr-vals$7 0) (app abstr-vals$6 0)) (app abstr-vals$6 0) (app abstr-vals$7 0)))
Ran synthesizer for 34 ms
(model)
(vec-max #<abstr-halide-expr> #<abstr-halide-expr>)
(maximum
 ...
 (minimum
  ...
  (build-vec
   ...
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (broadcast
   ...
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
 (broadcast ... (int32_t (bv #x00000000 32))))
Ran bounds analysis for 33 ms
Ran bounds analysis for 18 ms
"Extended success?"
#t
(maximum
 ...
 (minimum
  ...
  (build-vec
   ...
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (broadcast
   ...
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
 (broadcast ... (int32_t (bv #x00000000 32))))
"Building Expr:"
(sca-broadcast (int32_t t89) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int32_t t89) 16)
template:
  (broadcast ... (int32_t t89))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int32_t t89) 16)
optimized-template:
  (broadcast ... (int32_t t89))
optimized Halide 0:
  (int32_t t89)
optimized x86 0:
  (int32_t t89)
Ran synthesizer for 15 ms
(model)
(sca-broadcast (int32_t t89) 16)
(broadcast ... (int32_t t89))
Ran bounds analysis for 32 ms
Ran bounds analysis for 26 ms
"Extended success?"
#t
(broadcast ... (int32_t t89))
"Building Expr:"
(vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
"Fold templates"
'()
here()

"Replace templates"
(list
 (cast
  ...
  (build-vec
   ...
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  'int32
  #t)
 (cast
  ...
  (broadcast
   ...
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
  'int32
  #t)
 (cast
  ...
  (minimum
   ...
   (build-vec
    ...
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (broadcast
    ...
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
  'int32
  #t)
 (cast ... (broadcast ... (int32_t (bv #x00000000 32))) 'int32 #t))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
template:
  (cast
 ...
 (build-vec
  ...
  (sca-add
   (sca-mul
    (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
    (int32_t (bv #x00000010 32)))
   (int32_t (bv #xfffffffe 32)))
  (int32_t (bv #x00000001 32))
  16)
 'int32
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$10 idx) (bv #x7ffffffe 32)) (bvsle (bv #x8000000e 32) (app abstr-vals$10 idx)))))
optimized-halide-expr:
  (vec-add
 (vec-max
  (vec-min
   #<abstr-halide-expr>
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 #t)
optimized Halide 0:
  (int32_t
 (bvadd t89 (ite (bvsle (bv #x00000000 32) (ite (bvsle (app abstr-vals$10 0) (bvadd (bv #xffffffff 32) input.extent.0)) (app abstr-vals$10 0) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (app abstr-vals$10 0) (bvadd (bv #xffffffff 32) input.extent.0)) (app abstr-vals$10 0) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32))))
optimized x86 0:
  (int32_t (app abstr-vals$10 0))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
template:
  (cast
 ...
 (broadcast
  ...
  (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32))))
 'int32
 #t)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   #<abstr-halide-expr>)
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 #t)
optimized Halide 0:
  (int32_t
 (bvadd t89 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$11 0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$11 0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$11 0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (app abstr-vals$11 0)) (bv #x00000000 32))))
optimized x86 0:
  (int32_t (app abstr-vals$11 0))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
template:
  (cast ... (broadcast ... (int32_t (bv #x00000000 32))) 'int32 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$12 idx) (bv #x00000000 32)) (bvsle (bv #x00000000 32) (app abstr-vals$12 idx)))))
optimized-halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  #<abstr-halide-expr>)
 (sca-broadcast (int32_t t89) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 #t)
optimized Halide 0:
  (int32_t
 (bvadd t89 (ite (bvsle (app abstr-vals$12 0) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (app abstr-vals$12 0))))
optimized x86 0:
  (int32_t (app abstr-vals$12 0))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
template:
  (cast
 ...
 (minimum
  ...
  (build-vec
   ...
   (sca-add
    (sca-mul
     (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
     (int32_t (bv #x00000010 32)))
    (int32_t (bv #xfffffffe 32)))
   (int32_t (bv #x00000001 32))
   16)
  (broadcast
   ...
   (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
 'int32
 #t)
axioms:
  (list (forall (idx) (bvsle (app abstr-vals$13 idx) (bv #x7ffffffe 32))))
optimized-halide-expr:
  (vec-add
 (vec-max #<abstr-halide-expr> (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 #t)
optimized Halide 0:
  (int32_t
 (bvadd t89 (ite (bvsle (bv #x00000000 32) (app abstr-vals$13 0)) (app abstr-vals$13 0) (bv #x00000000 32))))
optimized x86 0:
  (int32_t (app abstr-vals$13 0))
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
template:
  (vs-mpy-add
 ...
 (union [x?$14 #(struct:maximum
                 ...
                 #(struct:minimum
                   ...
                   #(struct:build-vec
                     ...
                     #(struct:sca-add
                       #(struct:sca-mul
                         #(struct:sca-add
                           #(struct:int32_t bounded_input.s0.x.x.rebased)
                           #(struct:int32_t t86))
                         #(struct:int32_t (bv #x00000010 32)))
                       #(struct:int32_t (bv #xfffffffe 32)))
                     #(struct:int32_t (bv #x00000001 32))
                     16)
                   #(struct:broadcast
                     ...
                     #(struct:sca-add
                       #(struct:int32_t input.extent.0)
                       #(struct:int32_t (bv #xffffffff 32)))))
                 #(struct:broadcast ... #(struct:int32_t (bv #x00000000 32))))] [(! x?$14) #(struct:broadcast
                                                                                             ...
                                                                                             #(struct:int32_t
                                                                                               t89))])
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$15)
 (! x?$16)
 (! x?$17)
 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
optimized-template:
  (vs-mpy-add
 ...
 (union [x?$14 #(struct:maximum
                 ...
                 #(struct:minimum
                   ...
                   #(struct:build-vec
                     ...
                     #(struct:sca-add
                       #(struct:sca-mul
                         #(struct:sca-add
                           #(struct:int32_t bounded_input.s0.x.x.rebased)
                           #(struct:int32_t t86))
                         #(struct:int32_t (bv #x00000010 32)))
                       #(struct:int32_t (bv #xfffffffe 32)))
                     #(struct:int32_t (bv #x00000001 32))
                     16)
                   #(struct:broadcast
                     ...
                     #(struct:sca-add
                       #(struct:int32_t input.extent.0)
                       #(struct:int32_t (bv #xffffffff 32)))))
                 #(struct:broadcast ... #(struct:int32_t (bv #x00000000 32))))] [(! x?$14) #(struct:broadcast
                                                                                             ...
                                                                                             #(struct:int32_t
                                                                                               t89))])
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$15)
 (! x?$16)
 (! x?$17)
 'int32)
optimized Halide 0:
  (int32_t
 (bvadd t89 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$17 (! (&& (! x?$15) (! x?$17)))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (bvadd (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (ite (bvsle (bvadd (bv #x80000000 32) (bvneg (ite (bvsle (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)))) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)))))) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))) (bvadd (bv #x80000000 32) (bvneg (ite (bvsle (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)))))))) (⊢ (|| (&& (! x?$15) (! x?$17)) (&& (! x?$17) (! (&& (! x?$15) (! x?$17))))) (bvashr (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (bvadd (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (ite (bvsle (bvadd (bv #x80000000 32) (bvneg (ite (bvsle (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)))) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)))))) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xffffffff 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite (bvsle (bv #x00000000 32) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))) (bvadd (bv #x80000000 32) (bvneg (ite (bvsle (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)) (ite x?$15 (bvadd (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$16 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))) (ite x?$14 (ite (bvsle (bv #x00000000 32) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0))) (ite (bvsle (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bvadd (bv #xfffffffe 32) (bvmul (bv #x00000010 32) (bvadd bounded_input.s0.x.x.rebased t86))) (bvadd (bv #xffffffff 32) input.extent.0)) (bv #x00000000 32)) t89) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$16 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))))) (bv #x00000001 32)))))
Ran synthesizer for 188 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))
template:
  (vs-mpy-add
 ...
 (combine
  (maximum
   ...
   (minimum
    ...
    (build-vec
     ...
     (sca-add
      (sca-mul
       (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
       (int32_t (bv #x00000010 32)))
      (int32_t (bv #xfffffffe 32)))
     (int32_t (bv #x00000001 32))
     16)
    (broadcast
     ...
     (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
   (broadcast ... (int32_t (bv #x00000000 32))))
  (broadcast ... (int32_t t89)))
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$146 idx) (bv #x7ffffffe 32)) (bvsle (bv #x00000000 32) (app abstr-vals$146 idx))))
 #t)
optimized-halide-expr:
  (vec-add #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t (bvadd (app abstr-vals$146 0) (app abstr-vals$147 0)))
optimized x86 0:
  (int32_t
 (bvadd (ite c$19 (app abstr-vals$146 idx$18) (app abstr-vals$147 idx$18)) (ite c$21 (app abstr-vals$146 idx$20) (app abstr-vals$147 idx$20))))
Ran synthesizer for 102 ms
(model
 [idx$18 0]
 [c$19 #f]
 [idx$20 0]
 [c$21 #t])
(vec-add #<abstr-halide-expr> #<abstr-halide-expr>)
(vs-mpy-add
 ...
 (combine
  (maximum
   ...
   (minimum
    ...
    (build-vec
     ...
     (sca-add
      (sca-mul
       (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
       (int32_t (bv #x00000010 32)))
      (int32_t (bv #xfffffffe 32)))
     (int32_t (bv #x00000001 32))
     16)
    (broadcast
     ...
     (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
   (broadcast ... (int32_t (bv #x00000000 32))))
  (broadcast ... (int32_t t89)))
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)
Ran bounds analysis for 32 ms
Ran bounds analysis for 27 ms
"Extended success?"
#t
(vs-mpy-add
 ...
 (combine
  (maximum
   ...
   (minimum
    ...
    (build-vec
     ...
     (sca-add
      (sca-mul
       (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
       (int32_t (bv #x00000010 32)))
      (int32_t (bv #xfffffffe 32)))
     (int32_t (bv #x00000001 32))
     16)
    (broadcast
     ...
     (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
   (broadcast ... (int32_t (bv #x00000000 32))))
  (broadcast ... (int32_t t89)))
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)

(x86) Successfully found an equivalent IR expression.

(vs-mpy-add
 ...
 (combine
  (maximum
   ...
   (minimum
    ...
    (build-vec
     ...
     (sca-add
      (sca-mul
       (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
       (int32_t (bv #x00000010 32)))
      (int32_t (bv #xfffffffe 32)))
     (int32_t (bv #x00000001 32))
     16)
    (broadcast
     ...
     (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))))
   (broadcast ... (int32_t (bv #x00000000 32))))
  (broadcast ... (int32_t t89)))
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int32)

Synthesis time: 1 seconds

Synthesizing x86 for:
(vec-add
 (vec-max
  (vec-min
   (ramp
    (sca-add
     (sca-mul
      (sca-add (int32_t bounded_input.s0.x.x.rebased) (int32_t t86))
      (int32_t (bv #x00000010 32)))
     (int32_t (bv #xfffffffe 32)))
    (int32_t (bv #x00000001 32))
    16)
   (sca-broadcast
    (sca-add (int32_t input.extent.0) (int32_t (bv #xffffffff 32)))
    16))
  (sca-broadcast (int32_t (bv #x00000000 32)) 16))
 (sca-broadcast (int32_t t89) 16))


synthesize-x86 output:
#<void>
#f
