Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
template:
  (broadcast ... (int64_t (bv #x0000000000000001 64)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
optimized-template:
  (broadcast ... (int64_t (bv #x0000000000000001 64)))
optimized Halide 0:
  (int64_t (bv #x0000000000000001 64))
optimized x86 0:
  (int64_t (bv #x0000000000000001 64))
Ran synthesizer for 19 ms
(model)
(sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
(broadcast ... (int64_t (bv #x0000000000000001 64)))
Ran bounds analysis for 24 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
(broadcast ... (int64_t (bv #x0000000000000001 64)))
"Building Expr:"
(load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't67))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't67))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't67))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))))
Ran synthesizer for 22 ms
(model
 [idx$0 0])
(load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't67))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 21 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't67))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't67))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't67))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't67))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
Ran synthesizer for 18 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 21 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(sca-broadcast (int16_t (bv #x0040 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0040 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0040 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0040 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0040 16)))
optimized Halide 0:
  (int16_t (bv #x0040 16))
optimized x86 0:
  (int16_t (bv #x0040 16))
Ran synthesizer for 18 ms
(model)
(sca-broadcast (int16_t (bv #x0040 16)) 16)
(broadcast ... (int16_t (bv #x0040 16)))
Ran bounds analysis for 22 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0040 16)))
"Building Expr:"
(vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't67))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$131))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$131))

(list (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't67))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't67))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't67))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$131)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$131)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$394 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$394 0) (bitvector 16)))
Ran synthesizer for 63 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't67))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
Ran synthesizer for 19 ms
(model)
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
Ran bounds analysis for 27 ms
Ran bounds analysis for 22 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
"Building Expr:"
(sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16)
template:
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16)
optimized-template:
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))))
optimized Halide 0:
  (int16_t (bvmul (bv #xffc0 16) t135))
optimized x86 0:
  (int16_t (bvmul (bv #xffc0 16) t135))
Ran synthesizer for 25 ms
(model)
(sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16)
(broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))))
Ran bounds analysis for 30 ms
Ran bounds analysis for 22 ms
"Extended success?"
#t
(broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))))
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0040 16))
   (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                  (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0040 16)))
  #f
  x?$398
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$401 #(struct:vs-mpy-add
                    ...
                    #<load-data>
                    (#(struct:int16_t (bv #x0040 16)))
                    #f
                    #f
                    #f
                    int16)] [(! x?$401) #(struct:broadcast
                                          ...
                                          #(struct:sca-mul
                                            #(struct:int16_t t135)
                                            #(struct:int16_t (bv #xffc0 16))))]))
  (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16)) (union #:size 2 #:hash 1460056812848)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f x?$398 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f #f #f int16) (union #:size 2 #:hash 409111873859)> (#(struct:int16_t (bv #x0040 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)))
optimized x86 0:
  (int16_t
 (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (ite x?$400 (bv #x0080 16) (bv #x0041 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$398
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$398
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #xffc0 16) t135) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$594 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$594 0) (bitvector 16))) (ite x?$398 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
  (union [x?$401 #(struct:vs-mpy-add
                   ...
                   #<load-data>
                   (#(struct:int16_t (bv #x0040 16)))
                   #f
                   #f
                   #f
                   int16)] [(! x?$401) #(struct:broadcast
                                         ...
                                         #(struct:sca-mul
                                           #(struct:int16_t t135)
                                           #(struct:int16_t (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
axioms:
  (union [x?$401 ((forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx))))
                (forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx)))))] [(! x?$401) ((forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx)))))])
optimized-halide-expr:
  (vec-add
 #<abstr-halide-expr>
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 (combine
  #<abstr-expr>
  (union [x?$401 #<abstr-expr>] [(! x?$401) #(struct:broadcast
                                              ...
                                              #(struct:sca-mul
                                                #(struct:int16_t t135)
                                                #(struct:int16_t
                                                  (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t (bvadd (bvmul (bv #xffc0 16) t135) (app abstr-vals$595 0)))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (ite c$403 (app abstr-vals$595 idx$402) (ite x?$401 (app abstr-vals$595 idx$402) (bvmul (bv #xffc0 16) t135)))) (ite c$405 (app abstr-vals$595 idx$404) (ite x?$401 (app abstr-vals$595 idx$404) (bvmul (bv #xffc0 16) t135)))))
Ran synthesizer for 163 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't67))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$858 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (app abstr-vals$858 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$857 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (ite c$598 (zero-extend (app abstr-vals$857 idx$597) (bitvector 16)) (app abstr-vals$858 idx$597)) (bvmul (bv #x0040 16) (ite c$600 (zero-extend (app abstr-vals$857 idx$599) (bitvector 16)) (app abstr-vals$858 idx$599)))))
Ran synthesizer for 131 ms
(model
 [idx$597 0]
 [c$598 #f]
 [idx$599 0]
 [c$600 #t])
(vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 38 ms
Ran bounds analysis for 25 ms
"Extended success?"
#t
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
"Building Expr:"
(vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't67))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  x?$861
  x?$862
  x?$863
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t135) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) x?$861 x?$862 x?$863 int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't67))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't67))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t
 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't67))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$861
 x?$862
 x?$863
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$930 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast #<abstr-halide-expr> 'int16 16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  #<abstr-halide-expr>)
 'int32
 16)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$861
 x?$862
 x?$863
 'int16)
optimized Halide 0:
  (int32_t
 (sign-extend (bvadd (app abstr-vals$930 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16)))) (bitvector 32)))
optimized x86 0:
  (int16_t
 (ite* (⊢ (&& (! x?$863) (! (&& x?$861 x?$863))) (ite x?$861 (bvadd (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))))) (⊢ (|| (&& x?$861 x?$863) (&& x?$863 (! (&& x?$861 x?$863)))) (bvashr (ite x?$861 (bvadd (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0001 16)))))
Ran synthesizer for 24 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't67))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int32 16)
optimized-template:
  (cast ... #<abstr-expr> 'int32 #f)
optimized Halide 0:
  (int32_t (sign-extend (app abstr-vals$931 0) (bitvector 32)))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$931 0) (bitvector 32)))
Ran synthesizer for 22 ms
(model)
(vec-cast #<abstr-halide-expr> 'int32 16)
(cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
Ran bounds analysis for 59 ms
Ran bounds analysis for 35 ms
"Extended success?"
#t
(cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
"Building Expr:"
(load
 (buffer input2 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't68))
    (var-lookup 'input2.min.0)))
  1
  16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input2 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't68))
    (var-lookup 'input2.min.0)))
  1
  16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input2 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't68))
    (var-lookup 'input2.min.0)))
  1
  16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))
optimized x86 0:
  (uint8_t
 (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))
Ran synthesizer for 22 ms
(model
 [idx$933 0])
(load
 (buffer input2 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
   (sca-sub
    (sca-sub (var-lookup 't60) (var-lookup 't68))
    (var-lookup 'input2.min.0)))
  1
  16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 22 ms
Ran bounds analysis for 14 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input2 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't68))
     (var-lookup 'input2.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input2 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't68))
     (var-lookup 'input2.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input2 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't68))
     (var-lookup 'input2.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input2 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
    (sca-sub
     (sca-sub (var-lookup 't60) (var-lookup 't68))
     (var-lookup 'input2.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$1062 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1062 0) (bitvector 16)))
Ran synthesizer for 20 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 23 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (load
   (buffer input2 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't68))
      (var-lookup 'input2.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$1064))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$1064))

(list (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1321) (! x?$1322) (! x?$1323) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$1324) (! x?$1325) (! x?$1326) 'int16))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1321) (! x?$1322) (! x?$1323) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1324) (! x?$1325) (! x?$1326) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input2 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't68))
      (var-lookup 'input2.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input2 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't68))
      (var-lookup 'input2.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))
Ran synthesizer for 2 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input2 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't68))
      (var-lookup 'input2.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$1064)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$1064)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1327 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$1327 0) (bitvector 16)))
Ran synthesizer for 50 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input2 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
     (sca-sub
      (sca-sub (var-lookup 't60) (var-lookup 't68))
      (var-lookup 'input2.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1328 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1328 0) (bitvector 16))))
Ran synthesizer for 17 ms
(model)
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
Ran bounds analysis for 25 ms
Ran bounds analysis for 18 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
"Building Expr:"
(sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16)
template:
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16)
optimized-template:
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))))
optimized Halide 0:
  (int16_t (bvmul (bv #xffc0 16) t136))
optimized x86 0:
  (int16_t (bvmul (bv #xffc0 16) t136))
Ran synthesizer for 15 ms
(model)
(sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16)
(broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))))
Ran bounds analysis for 20 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
(broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))))
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0040 16))
   (union [x?$1333 #(struct:int16_t (bv #x0040 16))] [(! x?$1333) #(struct:int8_t
                                                                    (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0040 16)))
  #f
  x?$1331
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$1334 #(struct:vs-mpy-add
                     ...
                     #<load-data>
                     (#(struct:int16_t (bv #x0040 16)))
                     #f
                     #f
                     #f
                     int16)] [(! x?$1334) #(struct:broadcast
                                            ...
                                            #(struct:sca-mul
                                              #(struct:int16_t t136)
                                              #(struct:int16_t
                                                (bv #xffc0 16))))]))
  (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16)) (union #:size 2 #:hash 1488390619248)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f x?$1331 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f #f #f int16) (union #:size 2 #:hash 407148413159)> (#(struct:int16_t (bv #x0040 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)))
optimized x86 0:
  (uint8_t
 (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$1333 #(struct:int16_t (bv #x0040 16))] [(! x?$1333) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$1333 #(struct:int16_t (bv #x0040 16))] [(! x?$1333) #(struct:int8_t
                                                                   (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)))
optimized x86 0:
  (int16_t
 (bvmul (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (ite x?$1333 (bv #x0080 16) (bv #x0041 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$1331
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$1331
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #xffc0 16) t136) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1527 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1527 0) (bitvector 16))) (ite x?$1331 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
  (union [x?$1334 #(struct:vs-mpy-add
                    ...
                    #<load-data>
                    (#(struct:int16_t (bv #x0040 16)))
                    #f
                    #f
                    #f
                    int16)] [(! x?$1334) #(struct:broadcast
                                           ...
                                           #(struct:sca-mul
                                             #(struct:int16_t t136)
                                             #(struct:int16_t (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
axioms:
  (union [x?$1334 ((forall (idx) (&& (bvsle (app abstr-vals$1528 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$1528 idx))))
                 (forall (idx) (&& (bvsle (app abstr-vals$1528 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$1528 idx)))))] [(! x?$1334) ((forall (idx) (&& (bvsle (app abstr-vals$1528 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$1528 idx)))))])
optimized-halide-expr:
  (vec-add
 #<abstr-halide-expr>
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 (combine
  #<abstr-expr>
  (union [x?$1334 #<abstr-expr>] [(! x?$1334) #(struct:broadcast
                                                ...
                                                #(struct:sca-mul
                                                  #(struct:int16_t t136)
                                                  #(struct:int16_t
                                                    (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t (bvadd (bvmul (bv #xffc0 16) t136) (app abstr-vals$1528 0)))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (ite c$1336 (app abstr-vals$1528 idx$1335) (ite x?$1334 (app abstr-vals$1528 idx$1335) (bvmul (bv #xffc0 16) t136)))) (ite c$1338 (app abstr-vals$1528 idx$1337) (ite x?$1334 (app abstr-vals$1528 idx$1337) (bvmul (bv #xffc0 16) t136)))))
Ran synthesizer for 131 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input2 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
      (sca-sub
       (sca-sub (var-lookup 't60) (var-lookup 't68))
       (var-lookup 'input2.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$1791 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (app abstr-vals$1791 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1790 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (ite c$1531 (zero-extend (app abstr-vals$1790 idx$1530) (bitvector 16)) (app abstr-vals$1791 idx$1530)) (bvmul (bv #x0040 16) (ite c$1533 (zero-extend (app abstr-vals$1790 idx$1532) (bitvector 16)) (app abstr-vals$1791 idx$1532)))))
Ran synthesizer for 99 ms
(model
 [idx$1530 0]
 [c$1531 #f]
 [idx$1532 0]
 [c$1533 #t])
(vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 24 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
"Building Expr:"
(vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input2 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't68))
        (var-lookup 'input2.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  x?$1794
  x?$1795
  x?$1796
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t136) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) x?$1794 x?$1795 x?$1796 int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input2 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't68))
        (var-lookup 'input2.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input2 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't68))
        (var-lookup 'input2.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t
 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32)))
optimized x86 0:
  (uint8_t
 (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input2 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't68))
        (var-lookup 'input2.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$1794
 x?$1795
 x?$1796
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$1863 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast #<abstr-halide-expr> 'int16 16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  #<abstr-halide-expr>)
 'int32
 16)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$1794
 x?$1795
 x?$1796
 'int16)
optimized Halide 0:
  (int32_t
 (sign-extend (bvadd (app abstr-vals$1863 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16)))) (bitvector 32)))
optimized x86 0:
  (int16_t
 (ite* (⊢ (&& (! x?$1796) (! (&& x?$1794 x?$1796))) (ite x?$1794 (bvadd (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))))) (⊢ (|| (&& x?$1794 x?$1796) (&& x?$1796 (! (&& x?$1794 x?$1796)))) (bvashr (ite x?$1794 (bvadd (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1862 0) (bitvector 16))) (ite x?$1794 (bvadd (ite x?$1795 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1863 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1863 0) (ite x?$1795 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0001 16)))))
Ran synthesizer for 17 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input2 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
       (sca-sub
        (sca-sub (var-lookup 't60) (var-lookup 't68))
        (var-lookup 'input2.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int32 16)
optimized-template:
  (cast ... #<abstr-expr> 'int32 #f)
optimized Halide 0:
  (int32_t (sign-extend (app abstr-vals$1864 0) (bitvector 32)))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$1864 0) (bitvector 32)))
Ran synthesizer for 17 ms
(model)
(vec-cast #<abstr-halide-expr> 'int32 16)
(cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
Ran bounds analysis for 34 ms
Ran bounds analysis for 23 ms
"Extended success?"
#t
(cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
"Fold templates"
(list
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int32)
 (cast
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  'int32
  x?$1866)
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                      (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int32)
 (cast
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  'int32
  x?$1871))
here(#(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t135) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488663083806) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488663083806) int16))) #f #f #f int16) #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t135) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488663083806) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488663083806) int16))) #f #f #f int32) #(struct:cast ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t135) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) int32 x?$1866) #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t136) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488659623178) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488659623178) int16))) #f #f #f int16) #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t136) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488659623178) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 2 #:hash 1488659623178) int16))) #f #f #f int32) #(struct:cast ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t136) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) int32 x?$1871))

(list (vs-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) (list (int16_t (bv #x0040 16))) #f #f #f 'int32) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32) (vv-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) '(1) (! x?$2068) (! x?$2069) (! x?$2070) 'int32) (vv-mpy-add ... #<load-data> '(1) (! x?$2071) (! x?$2072) (! x?$2073) 'int32))
(list (vs-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) (list (int16_t (bv #x0040 16))) #f #f #f 'int32) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32) (vv-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) '(1) (! x?$2266) (! x?$2267) (! x?$2268) 'int32) (vv-mpy-add ... #<load-data> '(1) (! x?$2269) (! x?$2270) (! x?$2271) 'int32))
"Replace templates"
(list
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int32)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
 (vv-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  '(1)
  (! x?$2068)
  (! x?$2069)
  (! x?$2070)
  'int32)
 (vv-mpy-add ... #<load-data> '(1) (! x?$2071) (! x?$2072) (! x?$2073) 'int32)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int32)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
 (vv-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  '(1)
  (! x?$2266)
  (! x?$2267)
  (! x?$2268)
  'int32)
 (vv-mpy-add ... #<load-data> '(1) (! x?$2269) (! x?$2270) (! x?$2271) 'int32))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (bv #x00000040 32) (zero-extend (ite* (⊢ (= 0 idx$1876) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1876) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$2071) (! x?$2072) (! x?$2073) 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$2071) (! x?$2072) (! x?$2073) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$2073 (! (&& (! x?$2071) (! x?$2073)))) (ite x?$2071 (bvadd (bvmul (zero-extend (ite* (⊢ (= 0 idx$1876) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1876) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$1877) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1877) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (ite* (⊢ (= 0 idx$1876) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1876) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$1877) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1877) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$1876) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1876) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$1877) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1877) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$2071) (! x?$2073)) (&& (! x?$2073) (! (&& (! x?$2071) (! x?$2073))))) (bvashr (ite x?$2071 (bvadd (bvmul (zero-extend (ite* (⊢ (= 0 idx$1876) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1876) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$1877) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1877) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (ite* (⊢ (= 0 idx$1876) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1876) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$1877) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1877) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$1876) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1876) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$1877) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$1877) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2072 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (bv #x00000040 32) (zero-extend (ite* (⊢ (= 0 idx$2074) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2074) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$2269) (! x?$2270) (! x?$2271) 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$2269) (! x?$2270) (! x?$2271) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$2271 (! (&& (! x?$2269) (! x?$2271)))) (ite x?$2269 (bvadd (bvmul (zero-extend (ite* (⊢ (= 0 idx$2074) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2074) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2075) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2075) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (ite* (⊢ (= 0 idx$2074) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2074) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2075) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2075) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$2074) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2074) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2075) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2075) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$2269) (! x?$2271)) (&& (! x?$2271) (! (&& (! x?$2269) (! x?$2271))))) (bvashr (ite x?$2269 (bvadd (bvmul (zero-extend (ite* (⊢ (= 0 idx$2074) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2074) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2075) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2075) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (ite* (⊢ (= 0 idx$2074) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2074) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2075) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2075) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$2074) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2074) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2075) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2075) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2270 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$2273 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast #<abstr-halide-expr> 'int16 16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   #<abstr-halide-expr>)
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$2273 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$2272 0) (bitvector 16)))) (bitvector 32))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (app abstr-vals$2273 0) (ite x?$1870 (bv #x0040 16) (bv #x0001 16))) (bvmul (zero-extend (app abstr-vals$2272 0) (bitvector 16)) (bvmul (bv #x0040 16) (ite x?$1870 (bv #x0040 16) (bv #x0001 16))))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int32)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$2275 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast #<abstr-halide-expr> 'int16 16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   #<abstr-halide-expr>)
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1870 #(struct:int16_t (bv #x0040 16))] [(! x?$1870) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$2275 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$2274 0) (bitvector 16)))) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvadd (bvmul (sign-extend (app abstr-vals$2275 0) (bitvector 32)) (sign-extend (ite x?$1870 (bv #x0040 16) (bv #x0001 16)) (bitvector 32))) (bvmul (zero-extend (app abstr-vals$2274 0) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (ite x?$1870 (bv #x0040 16) (bv #x0001 16))) (bitvector 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$2277 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast #<abstr-halide-expr> 'int16 16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   #<abstr-halide-expr>)
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$2277 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$2276 0) (bitvector 16)))) (bitvector 32))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (app abstr-vals$2277 0) (ite x?$1875 (bv #x0040 16) (bv #x0001 16))) (bvmul (zero-extend (app abstr-vals$2276 0) (bitvector 16)) (bvmul (bv #x0040 16) (ite x?$1875 (bv #x0040 16) (bv #x0001 16))))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int32)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$2279 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast #<abstr-halide-expr> 'int16 16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   #<abstr-halide-expr>)
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [x?$1875 #(struct:int16_t (bv #x0040 16))] [(! x?$1875) #(struct:int8_t
                                                                     (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$2279 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$2278 0) (bitvector 16)))) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvadd (bvmul (sign-extend (app abstr-vals$2279 0) (bitvector 32)) (sign-extend (ite x?$1875 (bv #x0040 16) (bv #x0001 16)) (bitvector 32))) (bvmul (zero-extend (app abstr-vals$2278 0) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (ite x?$1875 (bv #x0040 16) (bv #x0001 16))) (bitvector 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 x?$1866)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 x?$1866)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32)) (sign-extend (app abstr-vals$2280 0) (bitvector 32))))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$2280 0) (bitvector 32)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 x?$1871)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast #<abstr-halide-expr> 'int32 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 x?$1871)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (app abstr-vals$2281 0) (bitvector 32))))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$2281 0) (bitvector 32)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32)) (sign-extend (app abstr-vals$2282 0) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (bv #x00000040 32) (sign-extend (app abstr-vals$2282 0) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vv-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t135) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 '(1)
 (! x?$2068)
 (! x?$2069)
 (! x?$2070)
 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vv-mpy-add ... #<abstr-expr> '(1) (! x?$2068) (! x?$2069) (! x?$2070) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32)) (sign-extend (app abstr-vals$2283 0) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$2070 (! (&& (! x?$2068) (! x?$2070)))) (ite x?$2068 (bvadd (bvmul (sign-extend (app abstr-vals$2283 0) (bitvector 32)) (sign-extend (app abstr-vals$2283 1) (bitvector 32))) (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$2283 0) (bitvector 32)) (sign-extend (app abstr-vals$2283 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (sign-extend (app abstr-vals$2283 0) (bitvector 32)) (sign-extend (app abstr-vals$2283 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$2068) (! x?$2070)) (&& (! x?$2070) (! (&& (! x?$2068) (! x?$2070))))) (bvashr (ite x?$2068 (bvadd (bvmul (sign-extend (app abstr-vals$2283 0) (bitvector 32)) (sign-extend (app abstr-vals$2283 1) (bitvector 32))) (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$2283 0) (bitvector 32)) (sign-extend (app abstr-vals$2283 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (sign-extend (app abstr-vals$2283 0) (bitvector 32)) (sign-extend (app abstr-vals$2283 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2069 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast #<abstr-halide-expr> 'int32 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (app abstr-vals$2284 0) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (bv #x00000040 32) (sign-extend (app abstr-vals$2284 0) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vv-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t136) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 '(1)
 (! x?$2266)
 (! x?$2267)
 (! x?$2268)
 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast #<abstr-halide-expr> 'int32 16))
optimized-template:
  (vv-mpy-add ... #<abstr-expr> '(1) (! x?$2266) (! x?$2267) (! x?$2268) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (app abstr-vals$2285 0) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$2268 (! (&& (! x?$2266) (! x?$2268)))) (ite x?$2266 (bvadd (bvmul (sign-extend (app abstr-vals$2285 0) (bitvector 32)) (sign-extend (app abstr-vals$2285 1) (bitvector 32))) (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$2285 0) (bitvector 32)) (sign-extend (app abstr-vals$2285 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (sign-extend (app abstr-vals$2285 0) (bitvector 32)) (sign-extend (app abstr-vals$2285 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$2266) (! x?$2268)) (&& (! x?$2268) (! (&& (! x?$2266) (! x?$2268))))) (bvashr (ite x?$2266 (bvadd (bvmul (sign-extend (app abstr-vals$2285 0) (bitvector 32)) (sign-extend (app abstr-vals$2285 1) (bitvector 32))) (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$2285 0) (bitvector 32)) (sign-extend (app abstr-vals$2285 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (sign-extend (app abstr-vals$2285 0) (bitvector 32)) (sign-extend (app abstr-vals$2285 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2267 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
"Success?"
#f
#<void>
(list (vs-mpy-add ... (union [x?$2478 #(struct:cast ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t135) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) int32 #f)] [(! x?$2478) #(struct:cast ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t136) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) int32 #f)]) (list (int16_t '(bv #x0040 16))) #f #f #f 'int32) (vs-mpy-add ... #<load-data> (list (int16_t '(bv #x0040 16))) #f #f #f 'int32) (vv-mpy-add ... (union [x?$2479 #(struct:cast ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t135) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) int32 #f)] [(! x?$2479) #(struct:cast ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t136) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) int32 #f)]) '(1) (! x?$2480) (! x?$2481) (! x?$2482) 'int32) (vv-mpy-add ... #<load-data> '(1) (! x?$2483) (! x?$2484) (! x?$2485) 'int32))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (union [x?$2478 #(struct:cast
                   ...
                   #(struct:vs-mpy-add
                     ...
                     #<combine:
                      #<load-data>
                      #(struct:broadcast
                        ...
                        #(struct:sca-mul
                          #(struct:int16_t t135)
                          #(struct:int16_t (bv #xffc0 16))))>
                     (#(struct:int8_t (bv #x01 8))
                      #(struct:int16_t (bv #x0040 16)))
                     #f
                     #f
                     #f
                     int16)
                   int32
                   #f)] [(! x?$2478) #(struct:cast
                                       ...
                                       #(struct:vs-mpy-add
                                         ...
                                         #<combine:
                                          #<load-data>
                                          #(struct:broadcast
                                            ...
                                            #(struct:sca-mul
                                              #(struct:int16_t t136)
                                              #(struct:int16_t
                                                (bv #xffc0 16))))>
                                         (#(struct:int8_t (bv #x01 8))
                                          #(struct:int16_t (bv #x0040 16)))
                                         #f
                                         #f
                                         #f
                                         int16)
                                       int32
                                       #f)])
 (list (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 (union [x?$2478 #(struct:cast
                   ...
                   #(struct:vs-mpy-add
                     ...
                     #<combine:
                      #<load-data>
                      #(struct:broadcast
                        ...
                        #(struct:sca-mul
                          #(struct:int16_t t135)
                          #(struct:int16_t (bv #xffc0 16))))>
                     (#(struct:int8_t (bv #x01 8))
                      #(struct:int16_t (bv #x0040 16)))
                     #f
                     #f
                     #f
                     int16)
                   int32
                   #f)] [(! x?$2478) #(struct:cast
                                       ...
                                       #(struct:vs-mpy-add
                                         ...
                                         #<combine:
                                          #<load-data>
                                          #(struct:broadcast
                                            ...
                                            #(struct:sca-mul
                                              #(struct:int16_t t136)
                                              #(struct:int16_t
                                                (bv #xffc0 16))))>
                                         (#(struct:int8_t (bv #x01 8))
                                          #(struct:int16_t (bv #x0040 16)))
                                         #f
                                         #f
                                         #f
                                         int16)
                                       int32
                                       #f)])
 (list (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (bv #x00000040 32) (ite x?$2478 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32)))))
Ran synthesizer for 129 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (bv #x00000040 32) (zero-extend (ite* (⊢ (= 0 idx$2286) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2286) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vv-mpy-add
 ...
 (union [x?$2479 #(struct:cast
                   ...
                   #(struct:vs-mpy-add
                     ...
                     #<combine:
                      #<load-data>
                      #(struct:broadcast
                        ...
                        #(struct:sca-mul
                          #(struct:int16_t t135)
                          #(struct:int16_t (bv #xffc0 16))))>
                     (#(struct:int8_t (bv #x01 8))
                      #(struct:int16_t (bv #x0040 16)))
                     #f
                     #f
                     #f
                     int16)
                   int32
                   #f)] [(! x?$2479) #(struct:cast
                                       ...
                                       #(struct:vs-mpy-add
                                         ...
                                         #<combine:
                                          #<load-data>
                                          #(struct:broadcast
                                            ...
                                            #(struct:sca-mul
                                              #(struct:int16_t t136)
                                              #(struct:int16_t
                                                (bv #xffc0 16))))>
                                         (#(struct:int8_t (bv #x01 8))
                                          #(struct:int16_t (bv #x0040 16)))
                                         #f
                                         #f
                                         #f
                                         int16)
                                       int32
                                       #f)])
 '(1)
 (! x?$2480)
 (! x?$2481)
 (! x?$2482)
 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vv-mpy-add
 ...
 (union [x?$2479 #(struct:cast
                   ...
                   #(struct:vs-mpy-add
                     ...
                     #<combine:
                      #<load-data>
                      #(struct:broadcast
                        ...
                        #(struct:sca-mul
                          #(struct:int16_t t135)
                          #(struct:int16_t (bv #xffc0 16))))>
                     (#(struct:int8_t (bv #x01 8))
                      #(struct:int16_t (bv #x0040 16)))
                     #f
                     #f
                     #f
                     int16)
                   int32
                   #f)] [(! x?$2479) #(struct:cast
                                       ...
                                       #(struct:vs-mpy-add
                                         ...
                                         #<combine:
                                          #<load-data>
                                          #(struct:broadcast
                                            ...
                                            #(struct:sca-mul
                                              #(struct:int16_t t136)
                                              #(struct:int16_t
                                                (bv #xffc0 16))))>
                                         (#(struct:int8_t (bv #x01 8))
                                          #(struct:int16_t (bv #x0040 16)))
                                         #f
                                         #f
                                         #f
                                         int16)
                                       int32
                                       #f)])
 '(1)
 (! x?$2480)
 (! x?$2481)
 (! x?$2482)
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$2482 (! (&& (! x?$2480) (! x?$2482)))) (ite x?$2480 (bvadd (bvmul (ite x?$2479 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))) (ite x?$2479 (sign-extend (bvadd (ite c$602 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)) (bvmul (bv #x0040 16) (ite c$604 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)))) (bitvector 32)) (sign-extend (bvadd (ite c$1535 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)) (bvmul (bv #x0040 16) (ite c$1537 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)))) (bitvector 32)))) (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (ite x?$2479 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))) (ite x?$2479 (sign-extend (bvadd (ite c$602 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)) (bvmul (bv #x0040 16) (ite c$604 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)))) (bitvector 32)) (sign-extend (bvadd (ite c$1535 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)) (bvmul (bv #x0040 16) (ite c$1537 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)))) (bitvector 32)))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (ite x?$2479 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))) (ite x?$2479 (sign-extend (bvadd (ite c$602 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)) (bvmul (bv #x0040 16) (ite c$604 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)))) (bitvector 32)) (sign-extend (bvadd (ite c$1535 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)) (bvmul (bv #x0040 16) (ite c$1537 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)))) (bitvector 32)))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$2480) (! x?$2482)) (&& (! x?$2482) (! (&& (! x?$2480) (! x?$2482))))) (bvashr (ite x?$2480 (bvadd (bvmul (ite x?$2479 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))) (ite x?$2479 (sign-extend (bvadd (ite c$602 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)) (bvmul (bv #x0040 16) (ite c$604 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)))) (bitvector 32)) (sign-extend (bvadd (ite c$1535 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)) (bvmul (bv #x0040 16) (ite c$1537 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)))) (bitvector 32)))) (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (ite x?$2479 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))) (ite x?$2479 (sign-extend (bvadd (ite c$602 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)) (bvmul (bv #x0040 16) (ite c$604 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)))) (bitvector 32)) (sign-extend (bvadd (ite c$1535 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)) (bvmul (bv #x0040 16) (ite c$1537 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)))) (bitvector 32)))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (ite x?$2479 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))) (ite x?$2479 (sign-extend (bvadd (ite c$602 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)) (bvmul (bv #x0040 16) (ite c$604 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16)) (bvmul (bv #xffc0 16) t135)))) (bitvector 32)) (sign-extend (bvadd (ite c$1535 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)) (bvmul (bv #x0040 16) (ite c$1537 (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16)) (bvmul (bv #xffc0 16) t136)))) (bitvector 32)))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2481 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
Ran synthesizer for 679 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$2483) (! x?$2484) (! x?$2485) 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't67))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t135) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input2 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input2.stride.1) (var-lookup 't50))
        (sca-sub
         (sca-sub (var-lookup 't60) (var-lookup 't68))
         (var-lookup 'input2.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t136) (int16_t (bv #xffc0 16))) 16))
  'int32
  16))
optimized-template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$2483) (! x?$2484) (! x?$2485) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t135)) (bitvector 32)) (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))) (bitvector 16))) (bvmul (bv #xffc0 16) t136)) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$2485 (! (&& (! x?$2483) (! x?$2485)))) (ite x?$2483 (bvadd (bvmul (zero-extend (ite* (⊢ (= 0 idx$2286) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2286) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2287) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2287) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (ite* (⊢ (= 0 idx$2286) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2286) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2287) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2287) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$2286) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2286) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2287) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2287) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$2483) (! x?$2485)) (&& (! x?$2485) (! (&& (! x?$2483) (! x?$2485))))) (bvashr (ite x?$2483 (bvadd (bvmul (zero-extend (ite* (⊢ (= 0 idx$2286) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2286) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2287) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2287) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (ite* (⊢ (= 0 idx$2286) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2286) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2287) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2287) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (ite* (⊢ (= 0 idx$2286) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2286) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32)) (zero-extend (ite* (⊢ (= 0 idx$2287) (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t125)) (- t88))))) (⊢ (= 1 idx$2287) (app input2 (+ (+ t100 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t123)) (- t126)) (- t95)))))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$2484 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
"Extended success?"
#f
#<void>
