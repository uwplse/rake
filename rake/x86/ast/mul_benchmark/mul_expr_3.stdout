Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
template:
  (broadcast ... (int64_t (bv #x0000000000000001 64)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
optimized-template:
  (broadcast ... (int64_t (bv #x0000000000000001 64)))
optimized Halide 0:
  (int64_t (bv #x0000000000000001 64))
optimized x86 0:
  (int64_t (bv #x0000000000000001 64))
Ran synthesizer for 30 ms
(model)
(sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
(broadcast ... (int64_t (bv #x0000000000000001 64)))
Ran bounds analysis for 33 ms
Ran bounds analysis for 19 ms
"Extended success?"
#t
(broadcast ... (int64_t (bv #x0000000000000001 64)))
"Building Expr:"
(load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
   (sca-sub
    (sca-sub (var-lookup 't77) (var-lookup 't83))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
   (sca-sub
    (sca-sub (var-lookup 't77) (var-lookup 't83))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
   (sca-sub
    (sca-sub (var-lookup 't77) (var-lookup 't83))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))))
Ran synthesizer for 30 ms
(model
 [idx$0 0])
(load
 (buffer input1 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
   (sca-sub
    (sca-sub (var-lookup 't77) (var-lookup 't83))
    (var-lookup 'input1.min.0)))
  1
  16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 28 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
    (sca-sub
     (sca-sub (var-lookup 't77) (var-lookup 't83))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
    (sca-sub
     (sca-sub (var-lookup 't77) (var-lookup 't83))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
    (sca-sub
     (sca-sub (var-lookup 't77) (var-lookup 't83))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))))
Ran synthesizer for 2 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer input1 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
    (sca-sub
     (sca-sub (var-lookup 't77) (var-lookup 't83))
     (var-lookup 'input1.min.0)))
   1
   16)
  (aligned 1 0))
 'int16
 16)
template:
  (cast ... #<load-data> 'int16 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int16 16)
optimized-template:
  (cast ... #<abstr-expr> 'int16 #f)
optimized Halide 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$129 0) (bitvector 16)))
Ran synthesizer for 24 ms
(model)
(vec-cast #<abstr-halide-expr> 'int16 16)
(cast ... #<load-data> 'int16 #f)
Ran bounds analysis for 29 ms
Ran bounds analysis for 20 ms
"Extended success?"
#t
(cast ... #<load-data> 'int16 #f)
"Building Expr:"
(sca-broadcast (int16_t (bv #x0040 16)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int16_t (bv #x0040 16)) 16)
template:
  (broadcast ... (int16_t (bv #x0040 16)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int16_t (bv #x0040 16)) 16)
optimized-template:
  (broadcast ... (int16_t (bv #x0040 16)))
optimized Halide 0:
  (int16_t (bv #x0040 16))
optimized x86 0:
  (int16_t (bv #x0040 16))
Ran synthesizer for 23 ms
(model)
(sca-broadcast (int16_t (bv #x0040 16)) 16)
(broadcast ... (int16_t (bv #x0040 16)))
Ran bounds analysis for 29 ms
Ran bounds analysis for 23 ms
"Extended success?"
#t
(broadcast ... (int16_t (bv #x0040 16)))
"Building Expr:"
(vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
     (sca-sub
      (sca-sub (var-lookup 't77) (var-lookup 't83))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
"Fold templates"
(list #<load-data> (cast ... #<load-data> 'int16 x?$131))
here(#<load-data> #(struct:cast ... #<load-data> int16 x?$131))

(list (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16) (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
"Replace templates"
(list
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$388) (! x?$389) (! x?$390) 'int16)
 (vv-mpy-add ... #<load-data> '(1) (! x?$391) (! x?$392) (! x?$393) 'int16))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
     (sca-sub
      (sca-sub (var-lookup 't77) (var-lookup 't83))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
     (sca-sub
      (sca-sub (var-lookup 't77) (var-lookup 't83))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))))
Ran synthesizer for 3 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
     (sca-sub
      (sca-sub (var-lookup 't77) (var-lookup 't83))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (cast ... #<load-data> 'int16 x?$131)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (cast ... #<abstr-expr> 'int16 x?$131)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$394 0) (bitvector 16))))
optimized x86 0:
  (int16_t (zero-extend (app abstr-vals$394 0) (bitvector 16)))
Ran synthesizer for 67 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (load
   (buffer input1 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
     (sca-sub
      (sca-sub (var-lookup 't77) (var-lookup 't83))
      (var-lookup 'input1.min.0)))
    1
    16)
   (aligned 1 0))
  'int16
  16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
template:
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
optimized-template:
  (vs-mpy-add ... #<abstr-expr> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
optimized Halide 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
optimized x86 0:
  (int16_t
 (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$395 0) (bitvector 16))))
Ran synthesizer for 23 ms
(model)
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int16 16)
 (sca-broadcast (int16_t (bv #x0040 16)) 16))
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
Ran bounds analysis for 33 ms
Ran bounds analysis for 31 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
"Building Expr:"
(sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16)
template:
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16)
optimized-template:
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))
optimized Halide 0:
  (int16_t (bvmul (bv #xffc0 16) t153))
optimized x86 0:
  (int16_t (bvmul (bv #xffc0 16) t153))
Ran synthesizer for 24 ms
(model)
(sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16)
(broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))
Ran bounds analysis for 49 ms
Ran bounds analysis for 28 ms
"Extended success?"
#t
(broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))
"Building Expr:"
(vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  #<load-data>
  (list
   (int16_t (bv #x0040 16))
   (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                  (bv #x01 8))]))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  #<load-data>
  (list (int16_t (bv #x0040 16)))
  #f
  x?$398
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    #<load-data>
    (list (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (union [x?$401 #(struct:vs-mpy-add
                    ...
                    #<load-data>
                    (#(struct:int16_t (bv #x0040 16)))
                    #f
                    #f
                    #f
                    int16)] [(! x?$401) #(struct:broadcast
                                          ...
                                          #(struct:sca-mul
                                            #(struct:int16_t t153)
                                            #(struct:int16_t (bv #xffc0 16))))]))
  (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16)) (union #:size 2 #:hash 1456761302298)) #f #f #f int16) #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f x?$398 #f int16) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #<load-data> (#(struct:int16_t (bv #x0040 16))) #f #f #f int16) (union #:size 2 #:hash 397404223698)> (#(struct:int16_t (bv #x0040 16)) #(struct:int8_t (bv #x01 8))) #f #f #f int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list
  (int16_t (bv #x0040 16))
  (union [x?$400 #(struct:int16_t (bv #x0040 16))] [(! x?$400) #(struct:int8_t
                                                                 (bv #x01 8))]))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)))
optimized x86 0:
  (int16_t
 (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16)) (ite x?$400 (bv #x0080 16) (bv #x0041 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$398
 #f
 'int16)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list (int16_t (bv #x0040 16)))
 #f
 x?$398
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (bvmul (bv #xffc0 16) t153) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$594 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$594 0) (bitvector 16))) (ite x?$398 (bv #x0001 16) (bv #x0000 16))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  (vs-mpy-add ... #<load-data> (list (int16_t (bv #x0040 16))) #f #f #f 'int16)
  (union [x?$401 #(struct:vs-mpy-add
                   ...
                   #<load-data>
                   (#(struct:int16_t (bv #x0040 16)))
                   #f
                   #f
                   #f
                   int16)] [(! x?$401) #(struct:broadcast
                                         ...
                                         #(struct:sca-mul
                                           #(struct:int16_t t153)
                                           #(struct:int16_t (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
axioms:
  (union [x?$401 ((forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx))))
                (forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx)))))] [(! x?$401) ((forall (idx) (&& (bvsle (app abstr-vals$595 idx) (bv #x3fc0 16)) (bvsle (bv #x0000 16) (app abstr-vals$595 idx)))))])
optimized-halide-expr:
  (vec-add
 #<abstr-halide-expr>
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
optimized-template:
  (vs-mpy-add
 ...
 (combine
  #<abstr-expr>
  (union [x?$401 #<abstr-expr>] [(! x?$401) #(struct:broadcast
                                              ...
                                              #(struct:sca-mul
                                                #(struct:int16_t t153)
                                                #(struct:int16_t
                                                  (bv #xffc0 16))))]))
 (list (int16_t (bv #x0040 16)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t (bvadd (bvmul (bv #xffc0 16) t153) (app abstr-vals$595 0)))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (bv #x0040 16) (ite c$403 (app abstr-vals$595 idx$402) (ite x?$401 (app abstr-vals$595 idx$402) (bvmul (bv #xffc0 16) t153)))) (ite c$405 (app abstr-vals$595 idx$404) (ite x?$401 (app abstr-vals$595 idx$404) (bvmul (bv #xffc0 16) t153)))))
Ran synthesizer for 211 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-mul
  (vec-cast
   (load
    (buffer input1 'uint8)
    (ramp
     (sca-add
      (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
      (sca-sub
       (sca-sub (var-lookup 't77) (var-lookup 't83))
       (var-lookup 'input1.min.0)))
     1
     16)
    (aligned 1 0))
   'int16
   16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$858 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int16_t
 (bvadd (app abstr-vals$858 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$857 0) (bitvector 16)))))
optimized x86 0:
  (int16_t
 (bvadd (ite c$598 (zero-extend (app abstr-vals$857 idx$597) (bitvector 16)) (app abstr-vals$858 idx$597)) (bvmul (bv #x0040 16) (ite c$600 (zero-extend (app abstr-vals$857 idx$599) (bitvector 16)) (app abstr-vals$858 idx$599)))))
Ran synthesizer for 170 ms
(model
 [idx$597 0]
 [c$598 #f]
 [idx$599 0]
 [c$600 #t])
(vec-add
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int16 16)
  (sca-broadcast (int16_t (bv #x0040 16)) 16))
 #<abstr-halide-expr>)
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
Ran bounds analysis for 44 ms
Ran bounds analysis for 33 ms
"Extended success?"
#t
(vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 #f
 #f
 #f
 'int16)
"Building Expr:"
(vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
       (sca-sub
        (sca-sub (var-lookup 't77) (var-lookup 't83))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
"Fold templates"
(list
 #<load-data>
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  x?$861
  x?$862
  x?$863
  'int16))
here(#<load-data> #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) x?$861 x?$862 x?$863 int16))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
       (sca-sub
        (sca-sub (var-lookup 't77) (var-lookup 't83))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
       (sca-sub
        (sca-sub (var-lookup 't77) (var-lookup 't83))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (int32_t
 (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)))
optimized x86 0:
  (uint8_t
 (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
       (sca-sub
        (sca-sub (var-lookup 't77) (var-lookup 't83))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$861
 x?$862
 x?$863
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$930 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast #<abstr-halide-expr> 'int16 16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  #<abstr-halide-expr>)
 'int32
 16)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$861
 x?$862
 x?$863
 'int16)
optimized Halide 0:
  (int32_t
 (sign-extend (bvadd (app abstr-vals$930 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16)))) (bitvector 32)))
optimized x86 0:
  (int16_t
 (ite* (⊢ (&& (! x?$863) (! (&& x?$861 x?$863))) (ite x?$861 (bvadd (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))))) (⊢ (|| (&& x?$861 x?$863) (&& x?$863 (! (&& x?$861 x?$863)))) (bvashr (ite x?$861 (bvadd (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$929 0) (bitvector 16))) (ite x?$861 (bvadd (ite x?$862 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$930 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$930 0) (ite x?$862 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0001 16)))))
Ran synthesizer for 27 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-add
  (vec-mul
   (vec-cast
    (load
     (buffer input1 'uint8)
     (ramp
      (sca-add
       (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
       (sca-sub
        (sca-sub (var-lookup 't77) (var-lookup 't83))
        (var-lookup 'input1.min.0)))
      1
      16)
     (aligned 1 0))
    'int16
    16)
   (sca-broadcast (int16_t (bv #x0040 16)) 16))
  (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
 'int32
 16)
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int32 16)
optimized-template:
  (cast ... #<abstr-expr> 'int32 #f)
optimized Halide 0:
  (int32_t (sign-extend (app abstr-vals$931 0) (bitvector 32)))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$931 0) (bitvector 32)))
Ran synthesizer for 28 ms
(model)
(vec-cast #<abstr-halide-expr> 'int32 16)
(cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
Ran bounds analysis for 54 ms
Ran bounds analysis for 44 ms
"Extended success?"
#t
(cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 #f)
"Building Expr:"
(sca-broadcast
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
 16)
template:
  (broadcast
 ...
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
 16)
optimized-template:
  (broadcast
 ...
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
optimized Halide 0:
  (int16_t (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))
optimized x86 0:
  (int16_t (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))
Ran synthesizer for 27 ms
(model)
(sca-broadcast
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
 16)
(broadcast
 ...
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
Ran bounds analysis for 41 ms
Ran bounds analysis for 31 ms
"Extended success?"
#t
(broadcast
 ...
 (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
"Building Expr:"
(vec-cast
 (sca-broadcast
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
  16)
 'int32
 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (sca-broadcast
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
  16)
 'int32
 16)
template:
  (cast
 ...
 (broadcast
  ...
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 'int32
 #f)
axioms:
  (list (forall (idx) (bvsle (app abstr-vals$933 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int32 16)
optimized-template:
  (cast ... #<abstr-expr> 'int32 #f)
optimized Halide 0:
  (int32_t (sign-extend (app abstr-vals$933 0) (bitvector 32)))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$933 0) (bitvector 32)))
Ran synthesizer for 47 ms
(model)
(vec-cast #<abstr-halide-expr> 'int32 16)
(cast
 ...
 (broadcast
  ...
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 'int32
 #f)
Ran bounds analysis for 50 ms
Ran bounds analysis for 43 ms
"Extended success?"
#t
(cast
 ...
 (broadcast
  ...
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 'int32
 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
"Fold templates"
(list
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                   #(struct:sca-sub
                                                                                     #(struct:int16_t
                                                                                       t154)
                                                                                     #(struct:int16_t
                                                                                       t155))
                                                                                   #(struct:int16_t
                                                                                     (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                       (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                   #(struct:sca-sub
                                                                                     #(struct:int16_t
                                                                                       t154)
                                                                                     #(struct:int16_t
                                                                                       t155))
                                                                                   #(struct:int16_t
                                                                                     (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                       (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                   #(struct:sca-sub
                                                                                     #(struct:int16_t
                                                                                       t154)
                                                                                     #(struct:int16_t
                                                                                       t155))
                                                                                   #(struct:int16_t
                                                                                     (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                       (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                   #(struct:sca-sub
                                                                                     #(struct:int16_t
                                                                                       t154)
                                                                                     #(struct:int16_t
                                                                                       t155))
                                                                                   #(struct:int16_t
                                                                                     (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                       (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int32)
 (cast
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  'int32
  x?$935)
 (cast
  ...
  (broadcast
   ...
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  'int32
  x?$941))
here(#(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 3 #:hash 100000445238696934) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 3 #:hash 100000445238696934) int16))) #f #f #f int16) #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 3 #:hash 100000445238696934) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 3 #:hash 100000445238696934) int16))) #f #f #f int32) #(struct:cast ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) int32 x?$935) #(struct:cast ... #(struct:broadcast ... #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) int32 x?$941))

(list (vs-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) '((union [x?$1134 #(struct:int16_t (bv #x0040 16))] [(! x?$1134) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int32) (vs-mpy-add ... #<load-data> '((union [x?$1135 #(struct:int16_t (bv #x0040 16))] [(! x?$1135) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int32) (vv-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) '(1) (! x?$1136) (! x?$1137) (! x?$1138) 'int32) (vv-mpy-add ... #<load-data> '(1) (! x?$1139) (! x?$1140) (! x?$1141) 'int32))
(list (vs-mpy-add ... (broadcast ... (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))) '((union [x?$1334 #(struct:int16_t (bv #x0040 16))] [(! x?$1334) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int32) (vs-mpy-add ... #<load-data> '((union [x?$1335 #(struct:int16_t (bv #x0040 16))] [(! x?$1335) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int32) (vv-mpy-add ... (broadcast ... (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))) '(1) (! x?$1336) (! x?$1337) (! x?$1338) 'int32) (vv-mpy-add ... #<load-data> '(1) (! x?$1339) (! x?$1340) (! x?$1341) 'int32))
"Replace templates"
(list
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  '((union [x?$1134 #(struct:int16_t (bv #x0040 16))] [(! x?$1134) #(struct:sca-mul
                                                                     #(struct:sca-sub
                                                                       #(struct:int16_t
                                                                         t154)
                                                                       #(struct:int16_t
                                                                         t155))
                                                                     #(struct:int16_t
                                                                       (bv #x0040 16)))]))
  #f
  #f
  #f
  'int32)
 (vs-mpy-add
  ...
  #<load-data>
  '((union [x?$1135 #(struct:int16_t (bv #x0040 16))] [(! x?$1135) #(struct:sca-mul
                                                                     #(struct:sca-sub
                                                                       #(struct:int16_t
                                                                         t154)
                                                                       #(struct:int16_t
                                                                         t155))
                                                                     #(struct:int16_t
                                                                       (bv #x0040 16)))]))
  #f
  #f
  #f
  'int32)
 (vv-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  '(1)
  (! x?$1136)
  (! x?$1137)
  (! x?$1138)
  'int32)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1139) (! x?$1140) (! x?$1141) 'int32)
 (vs-mpy-add
  ...
  (broadcast
   ...
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  '((union [x?$1334 #(struct:int16_t (bv #x0040 16))] [(! x?$1334) #(struct:sca-mul
                                                                     #(struct:sca-sub
                                                                       #(struct:int16_t
                                                                         t154)
                                                                       #(struct:int16_t
                                                                         t155))
                                                                     #(struct:int16_t
                                                                       (bv #x0040 16)))]))
  #f
  #f
  #f
  'int32)
 (vs-mpy-add
  ...
  #<load-data>
  '((union [x?$1335 #(struct:int16_t (bv #x0040 16))] [(! x?$1335) #(struct:sca-mul
                                                                     #(struct:sca-sub
                                                                       #(struct:int16_t
                                                                         t154)
                                                                       #(struct:int16_t
                                                                         t155))
                                                                     #(struct:int16_t
                                                                       (bv #x0040 16)))]))
  #f
  #f
  #f
  'int32)
 (vv-mpy-add
  ...
  (broadcast
   ...
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  '(1)
  (! x?$1336)
  (! x?$1337)
  (! x?$1338)
  'int32)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1339) (! x?$1340) (! x?$1341) 'int32))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [x?$1135 #(struct:int16_t (bv #x0040 16))] [(! x?$1135) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [x?$1135 #(struct:int16_t (bv #x0040 16))] [(! x?$1135) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (sign-extend (ite x?$1135 (bv #x0040 16) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1139) (! x?$1140) (! x?$1141) 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1139) (! x?$1140) (! x?$1141) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$1141 (! (&& (! x?$1139) (! x?$1141)))) (ite x?$1139 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$1139) (! x?$1141)) (&& (! x?$1141) (! (&& (! x?$1139) (! x?$1141))))) (bvashr (ite x?$1139 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1140 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [x?$1335 #(struct:int16_t (bv #x0040 16))] [(! x?$1335) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [x?$1335 #(struct:int16_t (bv #x0040 16))] [(! x?$1335) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (sign-extend (ite x?$1335 (bv #x0040 16) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1339) (! x?$1340) (! x?$1341) 'int32)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1339) (! x?$1340) (! x?$1341) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$1341 (! (&& (! x?$1339) (! x?$1341)))) (ite x?$1339 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$1339) (! x?$1341)) (&& (! x?$1341) (! (&& (! x?$1339) (! x?$1341))))) (bvashr (ite x?$1339 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1340 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (cast
 ...
 (broadcast
  ...
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 'int32
 x?$941)
axioms:
  (list (forall (idx) (bvsle (app abstr-vals$1342 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast #<abstr-halide-expr> 'int32 16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 x?$941)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (app abstr-vals$1342 0) (bitvector 32))))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$1342 0) (bitvector 32)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (broadcast
  ...
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 '((union [x?$1334 #(struct:int16_t (bv #x0040 16))] [(! x?$1334) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
axioms:
  (list (forall (idx) (bvsle (app abstr-vals$1343 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast #<abstr-halide-expr> 'int32 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 '((union [x?$1334 #(struct:int16_t (bv #x0040 16))] [(! x?$1334) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (app abstr-vals$1343 0) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (sign-extend (app abstr-vals$1343 0) (bitvector 32)) (sign-extend (ite x?$1334 (bv #x0040 16) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))) (bitvector 32))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vv-mpy-add
 ...
 (broadcast
  ...
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 '(1)
 (! x?$1336)
 (! x?$1337)
 (! x?$1338)
 'int32)
axioms:
  (list (forall (idx) (bvsle (app abstr-vals$1344 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast #<abstr-halide-expr> 'int32 16))
optimized-template:
  (vv-mpy-add ... #<abstr-expr> '(1) (! x?$1336) (! x?$1337) (! x?$1338) 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (app abstr-vals$1344 0) (bitvector 32))))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& x?$1338 (! (&& (! x?$1336) (! x?$1338)))) (ite x?$1336 (bvadd (bvmul (sign-extend (app abstr-vals$1344 0) (bitvector 32)) (sign-extend (app abstr-vals$1344 1) (bitvector 32))) (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$1344 0) (bitvector 32)) (sign-extend (app abstr-vals$1344 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (sign-extend (app abstr-vals$1344 0) (bitvector 32)) (sign-extend (app abstr-vals$1344 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32)))))))) (⊢ (|| (&& (! x?$1336) (! x?$1338)) (&& (! x?$1338) (! (&& (! x?$1336) (! x?$1338))))) (bvashr (ite x?$1336 (bvadd (bvmul (sign-extend (app abstr-vals$1344 0) (bitvector 32)) (sign-extend (app abstr-vals$1344 1) (bitvector 32))) (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$1344 0) (bitvector 32)) (sign-extend (app abstr-vals$1344 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32))))) (bvmul (sign-extend (app abstr-vals$1344 0) (bitvector 32)) (sign-extend (app abstr-vals$1344 1) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1337 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000001 32)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$1346 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast #<abstr-halide-expr> 'int16 16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   #<abstr-halide-expr>)
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$1346 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1345 0) (bitvector 16)))) (bitvector 32))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (app abstr-vals$1346 0) (ite* (⊢ (&& (! xi?$939) (! xi?$940)) (bv #x0001 16)) (⊢ (|| xi?$939 (&& xi?$940 (! xi?$939))) (ite* (⊢ xi?$939 (bv #x0040 16)) (⊢ (&& xi?$940 (! xi?$939)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))))))) (bvmul (zero-extend (app abstr-vals$1345 0) (bitvector 16)) (bvmul (bv #x0040 16) (ite* (⊢ (&& (! xi?$939) (! xi?$940)) (bv #x0001 16)) (⊢ (|| xi?$939 (&& xi?$940 (! xi?$939))) (ite* (⊢ xi?$939 (bv #x0040 16)) (⊢ (&& xi?$940 (! xi?$939)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))))))))))
Ran synthesizer for 60 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int32)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$1348 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast #<abstr-halide-expr> 'int16 16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   #<abstr-halide-expr>)
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$939 #(struct:int16_t (bv #x0040 16))] [(&& xi?$940 (! xi?$939)) #(struct:sca-mul
                                                                                  #(struct:sca-sub
                                                                                    #(struct:int16_t
                                                                                      t154)
                                                                                    #(struct:int16_t
                                                                                      t155))
                                                                                  #(struct:int16_t
                                                                                    (bv #x0040 16)))] [(&& (! xi?$939) (! xi?$940)) #(struct:int8_t
                                                                                                                                      (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$1348 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1347 0) (bitvector 16)))) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvadd (bvmul (sign-extend (app abstr-vals$1348 0) (bitvector 32)) (sign-extend (ite* (⊢ (&& (! xi?$939) (! xi?$940)) (bv #x0001 16)) (⊢ (|| xi?$939 (&& xi?$940 (! xi?$939))) (ite* (⊢ xi?$939 (bv #x0040 16)) (⊢ (&& xi?$940 (! xi?$939)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))))) (bitvector 32))) (bvmul (zero-extend (app abstr-vals$1347 0) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (ite* (⊢ (&& (! xi?$939) (! xi?$940)) (bv #x0001 16)) (⊢ (|| xi?$939 (&& xi?$940 (! xi?$939))) (ite* (⊢ xi?$939 (bv #x0040 16)) (⊢ (&& xi?$940 (! xi?$939)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))))))) (bitvector 32)))))
Ran synthesizer for 452 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 'int32
 x?$935)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (cast ... #<abstr-expr> 'int32 x?$935)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1349 0) (bitvector 32))))
optimized x86 0:
  (int32_t (sign-extend (app abstr-vals$1349 0) (bitvector 32)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-add
   (vec-mul
    (vec-cast
     (load
      (buffer input1 'uint8)
      (ramp
       (sca-add
        (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
        (sca-sub
         (sca-sub (var-lookup 't77) (var-lookup 't83))
         (var-lookup 'input1.min.0)))
       1
       16)
      (aligned 1 0))
     'int16
     16)
    (sca-broadcast (int16_t (bv #x0040 16)) 16))
   (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
  'int32
  16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 '((union [x?$1134 #(struct:int16_t (bv #x0040 16))] [(! x?$1134) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 '((union [x?$1134 #(struct:int16_t (bv #x0040 16))] [(! x?$1134) #(struct:sca-mul
                                                                    #(struct:sca-sub
                                                                      #(struct:int16_t
                                                                        t154)
                                                                      #(struct:int16_t
                                                                        t155))
                                                                    #(struct:int16_t
                                                                      (bv #x0040 16)))]))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int32_t
 (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1350 0) (bitvector 32))))
optimized x86 0:
  (int32_t
 (bvmul (sign-extend (app abstr-vals$1350 0) (bitvector 32)) (sign-extend (ite x?$1134 (bv #x0040 16) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))) (bitvector 32))))
Ran synthesizer for 114 ms
(model
 [x?$1134 #f])
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int32 16)
 (vec-cast
  (sca-broadcast
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   16)
  'int32
  16))
(vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 #f
 #f
 #f
 'int32)
Ran bounds analysis for 168 ms
Ran bounds analysis for 154 ms
"Success?"
#t
(vs-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) (list (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))) #f #f #f 'int32)
"Building Expr:"
(vec-cast
 (vec-mul
  (vec-cast
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input1 'uint8)
       (ramp
        (sca-add
         (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
         (sca-sub
          (sca-sub (var-lookup 't77) (var-lookup 't83))
          (var-lookup 'input1.min.0)))
        1
        16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0040 16)) 16))
    (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
   'int32
   16)
  (vec-cast
   (sca-broadcast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    16)
   'int32
   16))
 'int64
 16)
"Fold templates"
(list
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  x?$1357
  x?$1358
  x?$1359
  'int16)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  x?$1352
  x?$1353
  x?$1354
  'int32))
here(#(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) x?$1357 x?$1358 x?$1359 int16) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) x?$1352 x?$1353 x?$1354 int32))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-mul
  (vec-cast
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input1 'uint8)
       (ramp
        (sca-add
         (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
         (sca-sub
          (sca-sub (var-lookup 't77) (var-lookup 't83))
          (var-lookup 'input1.min.0)))
        1
        16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0040 16)) 16))
    (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
   'int32
   16)
  (vec-cast
   (sca-broadcast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    16)
   'int32
   16))
 'int64
 16)
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$1357
 x?$1358
 x?$1359
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$1363 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-cast
 (vec-mul
  (vec-cast
   (vec-add
    (vec-mul
     (vec-cast #<abstr-halide-expr> 'int16 16)
     (sca-broadcast (int16_t (bv #x0040 16)) 16))
    #<abstr-halide-expr>)
   'int32
   16)
  (vec-cast
   (sca-broadcast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    16)
   'int32
   16))
 'int64
 16)
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
 x?$1357
 x?$1358
 x?$1359
 'int16)
optimized Halide 0:
  (int64_t
 (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$1363 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16)))) (bitvector 32))) (bitvector 64)))
optimized x86 0:
  (int16_t
 (ite* (⊢ (&& (! x?$1359) (! (&& x?$1357 x?$1359))) (ite x?$1357 (bvadd (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))))) (⊢ (|| (&& x?$1357 x?$1359) (&& x?$1359 (! (&& x?$1357 x?$1359)))) (bvashr (ite x?$1357 (bvadd (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (ite (bvsle (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (ite (bvsle (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (bvadd (bv #x7fff 16) (bvneg (ite (bvsle (bv #x0000 16) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16))))) (bvadd (bv #x8000 16) (bvneg (ite (bvsle (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))) (bv #x0000 16)))))) (bvadd (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1362 0) (bitvector 16))) (ite x?$1357 (bvadd (ite x?$1358 (bv #x0001 16) (bv #x0000 16)) (ite (bvsle (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16))))) (app abstr-vals$1363 0) (bvadd (bv #x7fff 16) (bvneg (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bvadd (app abstr-vals$1363 0) (ite x?$1358 (bv #x0001 16) (bv #x0000 16)))))) (bv #x0001 16)))))
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-mul
  (vec-cast
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input1 'uint8)
       (ramp
        (sca-add
         (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
         (sca-sub
          (sca-sub (var-lookup 't77) (var-lookup 't83))
          (var-lookup 'input1.min.0)))
        1
        16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0040 16)) 16))
    (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
   'int32
   16)
  (vec-cast
   (sca-broadcast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    16)
   'int32
   16))
 'int64
 16)
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 x?$1352
 x?$1353
 x?$1354
 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast
 (vec-mul
  (vec-cast #<abstr-halide-expr> 'int32 16)
  (vec-cast
   (sca-broadcast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    16)
   'int32
   16))
 'int64
 16)
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 x?$1352
 x?$1353
 x?$1354
 'int32)
optimized Halide 0:
  (int64_t
 (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1364 0) (bitvector 32))) (bitvector 64)))
optimized x86 0:
  (int32_t
 (ite* (⊢ (&& (! x?$1354) (! (&& x?$1352 x?$1354))) (ite x?$1352 (bvadd (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32)) (ite (bvsle (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1364 0) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32))))) (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1364 0) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32)))))) (bvadd (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1364 0) (bitvector 32))) (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32))))) (⊢ (|| (&& x?$1352 x?$1354) (&& x?$1354 (! (&& x?$1352 x?$1354)))) (bvashr (ite x?$1352 (bvadd (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32)) (ite (bvsle (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1364 0) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32))))) (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1364 0) (bitvector 32))) (bvadd (bv #x7fffffff 32) (bvneg (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32)))))) (bvadd (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1364 0) (bitvector 32))) (ite x?$1353 (bv #x00000001 32) (bv #x00000000 32)))) (bv #x00000001 32)))))
Ran synthesizer for 3 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (vec-mul
  (vec-cast
   (vec-add
    (vec-mul
     (vec-cast
      (load
       (buffer input1 'uint8)
       (ramp
        (sca-add
         (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
         (sca-sub
          (sca-sub (var-lookup 't77) (var-lookup 't83))
          (var-lookup 'input1.min.0)))
        1
        16)
       (aligned 1 0))
      'int16
      16)
     (sca-broadcast (int16_t (bv #x0040 16)) 16))
    (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
   'int32
   16)
  (vec-cast
   (sca-broadcast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    16)
   'int32
   16))
 'int64
 16)
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  #f
  #f
  'int32)
 'int64
 #f)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1365 idx) (bv #x40000000 32)) (bvsle (bv #xc0008000 32) (app abstr-vals$1365 idx)))))
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int64 16)
optimized-template:
  (cast ... #<abstr-expr> 'int64 #f)
optimized Halide 0:
  (int64_t (sign-extend (app abstr-vals$1365 0) (bitvector 64)))
optimized x86 0:
  (int64_t (sign-extend (app abstr-vals$1365 0) (bitvector 64)))
Ran synthesizer for 48 ms
(model)
(vec-cast #<abstr-halide-expr> 'int64 16)
(cast
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  #f
  #f
  'int32)
 'int64
 #f)
Ran bounds analysis for 79 ms
Ran bounds analysis for 75 ms
"Extended success?"
#t
(cast
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  #f
  #f
  'int32)
 'int64
 #f)
"Building Expr:"
(sca-broadcast (int32_t output_multiplier) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int32_t output_multiplier) 16)
template:
  (broadcast ... (int32_t output_multiplier))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int32_t output_multiplier) 16)
optimized-template:
  (broadcast ... (int32_t output_multiplier))
optimized Halide 0:
  (int32_t output_multiplier)
optimized x86 0:
  (int32_t output_multiplier)
Ran synthesizer for 25 ms
(model)
(sca-broadcast (int32_t output_multiplier) 16)
(broadcast ... (int32_t output_multiplier))
Ran bounds analysis for 51 ms
Ran bounds analysis for 39 ms
"Extended success?"
#t
(broadcast ... (int32_t output_multiplier))
"Building Expr:"
(vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16)
template:
  (cast ... (broadcast ... (int32_t output_multiplier)) 'int64 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'int64 16)
optimized-template:
  (cast ... #<abstr-expr> 'int64 #f)
optimized Halide 0:
  (int64_t (sign-extend (app abstr-vals$1367 0) (bitvector 64)))
optimized x86 0:
  (int64_t (sign-extend (app abstr-vals$1367 0) (bitvector 64)))
Ran synthesizer for 25 ms
(model)
(vec-cast #<abstr-halide-expr> 'int64 16)
(cast ... (broadcast ... (int32_t output_multiplier)) 'int64 #f)
Ran bounds analysis for 88 ms
Ran bounds analysis for 70 ms
"Extended success?"
#t
(cast ... (broadcast ... (int32_t output_multiplier)) 'int64 #f)
"Building Expr:"
(vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
"Fold templates"
(list
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                         (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                          #(struct:sca-sub
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t154)
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t155))
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                  (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                         (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                          #(struct:sca-sub
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t154)
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t155))
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                  (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int16)
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list
   (sca-mul
    (sca-cast (int8_t (bv #x01 8)) 'int16)
    (sca-cast
     (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                         (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                          #(struct:sca-sub
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t154)
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t155))
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                  (bv #x01 8))])
     'int16))
   (sca-mul
    (sca-cast (int16_t (bv #x0040 16)) 'int16)
    (sca-cast
     (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                         (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                          #(struct:sca-sub
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t154)
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t155))
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                  (bv #x01 8))])
     'int16)))
  #f
  #f
  #f
  'int64)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul
    (sca-cast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     'int32)
    (sca-cast
     (union [xi?$1373 #(struct:int32_t output_multiplier)] [(&& xi?$1374 (! xi?$1373)) #(struct:int16_t
                                                                                         (bv #x0040 16))] [(&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) #(struct:sca-mul
                                                                                                                                                          #(struct:sca-sub
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t154)
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t155))
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            (bv #x0040 16)))] [(&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) #(struct:int8_t
                                                                                                                                                                                                                                  (bv #x01 8))])
     'int32)))
  #f
  #f
  #f
  'int32)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul
    (sca-cast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     'int32)
    (sca-cast
     (union [xi?$1373 #(struct:int32_t output_multiplier)] [(&& xi?$1374 (! xi?$1373)) #(struct:int16_t
                                                                                         (bv #x0040 16))] [(&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) #(struct:sca-mul
                                                                                                                                                          #(struct:sca-sub
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t154)
                                                                                                                                                            #(struct:int16_t
                                                                                                                                                              t155))
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            (bv #x0040 16)))] [(&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) #(struct:int8_t
                                                                                                                                                                                                                                  (bv #x01 8))])
     'int32)))
  #f
  #f
  #f
  'int64)
 (cast
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  'int64
  x?$1369)
 (cast ... (broadcast ... (int32_t output_multiplier)) 'int64 x?$1382))
here(#(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 4 #:hash 306009365684803053) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 4 #:hash 306009365684803053) int16))) #f #f #f int16) #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:sca-mul #(struct:sca-cast #(struct:int8_t (bv #x01 8)) int16) #(struct:sca-cast (union #:size 4 #:hash 306009365684803053) int16)) #(struct:sca-mul #(struct:sca-cast #(struct:int16_t (bv #x0040 16)) int16) #(struct:sca-cast (union #:size 4 #:hash 306009365684803053) int16))) #f #f #f int64) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-cast #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16))) int32) #(struct:sca-cast (union #:size 4 #:hash 304139503712864419) int32))) #f #f #f int32) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-cast #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16))) int32) #(struct:sca-cast (union #:size 4 #:hash 304139503712864419) int32))) #f #f #f int64) #(struct:cast ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) int64 x?$1369) #(struct:cast ... #(struct:broadcast ... #(struct:int32_t output_multiplier)) int64 x?$1382))

(list (vs-mpy-add ... (vs-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) (list (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))) #f #f #f 'int32) '((union [xi?$1575 #(struct:int32_t output_multiplier)] [(&& xi?$1576 (! xi?$1575)) #(struct:int16_t (bv #x0040 16))] [(&& (! xi?$1575) (! xi?$1576)) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int64) (vs-mpy-add ... #<load-data> '((union [xi?$1577 #(struct:int32_t output_multiplier)] [(&& xi?$1578 (! xi?$1577)) #(struct:int16_t (bv #x0040 16))] [(&& (! xi?$1577) (! xi?$1578)) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int64) (vv-mpy-add ... (vs-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) (list (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))) #f #f #f 'int32) '(1) (! x?$1579) (! x?$1580) (! x?$1581) 'int64) (vv-mpy-add ... #<load-data> '(1) (! x?$1582) (! x?$1583) (! x?$1584) 'int64))
(list (vs-mpy-add ... (broadcast ... (int32_t output_multiplier)) '((union [xi?$1777 #(struct:int32_t output_multiplier)] [(&& xi?$1778 (! xi?$1777)) #(struct:int16_t (bv #x0040 16))] [(&& (! xi?$1777) (! xi?$1778)) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int64) (vs-mpy-add ... #<load-data> '((union [xi?$1779 #(struct:int32_t output_multiplier)] [(&& xi?$1780 (! xi?$1779)) #(struct:int16_t (bv #x0040 16))] [(&& (! xi?$1779) (! xi?$1780)) #(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))])) #f #f #f 'int64) (vv-mpy-add ... (broadcast ... (int32_t output_multiplier)) '(1) (! x?$1781) (! x?$1782) (! x?$1783) 'int64) (vv-mpy-add ... #<load-data> '(1) (! x?$1784) (! x?$1785) (! x?$1786) 'int64))
"Replace templates"
(list
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  '((union [xi?$1575 #(struct:int32_t output_multiplier)] [(&& xi?$1576 (! xi?$1575)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1575) (! xi?$1576)) #(struct:sca-mul
                                                                                                                                           #(struct:sca-sub
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t154)
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t155))
                                                                                                                                           #(struct:int16_t
                                                                                                                                             (bv #x0040 16)))]))
  #f
  #f
  #f
  'int64)
 (vs-mpy-add
  ...
  #<load-data>
  '((union [xi?$1577 #(struct:int32_t output_multiplier)] [(&& xi?$1578 (! xi?$1577)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1577) (! xi?$1578)) #(struct:sca-mul
                                                                                                                                           #(struct:sca-sub
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t154)
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t155))
                                                                                                                                           #(struct:int16_t
                                                                                                                                             (bv #x0040 16)))]))
  #f
  #f
  #f
  'int64)
 (vv-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  '(1)
  (! x?$1579)
  (! x?$1580)
  (! x?$1581)
  'int64)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1582) (! x?$1583) (! x?$1584) 'int64)
 (vs-mpy-add
  ...
  (broadcast ... (int32_t output_multiplier))
  '((union [xi?$1777 #(struct:int32_t output_multiplier)] [(&& xi?$1778 (! xi?$1777)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1777) (! xi?$1778)) #(struct:sca-mul
                                                                                                                                           #(struct:sca-sub
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t154)
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t155))
                                                                                                                                           #(struct:int16_t
                                                                                                                                             (bv #x0040 16)))]))
  #f
  #f
  #f
  'int64)
 (vs-mpy-add
  ...
  #<load-data>
  '((union [xi?$1779 #(struct:int32_t output_multiplier)] [(&& xi?$1780 (! xi?$1779)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1779) (! xi?$1780)) #(struct:sca-mul
                                                                                                                                           #(struct:sca-sub
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t154)
                                                                                                                                             #(struct:int16_t
                                                                                                                                               t155))
                                                                                                                                           #(struct:int16_t
                                                                                                                                             (bv #x0040 16)))]))
  #f
  #f
  #f
  'int64)
 (vv-mpy-add
  ...
  (broadcast ... (int32_t output_multiplier))
  '(1)
  (! x?$1781)
  (! x?$1782)
  (! x?$1783)
  'int64)
 (vv-mpy-add ... #<load-data> '(1) (! x?$1784) (! x?$1785) (! x?$1786) 'int64))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [xi?$1577 #(struct:int32_t output_multiplier)] [(&& xi?$1578 (! xi?$1577)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1577) (! xi?$1578)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [xi?$1577 #(struct:int32_t output_multiplier)] [(&& xi?$1578 (! xi?$1577)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1577) (! xi?$1578)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))) (bitvector 64)) (sign-extend output_multiplier (bitvector 64))))
optimized x86 0:
  (int64_t
 (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (ite* (⊢ xi?$1577 (sign-extend output_multiplier (bitvector 64))) (⊢ (|| (&& xi?$1578 (! xi?$1577)) (&& (! xi?$1577) (! xi?$1578))) (sign-extend (ite* (⊢ (&& xi?$1578 (! xi?$1577)) (bv #x0040 16)) (⊢ (&& (! xi?$1577) (! xi?$1578)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 64))))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1582) (! x?$1583) (! x?$1584) 'int64)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1582) (! x?$1583) (! x?$1584) 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))) (bitvector 64)) (sign-extend output_multiplier (bitvector 64))))
optimized x86 0:
  (int64_t
 (ite* (⊢ (&& x?$1584 (! (&& (! x?$1582) (! x?$1584)))) (ite x?$1582 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64))) (bvadd (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64)))))))) (⊢ (|| (&& (! x?$1582) (! x?$1584)) (&& (! x?$1584) (! (&& (! x?$1582) (! x?$1584))))) (bvashr (ite x?$1582 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64))) (bvadd (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1583 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))))) (bv #x0000000000000001 64)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [xi?$1779 #(struct:int32_t output_multiplier)] [(&& xi?$1780 (! xi?$1779)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1779) (! xi?$1780)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 '((union [xi?$1779 #(struct:int32_t output_multiplier)] [(&& xi?$1780 (! xi?$1779)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1779) (! xi?$1780)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))) (bitvector 64)) (sign-extend output_multiplier (bitvector 64))))
optimized x86 0:
  (int64_t
 (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (ite* (⊢ xi?$1779 (sign-extend output_multiplier (bitvector 64))) (⊢ (|| (&& xi?$1780 (! xi?$1779)) (&& (! xi?$1779) (! xi?$1780))) (sign-extend (ite* (⊢ (&& xi?$1780 (! xi?$1779)) (bv #x0040 16)) (⊢ (&& (! xi?$1779) (! xi?$1780)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 64))))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1784) (! x?$1785) (! x?$1786) 'int64)
axioms:
  '()
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vv-mpy-add ... #<load-data> '(1) (! x?$1784) (! x?$1785) (! x?$1786) 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))) (bitvector 64)) (sign-extend output_multiplier (bitvector 64))))
optimized x86 0:
  (int64_t
 (ite* (⊢ (&& x?$1786 (! (&& (! x?$1784) (! x?$1786)))) (ite x?$1784 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64))) (bvadd (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64)))))))) (⊢ (|| (&& (! x?$1784) (! x?$1786)) (&& (! x?$1786) (! (&& (! x?$1784) (! x?$1786))))) (bvashr (ite x?$1784 (bvadd (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64))) (bvadd (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64)) (ite (bvsle (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))) (bvmul (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64)) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1785 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))))) (bv #x0000000000000001 64)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (cast ... (broadcast ... (int32_t output_multiplier)) 'int64 x?$1382)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast #<abstr-halide-expr> 'int64 16))
optimized-template:
  (cast ... #<abstr-expr> 'int64 x?$1382)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))) (bitvector 64)) (sign-extend (app abstr-vals$1787 0) (bitvector 64))))
optimized x86 0:
  (int64_t (sign-extend (app abstr-vals$1787 0) (bitvector 64)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 (broadcast ... (int32_t output_multiplier))
 '((union [xi?$1777 #(struct:int32_t output_multiplier)] [(&& xi?$1778 (! xi?$1777)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1777) (! xi?$1778)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast #<abstr-halide-expr> 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 '((union [xi?$1777 #(struct:int32_t output_multiplier)] [(&& xi?$1778 (! xi?$1777)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1777) (! xi?$1778)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))) (bitvector 64)) (sign-extend (app abstr-vals$1788 0) (bitvector 64))))
optimized x86 0:
  (int64_t
 (bvmul (sign-extend (app abstr-vals$1788 0) (bitvector 64)) (ite* (⊢ xi?$1777 (sign-extend output_multiplier (bitvector 64))) (⊢ (|| (&& xi?$1778 (! xi?$1777)) (&& (! xi?$1777) (! xi?$1778))) (sign-extend (ite* (⊢ (&& xi?$1778 (! xi?$1777)) (bv #x0040 16)) (⊢ (&& (! xi?$1777) (! xi?$1778)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 64))))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vv-mpy-add
 ...
 (broadcast ... (int32_t output_multiplier))
 '(1)
 (! x?$1781)
 (! x?$1782)
 (! x?$1783)
 'int64)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast #<abstr-halide-expr> 'int64 16))
optimized-template:
  (vv-mpy-add ... #<abstr-expr> '(1) (! x?$1781) (! x?$1782) (! x?$1783) 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend (bvmul (sign-extend (bvadd (bvmul (bv #x0040 16) (zero-extend (app input1 (+ (+ t93 (- (+ t105 output.s0.y.rebased))) (+ (+ (+ t102 (+ -16 t142)) (- t144)) (- t88)))) (bitvector 16))) (bvmul (bv #xffc0 16) t153)) (bitvector 32)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32))) (bitvector 64)) (sign-extend (app abstr-vals$1789 0) (bitvector 64))))
optimized x86 0:
  (int64_t
 (ite* (⊢ (&& x?$1783 (! (&& (! x?$1781) (! x?$1783)))) (ite x?$1781 (bvadd (bvmul (sign-extend (app abstr-vals$1789 0) (bitvector 64)) (sign-extend (app abstr-vals$1789 1) (bitvector 64))) (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64))) (bvadd (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$1789 0) (bitvector 64)) (sign-extend (app abstr-vals$1789 1) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))) (bvmul (sign-extend (app abstr-vals$1789 0) (bitvector 64)) (sign-extend (app abstr-vals$1789 1) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64)))))))) (⊢ (|| (&& (! x?$1781) (! x?$1783)) (&& (! x?$1783) (! (&& (! x?$1781) (! x?$1783))))) (bvashr (ite x?$1781 (bvadd (bvmul (sign-extend (app abstr-vals$1789 0) (bitvector 64)) (sign-extend (app abstr-vals$1789 1) (bitvector 64))) (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64))) (bvadd (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64)) (ite (bvsle (bvmul (sign-extend (app abstr-vals$1789 0) (bitvector 64)) (sign-extend (app abstr-vals$1789 1) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))) (bvmul (sign-extend (app abstr-vals$1789 0) (bitvector 64)) (sign-extend (app abstr-vals$1789 1) (bitvector 64))) (bvadd (bv #x7fffffffffffffff 64) (bvneg (ite x?$1782 (bv #x0000000000000000 64) (bv #x0000000000000001 64))))))) (bv #x0000000000000001 64)))))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$1791 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast #<abstr-halide-expr> 'int16 16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     #<abstr-halide-expr>)
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int16)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$1791 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1790 0) (bitvector 16)))) (bitvector 32))) (bitvector 64))))
optimized x86 0:
  (int16_t
 (bvadd (bvmul (app abstr-vals$1791 0) (ite* (⊢ xi?$1379 (extract 15 0 output_multiplier)) (⊢ (&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) (bv #x0001 16)) (⊢ (|| (&& xi?$1380 (! xi?$1379)) (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380)))) (ite* (⊢ (&& xi?$1380 (! xi?$1379)) (bv #x0040 16)) (⊢ (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))))))) (bvmul (zero-extend (app abstr-vals$1790 0) (bitvector 16)) (bvmul (bv #x0040 16) (ite* (⊢ xi?$1379 (extract 15 0 output_multiplier)) (⊢ (&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) (bv #x0001 16)) (⊢ (|| (&& xi?$1380 (! xi?$1379)) (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380)))) (ite* (⊢ (&& xi?$1380 (! xi?$1379)) (bv #x0040 16)) (⊢ (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))))))))))
Ran synthesizer for 89 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 (combine
  #<load-data>
  (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int64)
axioms:
  (list #t (forall (idx) (bvsle (app abstr-vals$1793 idx) (bv #x7fc0 16))))
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast #<abstr-halide-expr> 'int16 16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     #<abstr-halide-expr>)
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 (combine #<abstr-expr> #<abstr-expr>)
 (list
  (sca-mul
   (sca-cast (int8_t (bv #x01 8)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16))
  (sca-mul
   (sca-cast (int16_t (bv #x0040 16)) 'int16)
   (sca-cast
    (union [xi?$1379 #(struct:int32_t output_multiplier)] [(&& xi?$1380 (! xi?$1379)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int16)))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (bvadd (app abstr-vals$1793 0) (bvmul (bv #x0040 16) (zero-extend (app abstr-vals$1792 0) (bitvector 16)))) (bitvector 32))) (bitvector 64))))
optimized x86 0:
  (int64_t
 (bvadd (bvmul (sign-extend (app abstr-vals$1793 0) (bitvector 64)) (sign-extend (ite* (⊢ xi?$1379 (extract 15 0 output_multiplier)) (⊢ (&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) (bv #x0001 16)) (⊢ (|| (&& xi?$1380 (! xi?$1379)) (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380)))) (ite* (⊢ (&& xi?$1380 (! xi?$1379)) (bv #x0040 16)) (⊢ (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))))) (bitvector 64))) (bvmul (zero-extend (app abstr-vals$1792 0) (bitvector 64)) (sign-extend (bvmul (bv #x0040 16) (ite* (⊢ xi?$1379 (extract 15 0 output_multiplier)) (⊢ (&& (! xi?$1379) (&& (! xi?$1380) (! xi?$1381))) (bv #x0001 16)) (⊢ (|| (&& xi?$1380 (! xi?$1379)) (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380)))) (ite* (⊢ (&& xi?$1380 (! xi?$1379)) (bv #x0040 16)) (⊢ (&& (! xi?$1379) (&& xi?$1381 (! xi?$1380))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155)))))))) (bitvector 64)))))
Ran synthesizer for 1615 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list
  (sca-mul
   (sca-cast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    'int32)
   (sca-cast
    (union [xi?$1373 #(struct:int32_t output_multiplier)] [(&& xi?$1374 (! xi?$1373)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int32)))
 #f
 #f
 #f
 'int32)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast #<abstr-halide-expr> 'int32 16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list
  (sca-mul
   (sca-cast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    'int32)
   (sca-cast
    (union [xi?$1373 #(struct:int32_t output_multiplier)] [(&& xi?$1374 (! xi?$1373)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int32)))
 #f
 #f
 #f
 'int32)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1794 0) (bitvector 32))) (bitvector 64))))
optimized x86 0:
  (int32_t
 (bvmul (sign-extend (app abstr-vals$1794 0) (bitvector 32)) (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (ite* (⊢ xi?$1373 output_multiplier) (⊢ (&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) (bv #x00000001 32)) (⊢ (|| (&& xi?$1374 (! xi?$1373)) (&& (! xi?$1373) (&& xi?$1375 (! xi?$1374)))) (sign-extend (ite* (⊢ (&& xi?$1374 (! xi?$1373)) (bv #x0040 16)) (⊢ (&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 32)))))))
Ran synthesizer for 24 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list
  (sca-mul
   (sca-cast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    'int32)
   (sca-cast
    (union [xi?$1373 #(struct:int32_t output_multiplier)] [(&& xi?$1374 (! xi?$1373)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int32)))
 #f
 #f
 #f
 'int64)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast #<abstr-halide-expr> 'int32 16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list
  (sca-mul
   (sca-cast
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
    'int32)
   (sca-cast
    (union [xi?$1373 #(struct:int32_t output_multiplier)] [(&& xi?$1374 (! xi?$1373)) #(struct:int16_t
                                                                                        (bv #x0040 16))] [(&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) #(struct:sca-mul
                                                                                                                                                         #(struct:sca-sub
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t154)
                                                                                                                                                           #(struct:int16_t
                                                                                                                                                             t155))
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           (bv #x0040 16)))] [(&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) #(struct:int8_t
                                                                                                                                                                                                                                 (bv #x01 8))])
    'int32)))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$1795 0) (bitvector 32))) (bitvector 64))))
optimized x86 0:
  (int64_t
 (bvmul (sign-extend (app abstr-vals$1795 0) (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (ite* (⊢ xi?$1373 output_multiplier) (⊢ (&& (! xi?$1373) (&& (! xi?$1374) (! xi?$1375))) (bv #x00000001 32)) (⊢ (|| (&& xi?$1374 (! xi?$1373)) (&& (! xi?$1373) (&& xi?$1375 (! xi?$1374)))) (sign-extend (ite* (⊢ (&& xi?$1374 (! xi?$1373)) (bv #x0040 16)) (⊢ (&& (! xi?$1373) (&& xi?$1375 (! xi?$1374))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 32))))) (bitvector 64))))
Ran synthesizer for 872 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (cast
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  #f
  #f
  'int32)
 'int64
 x?$1369)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1796 idx) (bv #x40000000 32)) (bvsle (bv #xc0008000 32) (app abstr-vals$1796 idx)))))
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int64 16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (cast ... #<abstr-expr> 'int64 x?$1369)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$1796 0) (bitvector 64))))
optimized x86 0:
  (int64_t (sign-extend (app abstr-vals$1796 0) (bitvector 64)))
run-x86-synthesizer
halide-expr:
  (vec-mul
 (vec-cast
  (vec-mul
   (vec-cast
    (vec-add
     (vec-mul
      (vec-cast
       (load
        (buffer input1 'uint8)
        (ramp
         (sca-add
          (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
          (sca-sub
           (sca-sub (var-lookup 't77) (var-lookup 't83))
           (var-lookup 'input1.min.0)))
         1
         16)
        (aligned 1 0))
       'int16
       16)
      (sca-broadcast (int16_t (bv #x0040 16)) 16))
     (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
    'int32
    16)
   (vec-cast
    (sca-broadcast
     (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
     16)
    'int32
    16))
  'int64
  16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  #f
  #f
  'int32)
 '((union [xi?$1575 #(struct:int32_t output_multiplier)] [(&& xi?$1576 (! xi?$1575)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1575) (! xi?$1576)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1797 idx) (bv #x40000000 32)) (bvsle (bv #xc0008000 32) (app abstr-vals$1797 idx)))))
optimized-halide-expr:
  (vec-mul
 (vec-cast #<abstr-halide-expr> 'int64 16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 '((union [xi?$1575 #(struct:int32_t output_multiplier)] [(&& xi?$1576 (! xi?$1575)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1575) (! xi?$1576)) #(struct:sca-mul
                                                                                                                                          #(struct:sca-sub
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t154)
                                                                                                                                            #(struct:int16_t
                                                                                                                                              t155))
                                                                                                                                          #(struct:int16_t
                                                                                                                                            (bv #x0040 16)))]))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$1797 0) (bitvector 64))))
optimized x86 0:
  (int64_t
 (bvmul (sign-extend (app abstr-vals$1797 0) (bitvector 64)) (ite* (⊢ xi?$1575 (sign-extend output_multiplier (bitvector 64))) (⊢ (|| (&& xi?$1576 (! xi?$1575)) (&& (! xi?$1575) (! xi?$1576))) (sign-extend (ite* (⊢ (&& xi?$1576 (! xi?$1575)) (bv #x0040 16)) (⊢ (&& (! xi?$1575) (! xi?$1576)) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 64))))))
Ran synthesizer for 849 ms
(model
 [xi?$1575 #t]
 [xi?$1576 #f])
(vec-mul
 (vec-cast #<abstr-halide-expr> 'int64 16)
 (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
(vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  #f
  #f
  'int32)
 (list (int32_t output_multiplier))
 #f
 #f
 #f
 'int64)
Ran bounds analysis for 10485 ms
Ran bounds analysis for 11677 ms
"Success?"
#t
(vs-mpy-add ... (vs-mpy-add ... (vs-mpy-add ... (combine #<load-data> (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))))) (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16))) #f #f #f 'int16) (list (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))) #f #f #f 'int32) (list (int32_t output_multiplier)) #f #f #f 'int64)
"Building Expr:"
(sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)
template:
  (broadcast ... (int64_t (bv #x0000000040000000 64)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)
optimized-template:
  (broadcast ... (int64_t (bv #x0000000040000000 64)))
optimized Halide 0:
  (int64_t (bv #x0000000040000000 64))
optimized x86 0:
  (int64_t (bv #x0000000040000000 64))
Ran synthesizer for 19 ms
(model)
(sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)
(broadcast ... (int64_t (bv #x0000000040000000 64)))
Ran bounds analysis for 24 ms
Ran bounds analysis for 16 ms
"Extended success?"
#t
(broadcast ... (int64_t (bv #x0000000040000000 64)))
"Building Expr:"
(vec-div
 (vec-mul
  (vec-cast
   (vec-mul
    (vec-cast
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input1 'uint8)
         (ramp
          (sca-add
           (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
           (sca-sub
            (sca-sub (var-lookup 't77) (var-lookup 't83))
            (var-lookup 'input1.min.0)))
          1
          16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0040 16)) 16))
      (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
     'int32
     16)
    (vec-cast
     (sca-broadcast
      (sca-mul
       (sca-sub (int16_t t154) (int16_t t155))
       (int16_t (bv #x0040 16)))
      16)
     'int32
     16))
   'int64
   16)
  (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
 (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-mul
  (vec-cast
   (vec-mul
    (vec-cast
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input1 'uint8)
         (ramp
          (sca-add
           (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
           (sca-sub
            (sca-sub (var-lookup 't77) (var-lookup 't83))
            (var-lookup 'input1.min.0)))
          1
          16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0040 16)) 16))
      (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
     'int32
     16)
    (vec-cast
     (sca-broadcast
      (sca-mul
       (sca-sub (int16_t t154) (int16_t t155))
       (int16_t (bv #x0040 16)))
      16)
     'int32
     16))
   'int64
   16)
  (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
 (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001e 64))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1817 idx) (bv #x1fffffffc0000000 64)) (bvsle (bv #xe000000000000000 64) (app abstr-vals$1817 idx)))))
optimized-halide-expr:
  (vec-div
 #<abstr-halide-expr>
 (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int64_t (bv #x000000000000001e 64))
 #f
 #f
 #t)
optimized Halide 0:
  (int64_t
 (bvadd (bvashr (app abstr-vals$1817 0) (bv #x000000000000003f 64)) (bvsdiv (bvadd (app abstr-vals$1817 0) (bvneg (bvashr (app abstr-vals$1817 0) (bv #x000000000000003f 64)))) (bv #x0000000040000000 64))))
optimized x86 0:
  (int64_t (bvashr (app abstr-vals$1817 0) (bv #x000000000000001e 64)))
Ran synthesizer for 320 ms
(model)
(vec-div
 #<abstr-halide-expr>
 (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16))
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001e 64))
 #f
 #f
 #t)
Ran bounds analysis for 64 ms
Ran bounds analysis for 55 ms
"Extended success?"
#t
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001e 64))
 #f
 #f
 #t)
"Building Expr:"
(vec-bwand
 (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
"Fold templates"
(list
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (bv #x000000000000001e 64))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (bv #x000000000000001e 64))
  x?$1819
  x?$1820
  x?$1821))
here(#(struct:vs-shift-right ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) #(struct:int64_t (bv #x000000000000001e 64)) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) #(struct:int64_t (bv #x000000000000001e 64)) x?$1819 x?$1820 x?$1821))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-bwand
 (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001e 64))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1834 idx) (bv #x1fffffffc0000000 64)) (bvsle (bv #xe000000000000000 64) (app abstr-vals$1834 idx)))))
optimized-halide-expr:
  (vec-bwand
 (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
 (vec-div
  #<abstr-halide-expr>
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int64_t (bv #x000000000000001e 64))
 #f
 #f
 #t)
optimized Halide 0:
  (int64_t
 (bvand (bv #x0000000000000001 64) (bvadd (bvashr (app abstr-vals$1834 0) (bv #x000000000000003f 64)) (bvsdiv (bvadd (app abstr-vals$1834 0) (bvneg (bvashr (app abstr-vals$1834 0) (bv #x000000000000003f 64)))) (bv #x0000000040000000 64)))))
optimized x86 0:
  (int64_t (bvashr (app abstr-vals$1834 0) (bv #x000000000000001e 64)))
Ran synthesizer for 276 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-bwand
 (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001e 64))
 x?$1819
 x?$1820
 x?$1821)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1835 idx) (bv #x1fffffffc0000000 64)) (bvsle (bv #xe000000000000000 64) (app abstr-vals$1835 idx)))))
optimized-halide-expr:
  (vec-bwand
 (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
 (vec-div
  #<abstr-halide-expr>
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int64_t (bv #x000000000000001e 64))
 x?$1819
 x?$1820
 x?$1821)
optimized Halide 0:
  (int64_t
 (bvand (bv #x0000000000000001 64) (bvadd (bvashr (app abstr-vals$1835 0) (bv #x000000000000003f 64)) (bvsdiv (bvadd (app abstr-vals$1835 0) (bvneg (bvashr (app abstr-vals$1835 0) (bv #x000000000000003f 64)))) (bv #x0000000040000000 64)))))
optimized x86 0:
  (int64_t
 (ite x?$1819 (bvadd (ite x?$1821 (bvashr (app abstr-vals$1835 0) (bv #x000000000000001e 64)) (bvlshr (app abstr-vals$1835 0) (bv #x000000000000001e 64))) (bvand (bv #x0000000000000001 64) (ite x?$1821 (bvashr (app abstr-vals$1835 0) (bv #x000000000000001d 64)) (bvlshr (app abstr-vals$1835 0) (bv #x000000000000001d 64))))) (ite x?$1821 (bvashr (app abstr-vals$1835 0) (bv #x000000000000001e 64)) (bvlshr (app abstr-vals$1835 0) (bv #x000000000000001e 64)))))
Ran synthesizer for 330 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-bwand
 (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
template:
  (bitwise-op
 ...
 'and
 (broadcast ... (int64_t (bv #x0000000000000001 64)))
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (bv #x000000000000001e 64))
  #f
  #f
  #t))
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1836 idx) (bv #x0000000000000001 64)) (bvsle (bv #x0000000000000001 64) (app abstr-vals$1836 idx))))
 (forall (idx) (&& (bvsle (app abstr-vals$1837 idx) (bv #x000000007fffffff 64)) (bvsle (bv #xffffffff80000000 64) (app abstr-vals$1837 idx)))))
optimized-halide-expr:
  (vec-bwand #<abstr-halide-expr> #<abstr-halide-expr>)
optimized-template:
  (bitwise-op ... 'and #<abstr-expr> #<abstr-expr>)
optimized Halide 0:
  (int64_t (bvand (app abstr-vals$1836 0) (app abstr-vals$1837 0)))
optimized x86 0:
  (int64_t (bvand (app abstr-vals$1836 0) (app abstr-vals$1837 0)))
Ran synthesizer for 48 ms
(model)
(vec-bwand #<abstr-halide-expr> #<abstr-halide-expr>)
(bitwise-op
 ...
 'and
 (broadcast ... (int64_t (bv #x0000000000000001 64)))
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (bv #x000000000000001e 64))
  #f
  #f
  #t))
Ran bounds analysis for 40 ms
Ran bounds analysis for 59 ms
"Extended success?"
#t
(bitwise-op
 ...
 'and
 (broadcast ... (int64_t (bv #x0000000000000001 64)))
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (bv #x000000000000001e 64))
  #f
  #f
  #t))
"Building Expr:"
(sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)
template:
  (broadcast ... (int64_t (bv #x0000000080000000 64)))
axioms:
  '()
optimized-halide-expr:
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)
optimized-template:
  (broadcast ... (int64_t (bv #x0000000080000000 64)))
optimized Halide 0:
  (int64_t (bv #x0000000080000000 64))
optimized x86 0:
  (int64_t (bv #x0000000080000000 64))
Ran synthesizer for 20 ms
(model)
(sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)
(broadcast ... (int64_t (bv #x0000000080000000 64)))
Ran bounds analysis for 27 ms
Ran bounds analysis for 17 ms
"Extended success?"
#t
(broadcast ... (int64_t (bv #x0000000080000000 64)))
"Building Expr:"
(vec-div
 (vec-mul
  (vec-cast
   (vec-mul
    (vec-cast
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input1 'uint8)
         (ramp
          (sca-add
           (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
           (sca-sub
            (sca-sub (var-lookup 't77) (var-lookup 't83))
            (var-lookup 'input1.min.0)))
          1
          16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0040 16)) 16))
      (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
     'int32
     16)
    (vec-cast
     (sca-broadcast
      (sca-mul
       (sca-sub (int16_t t154) (int16_t t155))
       (int16_t (bv #x0040 16)))
      16)
     'int32
     16))
   'int64
   16)
  (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
 (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-div
 (vec-mul
  (vec-cast
   (vec-mul
    (vec-cast
     (vec-add
      (vec-mul
       (vec-cast
        (load
         (buffer input1 'uint8)
         (ramp
          (sca-add
           (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
           (sca-sub
            (sca-sub (var-lookup 't77) (var-lookup 't83))
            (var-lookup 'input1.min.0)))
          1
          16)
         (aligned 1 0))
        'int16
        16)
       (sca-broadcast (int16_t (bv #x0040 16)) 16))
      (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
     'int32
     16)
    (vec-cast
     (sca-broadcast
      (sca-mul
       (sca-sub (int16_t t154) (int16_t t155))
       (int16_t (bv #x0040 16)))
      16)
     'int32
     16))
   'int64
   16)
  (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
 (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16))
template:
  (vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001f 64))
 #f
 #f
 #t)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$1858 idx) (bv #x1fffffffc0000000 64)) (bvsle (bv #xe000000000000000 64) (app abstr-vals$1858 idx)))))
optimized-halide-expr:
  (vec-div
 #<abstr-halide-expr>
 (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16))
optimized-template:
  (vs-shift-right
 ...
 #<abstr-expr>
 (int64_t (bv #x000000000000001f 64))
 #f
 #f
 #t)
optimized Halide 0:
  (int64_t
 (bvadd (bvashr (app abstr-vals$1858 0) (bv #x000000000000003f 64)) (bvsdiv (bvadd (app abstr-vals$1858 0) (bvneg (bvashr (app abstr-vals$1858 0) (bv #x000000000000003f 64)))) (bv #x0000000080000000 64))))
optimized x86 0:
  (int64_t (bvashr (app abstr-vals$1858 0) (bv #x000000000000001f 64)))
Ran synthesizer for 312 ms
(model)
(vec-div
 #<abstr-halide-expr>
 (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16))
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001f 64))
 #f
 #f
 #t)
Ran bounds analysis for 64 ms
Ran bounds analysis for 55 ms
"Extended success?"
#t
(vs-shift-right
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  #f
  #f
  'int64)
 (int64_t (bv #x000000000000001f 64))
 #f
 #f
 #t)
"Building Expr:"
(vec-add
 (vec-bwand
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
  (vec-div
   (vec-mul
    (vec-cast
     (vec-mul
      (vec-cast
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input1 'uint8)
           (ramp
            (sca-add
             (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
             (sca-sub
              (sca-sub (var-lookup 't77) (var-lookup 't83))
              (var-lookup 'input1.min.0)))
            1
            16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0040 16)) 16))
        (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
       'int32
       16)
      (vec-cast
       (sca-broadcast
        (sca-mul
         (sca-sub (int16_t t154) (int16_t t155))
         (int16_t (bv #x0040 16)))
        16)
       'int32
       16))
     'int64
     16)
    (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
   (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)))
"Fold templates"
(list
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list
   (int32_t output_multiplier)
   (union [xi?$1867 #(struct:int32_t output_multiplier)] [(&& xi?$1868 (! xi?$1867)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$1867) (&& xi?$1869 (! xi?$1868))) #(struct:sca-mul
                                                                                                                                                        #(struct:sca-sub
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            t154)
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            t155))
                                                                                                                                                        #(struct:int16_t
                                                                                                                                                          (bv #x0040 16)))] [(&& (! xi?$1867) (&& (! xi?$1868) (! xi?$1869))) #(struct:int8_t
                                                                                                                                                                                                                                (bv #x01 8))]))
  #f
  #f
  #f
  'int64)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  x?$1865
  #f
  'int64)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (vs-mpy-add
      ...
      (combine
       #<load-data>
       (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
      (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
      #f
      #f
      #f
      'int16)
     (list
      (sca-mul
       (sca-sub (int16_t t154) (int16_t t155))
       (int16_t (bv #x0040 16))))
     #f
     #f
     #f
     'int32)
    (list (int32_t output_multiplier))
    #f
    #f
    #f
    'int64)
   (union [x?$1870 #(struct:bitwise-op
                     ...
                     and
                     #(struct:broadcast
                       ...
                       #(struct:int64_t (bv #x0000000000000001 64)))
                     #(struct:vs-shift-right
                       ...
                       #(struct:vs-mpy-add
                         ...
                         #(struct:vs-mpy-add
                           ...
                           #(struct:vs-mpy-add
                             ...
                             #<combine:
                              #<load-data>
                              #(struct:broadcast
                                ...
                                #(struct:sca-mul
                                  #(struct:int16_t t153)
                                  #(struct:int16_t (bv #xffc0 16))))>
                             (#(struct:int8_t (bv #x01 8))
                              #(struct:int16_t (bv #x0040 16)))
                             #f
                             #f
                             #f
                             int16)
                           (#(struct:sca-mul
                              #(struct:sca-sub
                                #(struct:int16_t t154)
                                #(struct:int16_t t155))
                              #(struct:int16_t (bv #x0040 16))))
                           #f
                           #f
                           #f
                           int32)
                         (#(struct:int32_t output_multiplier))
                         #f
                         #f
                         #f
                         int64)
                       #(struct:int64_t (bv #x000000000000001e 64))
                       #f
                       #f
                       #t))] [(! x?$1870) #(struct:vs-shift-right
                                            ...
                                            #(struct:vs-mpy-add
                                              ...
                                              #(struct:vs-mpy-add
                                                ...
                                                #(struct:vs-mpy-add
                                                  ...
                                                  #<combine:
                                                   #<load-data>
                                                   #(struct:broadcast
                                                     ...
                                                     #(struct:sca-mul
                                                       #(struct:int16_t t153)
                                                       #(struct:int16_t
                                                         (bv #xffc0 16))))>
                                                  (#(struct:int8_t (bv #x01 8))
                                                   #(struct:int16_t
                                                     (bv #x0040 16)))
                                                  #f
                                                  #f
                                                  #f
                                                  int16)
                                                (#(struct:sca-mul
                                                   #(struct:sca-sub
                                                     #(struct:int16_t t154)
                                                     #(struct:int16_t t155))
                                                   #(struct:int16_t
                                                     (bv #x0040 16))))
                                                #f
                                                #f
                                                #f
                                                int32)
                                              (#(struct:int32_t
                                                 output_multiplier))
                                              #f
                                              #f
                                              #f
                                              int64)
                                            #(struct:int64_t
                                              (bv #x000000000000001f 64))
                                            #f
                                            #f
                                            #t)]))
  (list (int32_t output_multiplier) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int64)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (ite x?$1860 (bv #x000000000000001e 64) (bv #x000000000000001f 64)))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (bv #x000000000000001e 64))
  x?$1861
  x?$1862
  x?$1863)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   (union [xi?$2141 #(struct:int32_t output_multiplier)] [(&& xi?$2142 (! xi?$2141)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$2141) (&& xi?$2143 (! xi?$2142))) #(struct:sca-mul
                                                                                                                                                        #(struct:sca-sub
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            t154)
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            t155))
                                                                                                                                                        #(struct:int16_t
                                                                                                                                                          (bv #x0040 16)))] [(&& (! xi?$2141) (&& (! xi?$2142) (! xi?$2143))) #(struct:int8_t
                                                                                                                                                                                                                                (bv #x01 8))]))
  #f
  #f
  #f
  'int64)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  x?$2139
  #f
  'int64)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (union [x?$2144 #(struct:bitwise-op
                     ...
                     and
                     #(struct:broadcast
                       ...
                       #(struct:int64_t (bv #x0000000000000001 64)))
                     #(struct:vs-shift-right
                       ...
                       #(struct:vs-mpy-add
                         ...
                         #(struct:vs-mpy-add
                           ...
                           #(struct:vs-mpy-add
                             ...
                             #<combine:
                              #<load-data>
                              #(struct:broadcast
                                ...
                                #(struct:sca-mul
                                  #(struct:int16_t t153)
                                  #(struct:int16_t (bv #xffc0 16))))>
                             (#(struct:int8_t (bv #x01 8))
                              #(struct:int16_t (bv #x0040 16)))
                             #f
                             #f
                             #f
                             int16)
                           (#(struct:sca-mul
                              #(struct:sca-sub
                                #(struct:int16_t t154)
                                #(struct:int16_t t155))
                              #(struct:int16_t (bv #x0040 16))))
                           #f
                           #f
                           #f
                           int32)
                         (#(struct:int32_t output_multiplier))
                         #f
                         #f
                         #f
                         int64)
                       #(struct:int64_t (bv #x000000000000001e 64))
                       #f
                       #f
                       #t))] [(! x?$2144) #(struct:vs-shift-right
                                            ...
                                            #(struct:vs-mpy-add
                                              ...
                                              #(struct:vs-mpy-add
                                                ...
                                                #(struct:vs-mpy-add
                                                  ...
                                                  #<combine:
                                                   #<load-data>
                                                   #(struct:broadcast
                                                     ...
                                                     #(struct:sca-mul
                                                       #(struct:int16_t t153)
                                                       #(struct:int16_t
                                                         (bv #xffc0 16))))>
                                                  (#(struct:int8_t (bv #x01 8))
                                                   #(struct:int16_t
                                                     (bv #x0040 16)))
                                                  #f
                                                  #f
                                                  #f
                                                  int16)
                                                (#(struct:sca-mul
                                                   #(struct:sca-sub
                                                     #(struct:int16_t t154)
                                                     #(struct:int16_t t155))
                                                   #(struct:int16_t
                                                     (bv #x0040 16))))
                                                #f
                                                #f
                                                #f
                                                int32)
                                              (#(struct:int32_t
                                                 output_multiplier))
                                              #f
                                              #f
                                              #f
                                              int64)
                                            #(struct:int64_t
                                              (bv #x000000000000001f 64))
                                            #f
                                            #f
                                            #t)]))
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
   (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int64)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list
   (int32_t output_multiplier)
   (union [xi?$2006 #(struct:int32_t output_multiplier)] [(&& xi?$2007 (! xi?$2006)) #(struct:int16_t
                                                                                       (bv #x0040 16))] [(&& (! xi?$2006) (&& xi?$2008 (! xi?$2007))) #(struct:sca-mul
                                                                                                                                                        #(struct:sca-sub
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            t154)
                                                                                                                                                          #(struct:int16_t
                                                                                                                                                            t155))
                                                                                                                                                        #(struct:int16_t
                                                                                                                                                          (bv #x0040 16)))] [(&& (! xi?$2006) (&& (! xi?$2007) (! xi?$2008))) #(struct:int8_t
                                                                                                                                                                                                                                (bv #x01 8))]))
  #f
  #f
  #f
  'int64)
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (combine
     #<load-data>
     (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
    (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
    #f
    #f
    #f
    'int16)
   (list
    (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
   #f
   #f
   #f
   'int32)
  (list (int32_t output_multiplier))
  #f
  x?$2004
  #f
  'int64)
 (vs-mpy-add
  ...
  (combine
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (vs-mpy-add
      ...
      (combine
       #<load-data>
       (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
      (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
      #f
      #f
      #f
      'int16)
     (list
      (sca-mul
       (sca-sub (int16_t t154) (int16_t t155))
       (int16_t (bv #x0040 16))))
     #f
     #f
     #f
     'int32)
    (list (int32_t output_multiplier))
    #f
    #f
    #f
    'int64)
   (union [x?$2009 #(struct:bitwise-op
                     ...
                     and
                     #(struct:broadcast
                       ...
                       #(struct:int64_t (bv #x0000000000000001 64)))
                     #(struct:vs-shift-right
                       ...
                       #(struct:vs-mpy-add
                         ...
                         #(struct:vs-mpy-add
                           ...
                           #(struct:vs-mpy-add
                             ...
                             #<combine:
                              #<load-data>
                              #(struct:broadcast
                                ...
                                #(struct:sca-mul
                                  #(struct:int16_t t153)
                                  #(struct:int16_t (bv #xffc0 16))))>
                             (#(struct:int8_t (bv #x01 8))
                              #(struct:int16_t (bv #x0040 16)))
                             #f
                             #f
                             #f
                             int16)
                           (#(struct:sca-mul
                              #(struct:sca-sub
                                #(struct:int16_t t154)
                                #(struct:int16_t t155))
                              #(struct:int16_t (bv #x0040 16))))
                           #f
                           #f
                           #f
                           int32)
                         (#(struct:int32_t output_multiplier))
                         #f
                         #f
                         #f
                         int64)
                       #(struct:int64_t (bv #x000000000000001e 64))
                       #f
                       #f
                       #t))] [(! x?$2009) #(struct:vs-shift-right
                                            ...
                                            #(struct:vs-mpy-add
                                              ...
                                              #(struct:vs-mpy-add
                                                ...
                                                #(struct:vs-mpy-add
                                                  ...
                                                  #<combine:
                                                   #<load-data>
                                                   #(struct:broadcast
                                                     ...
                                                     #(struct:sca-mul
                                                       #(struct:int16_t t153)
                                                       #(struct:int16_t
                                                         (bv #xffc0 16))))>
                                                  (#(struct:int8_t (bv #x01 8))
                                                   #(struct:int16_t
                                                     (bv #x0040 16)))
                                                  #f
                                                  #f
                                                  #f
                                                  int16)
                                                (#(struct:sca-mul
                                                   #(struct:sca-sub
                                                     #(struct:int16_t t154)
                                                     #(struct:int16_t t155))
                                                   #(struct:int16_t
                                                     (bv #x0040 16))))
                                                #f
                                                #f
                                                #f
                                                int32)
                                              (#(struct:int32_t
                                                 output_multiplier))
                                              #f
                                              #f
                                              #f
                                              int64)
                                            #(struct:int64_t
                                              (bv #x000000000000001f 64))
                                            #f
                                            #f
                                            #t)]))
  (list (int32_t output_multiplier) (int8_t (bv #x01 8)))
  #f
  #f
  #f
  'int64)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (ite x?$1999 (bv #x000000000000001e 64) (bv #x000000000000001f 64)))
  #f
  #f
  #t)
 (vs-shift-right
  ...
  (vs-mpy-add
   ...
   (vs-mpy-add
    ...
    (vs-mpy-add
     ...
     (combine
      #<load-data>
      (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
     (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
     #f
     #f
     #f
     'int16)
    (list
     (sca-mul
      (sca-sub (int16_t t154) (int16_t t155))
      (int16_t (bv #x0040 16))))
    #f
    #f
    #f
    'int32)
   (list (int32_t output_multiplier))
   #f
   #f
   #f
   'int64)
  (int64_t (bv #x000000000000001f 64))
  x?$2000
  x?$2001
  x?$2002))
here(#(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier) (union #:size 4 #:hash 299321396528649527)) #f #f #f int64) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f x?$1865 #f int64) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) (union #:size 2 #:hash 419933994996)> (#(struct:int32_t output_multiplier) #(struct:int8_t (bv #x01 8))) #f #f #f int64) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) #(struct:int64_t (ite x?$1860 (bv #x000000000000001e 64) (bv #x000000000000001f 64))) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) #(struct:int64_t (bv #x000000000000001e 64)) x?$1861 x?$1862 x?$1863) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16))) (union #:size 4 #:hash 297720034661147876)) #f #f #f int64) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f x?$2139 #f int64) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (union #:size 2 #:hash 419923525488)> (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16))) #(struct:int8_t (bv #x01 8))) #f #f #f int64) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier) (union #:size 4 #:hash 299264143924450618)) #f #f #f int64) #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f x?$2004 #f int64) #(struct:vs-mpy-add ... #<combine: #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) (union #:size 2 #:hash 419901164279)> (#(struct:int32_t output_multiplier) #(struct:int8_t (bv #x01 8))) #f #f #f int64) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) #(struct:int64_t (ite x?$1999 (bv #x000000000000001e 64) (bv #x000000000000001f 64))) #f #f #t) #(struct:vs-shift-right ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #(struct:vs-mpy-add ... #<combine: #<load-data> #(struct:broadcast ... #(struct:sca-mul #(struct:int16_t t153) #(struct:int16_t (bv #xffc0 16))))> (#(struct:int8_t (bv #x01 8)) #(struct:int16_t (bv #x0040 16))) #f #f #f int16) (#(struct:sca-mul #(struct:sca-sub #(struct:int16_t t154) #(struct:int16_t t155)) #(struct:int16_t (bv #x0040 16)))) #f #f #f int32) (#(struct:int32_t output_multiplier)) #f #f #f int64) #(struct:int64_t (bv #x000000000000001f 64)) x?$2000 x?$2001 x?$2002))

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
  (vec-div
   (vec-mul
    (vec-cast
     (vec-mul
      (vec-cast
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input1 'uint8)
           (ramp
            (sca-add
             (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
             (sca-sub
              (sca-sub (var-lookup 't77) (var-lookup 't83))
              (var-lookup 'input1.min.0)))
            1
            16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0040 16)) 16))
        (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
       'int32
       16)
      (vec-cast
       (sca-broadcast
        (sca-mul
         (sca-sub (int16_t t154) (int16_t t155))
         (int16_t (bv #x0040 16)))
        16)
       'int32
       16))
     'int64
     16)
    (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
   (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
  (union [xi?$2141 #(struct:int32_t output_multiplier)] [(&& xi?$2142 (! xi?$2141)) #(struct:int16_t
                                                                                      (bv #x0040 16))] [(&& (! xi?$2141) (&& xi?$2143 (! xi?$2142))) #(struct:sca-mul
                                                                                                                                                       #(struct:sca-sub
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t154)
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t155))
                                                                                                                                                       #(struct:int16_t
                                                                                                                                                         (bv #x0040 16)))] [(&& (! xi?$2141) (&& (! xi?$2142) (! xi?$2143))) #(struct:int8_t
                                                                                                                                                                                                                               (bv #x01 8))]))
 #f
 #f
 #f
 'int64)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
  (vec-div
   (vec-mul
    (vec-cast
     (vec-mul
      (vec-cast #<abstr-halide-expr> 'int32 16)
      (vec-cast
       (sca-broadcast
        (sca-mul
         (sca-sub (int16_t t154) (int16_t t155))
         (int16_t (bv #x0040 16)))
        16)
       'int32
       16))
     'int64
     16)
    (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
   (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast #<abstr-halide-expr> 'int32 16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16)))
  (union [xi?$2141 #(struct:int32_t output_multiplier)] [(&& xi?$2142 (! xi?$2141)) #(struct:int16_t
                                                                                      (bv #x0040 16))] [(&& (! xi?$2141) (&& xi?$2143 (! xi?$2142))) #(struct:sca-mul
                                                                                                                                                       #(struct:sca-sub
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t154)
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t155))
                                                                                                                                                       #(struct:int16_t
                                                                                                                                                         (bv #x0040 16)))] [(&& (! xi?$2141) (&& (! xi?$2142) (! xi?$2143))) #(struct:int8_t
                                                                                                                                                                                                                               (bv #x01 8))]))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvadd (bvand (bv #x0000000000000001 64) (bvadd (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2273 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)) (bvsdiv (bvadd (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2273 0) (bitvector 32))) (bitvector 64))) (bvneg (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2273 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)))) (bv #x0000000040000000 64)))) (bvadd (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2273 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)) (bvsdiv (bvadd (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2273 0) (bitvector 32))) (bitvector 64))) (bvneg (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2273 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)))) (bv #x0000000080000000 64)))))
optimized x86 0:
  (int64_t
 (bvadd (bvmul (sign-extend (app abstr-vals$2273 0) (bitvector 64)) (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 64))) (bvmul (sign-extend (app abstr-vals$2273 1) (bitvector 64)) (ite* (⊢ xi?$2141 (sign-extend output_multiplier (bitvector 64))) (⊢ (&& (! xi?$2141) (&& (! xi?$2142) (! xi?$2143))) (bv #x0000000000000001 64)) (⊢ (|| (&& xi?$2142 (! xi?$2141)) (&& (! xi?$2141) (&& xi?$2143 (! xi?$2142)))) (sign-extend (ite* (⊢ (&& xi?$2142 (! xi?$2141)) (bv #x0040 16)) (⊢ (&& (! xi?$2141) (&& xi?$2143 (! xi?$2142))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 64)))))))
Ran synthesizer for 1483 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
  (vec-div
   (vec-mul
    (vec-cast
     (vec-mul
      (vec-cast
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input1 'uint8)
           (ramp
            (sca-add
             (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
             (sca-sub
              (sca-sub (var-lookup 't77) (var-lookup 't83))
              (var-lookup 'input1.min.0)))
            1
            16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0040 16)) 16))
        (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
       'int32
       16)
      (vec-cast
       (sca-broadcast
        (sca-mul
         (sca-sub (int16_t t154) (int16_t t155))
         (int16_t (bv #x0040 16)))
        16)
       'int32
       16))
     'int64
     16)
    (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
   (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (combine
   #<load-data>
   (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
  (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
  #f
  #f
  #f
  'int16)
 (list
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 #f
 x?$2139
 #f
 'int64)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
  (vec-div
   (vec-mul
    (vec-cast
     (vec-mul
      (vec-cast #<abstr-halide-expr> 'int32 16)
      (vec-cast
       (sca-broadcast
        (sca-mul
         (sca-sub (int16_t t154) (int16_t t155))
         (int16_t (bv #x0040 16)))
        16)
       'int32
       16))
     'int64
     16)
    (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
   (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast #<abstr-halide-expr> 'int32 16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list
  (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
 #f
 x?$2139
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvadd (bvand (bv #x0000000000000001 64) (bvadd (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2274 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)) (bvsdiv (bvadd (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2274 0) (bitvector 32))) (bitvector 64))) (bvneg (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2274 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)))) (bv #x0000000040000000 64)))) (bvadd (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2274 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)) (bvsdiv (bvadd (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2274 0) (bitvector 32))) (bitvector 64))) (bvneg (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 32)) (sign-extend (app abstr-vals$2274 0) (bitvector 32))) (bitvector 64))) (bv #x000000000000003f 64)))) (bv #x0000000080000000 64)))))
optimized x86 0:
  (int64_t
 (bvadd (bvmul (sign-extend (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))) (bitvector 64)) (sign-extend (app abstr-vals$2274 0) (bitvector 64))) (ite x?$2139 (bv #x0000000000000001 64) (bv #x0000000000000000 64))))
run-x86-synthesizer
halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
  (vec-div
   (vec-mul
    (vec-cast
     (vec-mul
      (vec-cast
       (vec-add
        (vec-mul
         (vec-cast
          (load
           (buffer input1 'uint8)
           (ramp
            (sca-add
             (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
             (sca-sub
              (sca-sub (var-lookup 't77) (var-lookup 't83))
              (var-lookup 'input1.min.0)))
            1
            16)
           (aligned 1 0))
          'int16
          16)
         (sca-broadcast (int16_t (bv #x0040 16)) 16))
        (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
       'int32
       16)
      (vec-cast
       (sca-broadcast
        (sca-mul
         (sca-sub (int16_t t154) (int16_t t155))
         (int16_t (bv #x0040 16)))
        16)
       'int32
       16))
     'int64
     16)
    (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
   (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
 (vec-div
  (vec-mul
   (vec-cast
    (vec-mul
     (vec-cast
      (vec-add
       (vec-mul
        (vec-cast
         (load
          (buffer input1 'uint8)
          (ramp
           (sca-add
            (sca-mul (var-lookup 'input1.stride.1) (var-lookup 't53))
            (sca-sub
             (sca-sub (var-lookup 't77) (var-lookup 't83))
             (var-lookup 'input1.min.0)))
           1
           16)
          (aligned 1 0))
         'int16
         16)
        (sca-broadcast (int16_t (bv #x0040 16)) 16))
       (sca-broadcast (sca-mul (int16_t t153) (int16_t (bv #xffc0 16))) 16))
      'int32
      16)
     (vec-cast
      (sca-broadcast
       (sca-mul
        (sca-sub (int16_t t154) (int16_t t155))
        (int16_t (bv #x0040 16)))
       16)
      'int32
      16))
    'int64
    16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)))
template:
  (vs-mpy-add
 ...
 (vs-mpy-add
  ...
  (vs-mpy-add
   ...
   (combine
    #<load-data>
    (broadcast ... (sca-mul (int16_t t153) (int16_t (bv #xffc0 16)))))
   (list (int8_t (bv #x01 8)) (int16_t (bv #x0040 16)))
   #f
   #f
   #f
   'int16)
  (list
   (sca-mul (sca-sub (int16_t t154) (int16_t t155)) (int16_t (bv #x0040 16))))
  #f
  #f
  #f
  'int32)
 (list
  (int32_t output_multiplier)
  (union [xi?$1867 #(struct:int32_t output_multiplier)] [(&& xi?$1868 (! xi?$1867)) #(struct:int16_t
                                                                                      (bv #x0040 16))] [(&& (! xi?$1867) (&& xi?$1869 (! xi?$1868))) #(struct:sca-mul
                                                                                                                                                       #(struct:sca-sub
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t154)
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t155))
                                                                                                                                                       #(struct:int16_t
                                                                                                                                                         (bv #x0040 16)))] [(&& (! xi?$1867) (&& (! xi?$1868) (! xi?$1869))) #(struct:int8_t
                                                                                                                                                                                                                               (bv #x01 8))]))
 #f
 #f
 #f
 'int64)
axioms:
  (list
 (forall (idx) (&& (bvsle (app abstr-vals$2275 idx) (bv #x40000000 32)) (bvsle (bv #xc0008000 32) (app abstr-vals$2275 idx)))))
optimized-halide-expr:
  (vec-add
 (vec-bwand
  (sca-broadcast (int64_t (bv #x0000000000000001 64)) 16)
  (vec-div
   (vec-mul
    (vec-cast #<abstr-halide-expr> 'int64 16)
    (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
   (sca-broadcast (int64_t (bv #x0000000040000000 64)) 16)))
 (vec-div
  (vec-mul
   (vec-cast #<abstr-halide-expr> 'int64 16)
   (vec-cast (sca-broadcast (int32_t output_multiplier) 16) 'int64 16))
  (sca-broadcast (int64_t (bv #x0000000080000000 64)) 16)))
optimized-template:
  (vs-mpy-add
 ...
 #<abstr-expr>
 (list
  (int32_t output_multiplier)
  (union [xi?$1867 #(struct:int32_t output_multiplier)] [(&& xi?$1868 (! xi?$1867)) #(struct:int16_t
                                                                                      (bv #x0040 16))] [(&& (! xi?$1867) (&& xi?$1869 (! xi?$1868))) #(struct:sca-mul
                                                                                                                                                       #(struct:sca-sub
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t154)
                                                                                                                                                         #(struct:int16_t
                                                                                                                                                           t155))
                                                                                                                                                       #(struct:int16_t
                                                                                                                                                         (bv #x0040 16)))] [(&& (! xi?$1867) (&& (! xi?$1868) (! xi?$1869))) #(struct:int8_t
                                                                                                                                                                                                                               (bv #x01 8))]))
 #f
 #f
 #f
 'int64)
optimized Halide 0:
  (int64_t
 (bvadd (bvand (bv #x0000000000000001 64) (bvadd (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$2275 0) (bitvector 64))) (bv #x000000000000003f 64)) (bvsdiv (bvadd (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$2275 0) (bitvector 64))) (bvneg (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$2275 0) (bitvector 64))) (bv #x000000000000003f 64)))) (bv #x0000000040000000 64)))) (bvadd (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$2275 0) (bitvector 64))) (bv #x000000000000003f 64)) (bvsdiv (bvadd (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$2275 0) (bitvector 64))) (bvneg (bvashr (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$2275 0) (bitvector 64))) (bv #x000000000000003f 64)))) (bv #x0000000080000000 64)))))
optimized x86 0:
  (int64_t
 (bvadd (bvmul (sign-extend output_multiplier (bitvector 64)) (sign-extend (app abstr-vals$2275 0) (bitvector 64))) (bvmul (sign-extend (app abstr-vals$2275 1) (bitvector 64)) (ite* (⊢ xi?$1867 (sign-extend output_multiplier (bitvector 64))) (⊢ (&& (! xi?$1867) (&& (! xi?$1868) (! xi?$1869))) (bv #x0000000000000001 64)) (⊢ (|| (&& xi?$1868 (! xi?$1867)) (&& (! xi?$1867) (&& xi?$1869 (! xi?$1868)))) (sign-extend (ite* (⊢ (&& xi?$1868 (! xi?$1867)) (bv #x0040 16)) (⊢ (&& (! xi?$1867) (&& xi?$1869 (! xi?$1868))) (bvmul (bv #x0040 16) (bvadd t154 (bvneg t155))))) (bitvector 64)))))))
