Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t (app sum 0))
optimized x86 0:
  (uint32_t (app sum 0))
Ran synthesizer for 22 ms
(model
 [idx$0 0])
(load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
#<load-data>
Ran bounds analysis for 34 ms
Ran bounds analysis for 24 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer mat_a 'uint8)
 (ramp
  (sca-add sum.s1.fk$x (var-lookup 't6106))
  (var-lookup 'mat_a.stride.1)
  16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer mat_a 'uint8)
 (ramp
  (sca-add sum.s1.fk$x (var-lookup 't6106))
  (var-lookup 'mat_a.stride.1)
  16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer mat_a 'uint8)
 (ramp
  (sca-add sum.s1.fk$x (var-lookup 't6106))
  (var-lookup 'mat_a.stride.1)
  16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t (app mat_a (+ sum.s1.fk$x t6626)))
optimized x86 0:
  (uint8_t (app mat_a (+ sum.s1.fk$x t6626)))
Ran synthesizer for 18 ms
(model
 [idx$65 0])
(load
 (buffer mat_a 'uint8)
 (ramp
  (sca-add sum.s1.fk$x (var-lookup 't6106))
  (var-lookup 'mat_a.stride.1)
  16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 19 ms
Ran bounds analysis for 12 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer mat_a 'uint8)
  (ramp
   (sca-add sum.s1.fk$x (var-lookup 't6106))
   (var-lookup 'mat_a.stride.1)
   16)
  (aligned 1 0))
 'uint32
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer mat_a 'uint8)
  (ramp
   (sca-add sum.s1.fk$x (var-lookup 't6106))
   (var-lookup 'mat_a.stride.1)
   16)
  (aligned 1 0))
 'uint32
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer mat_a 'uint8)
  (ramp
   (sca-add sum.s1.fk$x (var-lookup 't6106))
   (var-lookup 'mat_a.stride.1)
   16)
  (aligned 1 0))
 'uint32
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32)))
optimized x86 0:
  (uint8_t (app mat_a (+ sum.s1.fk$x t6626)))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer mat_a 'uint8)
  (ramp
   (sca-add sum.s1.fk$x (var-lookup 't6106))
   (var-lookup 'mat_a.stride.1)
   16)
  (aligned 1 0))
 'uint32
 16)
template:
  (cast ... #<load-data> 'uint32 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint32 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint32 #f)
optimized Halide 0:
  (uint32_t (zero-extend (app abstr-vals$194 0) (bitvector 32)))
optimized x86 0:
  (uint32_t (zero-extend (app abstr-vals$194 0) (bitvector 32)))
Ran synthesizer for 15 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint32 16)
(cast ... #<load-data> 'uint32 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 15 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint32 #f)
"Building Expr:"
(vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
"Fold templates"
(list #<load-data> #<load-data> (cast ... #<load-data> 'uint32 x?$260))
here(#<load-data> #<load-data> #(struct:cast ... #<load-data> uint32 x?$260))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$389)
  (! x?$390)
  (! x?$391)
  'uint32))
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t
 (bvadd (app sum 0) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))))
optimized x86 0:
  (union [(= 0 idx$196) #(struct:uint8_t (app mat_a (+ sum.s1.fk$x t6626)))] [(= 1 idx$196) #(struct:uint32_t
                                                                                            (app sum 0))])
Ran synthesizer for 41 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t
 (bvadd (app sum 0) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))))
optimized x86 0:
  (union [(= 0 idx$261) #(struct:uint8_t (app mat_a (+ sum.s1.fk$x t6626)))] [(= 1 idx$261) #(struct:uint32_t
                                                                                            (app sum 0))])
Ran synthesizer for 41 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  (cast ... #<load-data> 'uint32 x?$260)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast #<abstr-halide-expr> 'uint32 16))
optimized-template:
  (cast ... #<abstr-expr> 'uint32 x?$260)
optimized Halide 0:
  (uint32_t
 (bvadd (app sum 0) (zero-extend (app abstr-vals$392 0) (bitvector 32))))
optimized x86 0:
  (uint32_t (zero-extend (app abstr-vals$392 0) (bitvector 32)))
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$389)
 (! x?$390)
 (! x?$391)
 'uint32)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$389)
 (! x?$390)
 (! x?$391)
 'uint32)
optimized Halide 0:
  (uint32_t
 (bvadd (app sum 0) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))))
optimized x86 0:
  (uint32_t
 (ite* (⊢ (&& x?$391 (! (&& (! x?$389) (! x?$391)))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (bvadd (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (ite (bvule (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))) (ite (bvule (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))))))) (ite (bvule (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))))) (⊢ (|| (&& (! x?$389) (! x?$391)) (&& (! x?$391) (! (&& (! x?$389) (! x?$391))))) (bvlshr (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (bvadd (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (ite (bvule (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))) (ite (bvule (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))))))) (ite (bvule (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$326) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (zero-extend (app mat_a (+ sum.s1.fk$x t6626)) (bitvector 32))) (⊢ (= 1 idx$325) (app sum 0))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)))))) (bv #x00000001 32)))))
Ran synthesizer for 132 ms
(model
 [idx$325 0]
 [idx$326 1]
 [x?$389 #t]
 [x?$390 #t]
 [x?$391 #t])
(vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint32)
Ran bounds analysis for 24 ms
Ran bounds analysis for 18 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'uint32)

(x86) Successfully found an equivalent IR expression.

(vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint32)

Synthesis time: 1 seconds

Synthesizing x86 for:
(vec-add
 (load (buffer sum 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_a 'uint8)
   (ramp
    (sca-add sum.s1.fk$x (var-lookup 't6106))
    (var-lookup 'mat_a.stride.1)
    16)
   (aligned 1 0))
  'uint32
  16))


synthesize-x86 output:
#<void>
#f
