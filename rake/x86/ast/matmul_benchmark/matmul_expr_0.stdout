Lifting input expression to x86 IR...
=====================================

"Building Expr:"
(load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t (app sum$1 0))
optimized x86 0:
  (uint32_t (app sum$1 0))
Ran synthesizer for 24 ms
(model
 [idx$0 0])
(load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
#<load-data>
Ran bounds analysis for 35 ms
Ran bounds analysis for 25 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(load
 (buffer mat_b 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
   (var-lookup 't5838))
  1
  16)
 (aligned 1 0))
"Fold templates"
'()
here()

"Replace templates"
'()
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (load
 (buffer mat_b 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
   (var-lookup 't5838))
  1
  16)
 (aligned 1 0))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (load
 (buffer mat_b 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
   (var-lookup 't5838))
  1
  16)
 (aligned 1 0))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint8_t
 (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))))
optimized x86 0:
  (uint8_t
 (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))))
Ran synthesizer for 18 ms
(model
 [idx$65 0])
(load
 (buffer mat_b 'uint8)
 (ramp
  (sca-add
   (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
   (var-lookup 't5838))
  1
  16)
 (aligned 1 0))
#<load-data>
Ran bounds analysis for 17 ms
Ran bounds analysis for 10 ms
"Extended success?"
#t
#<load-data>
"Building Expr:"
(vec-cast
 (load
  (buffer mat_b 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
    (var-lookup 't5838))
   1
   16)
  (aligned 1 0))
 'uint32
 16)
"Fold templates"
'(#<load-data>)
here(#<load-data>)

"Replace templates"
'()
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer mat_b 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
    (var-lookup 't5838))
   1
   16)
  (aligned 1 0))
 'uint32
 16)
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-cast
 (load
  (buffer mat_b 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
    (var-lookup 't5838))
   1
   16)
  (aligned 1 0))
 'uint32
 16)
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t
 (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))
optimized x86 0:
  (uint8_t
 (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))))
Ran synthesizer for 1 ms
(unsat)
"Success?"
#f
#<void>
run-x86-synthesizer
halide-expr:
  (vec-cast
 (load
  (buffer mat_b 'uint8)
  (ramp
   (sca-add
    (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
    (var-lookup 't5838))
   1
   16)
  (aligned 1 0))
 'uint32
 16)
template:
  (cast ... #<load-data> 'uint32 #f)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-cast #<abstr-halide-expr> 'uint32 16)
optimized-template:
  (cast ... #<abstr-expr> 'uint32 #f)
optimized Halide 0:
  (uint32_t (zero-extend (app abstr-vals$194 0) (bitvector 32)))
optimized x86 0:
  (uint32_t (zero-extend (app abstr-vals$194 0) (bitvector 32)))
Ran synthesizer for 16 ms
(model)
(vec-cast #<abstr-halide-expr> 'uint32 16)
(cast ... #<load-data> 'uint32 #f)
Ran bounds analysis for 22 ms
Ran bounds analysis for 13 ms
"Extended success?"
#t
(cast ... #<load-data> 'uint32 #f)
"Building Expr:"
(vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
"Fold templates"
(list #<load-data> #<load-data> (cast ... #<load-data> 'uint32 x?$260))
here(#<load-data> #<load-data> #(struct:cast ... #<load-data> uint32 x?$260))

"Replace templates"
(list
 (vs-mpy-add
  ...
  #<load-data>
  (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
  (! x?$389)
  (! x?$390)
  (! x?$391)
  'uint32))
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t
 (bvadd (app sum$1 0) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32))))
optimized x86 0:
  (union [(= 0 idx$196) #(struct:uint32_t (app sum$1 0))] [(= 1 idx$196) #(struct:uint8_t
                                                                         (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))))])
Ran synthesizer for 46 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  #<load-data>
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
optimized-template:
  #<load-data>
optimized Halide 0:
  (uint32_t
 (bvadd (app sum$1 0) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32))))
optimized x86 0:
  (union [(= 0 idx$261) #(struct:uint32_t (app sum$1 0))] [(= 1 idx$261) #(struct:uint8_t
                                                                         (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))))])
Ran synthesizer for 44 ms
(unsat)
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  (cast ... #<load-data> 'uint32 x?$260)
axioms:
  '(#t)
optimized-halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast #<abstr-halide-expr> 'uint32 16))
optimized-template:
  (cast ... #<abstr-expr> 'uint32 x?$260)
optimized Halide 0:
  (uint32_t
 (bvadd (app sum$1 0) (zero-extend (app abstr-vals$392 0) (bitvector 32))))
optimized x86 0:
  (uint32_t (zero-extend (app abstr-vals$392 0) (bitvector 32)))
run-x86-synthesizer
halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$389)
 (! x?$390)
 (! x?$391)
 'uint32)
axioms:
  '()
optimized-halide-expr:
  (vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
optimized-template:
  (vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 (! x?$389)
 (! x?$390)
 (! x?$391)
 'uint32)
optimized Halide 0:
  (uint32_t
 (bvadd (app sum$1 0) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32))))
optimized x86 0:
  (uint32_t
 (ite* (⊢ (&& x?$391 (! (&& (! x?$389) (! x?$391)))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (bvadd (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (ite (bvule (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))) (ite (bvule (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))))))) (ite (bvule (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))))))) (⊢ (|| (&& (! x?$389) (! x?$391)) (&& (! x?$391) (! (&& (! x?$389) (! x?$391))))) (bvlshr (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (bvadd (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (ite (bvule (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32))) (ite (bvule (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))))))) (ite (bvule (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (ite* (⊢ (= 0 idx$326) (app sum$1 0)) (⊢ (= 1 idx$326) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))))) (bvneg (ite (bveq (bv #x00000000 32) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)))))))) (ite x?$389 (bvadd (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))) (bvadd (ite x?$390 (bv #x00000000 32) (bv #x00000001 32)) (ite (bvule (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))) (ite* (⊢ (= 0 idx$325) (app sum$1 0)) (⊢ (= 1 idx$325) (zero-extend (app mat_b (+ (+ t6148 (- sum$1.s1.fk$x)) (+ -16 (ite (<= (+ -1 t6169) column_sums_b.s0.x.x) (+ -1 t6169) column_sums_b.s0.x.x)))) (bitvector 32)))) (bvadd (bv #xffffffff 32) (bvneg (ite x?$390 (bv #x00000000 32) (bv #x00000001 32))))))) (bv #x00000000 32)))))) (bv #x00000001 32)))))
Ran synthesizer for 142 ms
(model
 [idx$325 0]
 [idx$326 1]
 [x?$389 #t]
 [x?$390 #t]
 [x?$391 #t])
(vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))
(vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint32)
Ran bounds analysis for 26 ms
Ran bounds analysis for 17 ms
"Success?"
#t
(vs-mpy-add ... #<load-data> (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8))) #f #f #f 'uint32)

(x86) Successfully found an equivalent IR expression.

(vs-mpy-add
 ...
 #<load-data>
 (list (int8_t (bv #x01 8)) (int8_t (bv #x01 8)))
 #f
 #f
 #f
 'uint32)

Synthesis time: 0 seconds

Synthesizing x86 for:
(vec-add
 (load (buffer sum$1 'uint32) (ramp 0 1 16) (aligned 0 0))
 (vec-cast
  (load
   (buffer mat_b 'uint8)
   (ramp
    (sca-add
     (sca-mul (var-lookup 'mat_b.stride.1) sum$1.s1.fk$x)
     (var-lookup 't5838))
    1
    16)
   (aligned 1 0))
  'uint32
  16))


synthesize-x86 output:
#<void>
#f
