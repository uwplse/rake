#lang rosette/safe

(require
  (only-in racket/base error for)
  rosette/lib/destruct
  rosette/lib/angelic
  rake/arm/ast/types
  rake/arm/ast/interpreter
)

(provide (prefix-out arm: (all-defined-out)))



(define (max-unique-inputs expr)
  (destruct expr

    [(arm:??load _ _ _ _ _) 1]
    [(arm:??shuffle _ _ _) 1]
    [(arm:??swizzle _ _ _ _ _) 1]
    [(arm:reinterpret Vn) (max-unique-inputs Vn)]

    [(arm:abs Vn) (max-unique-inputs Vn)]
    [(arm:add Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:addhn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:addp Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:addv Vn) (max-unique-inputs Vn)]
    [(arm:dup Vn) 1]
    [(arm:dupn Vn) 1]
    [(arm:dupw Vn) 1]
    [(arm:ext16i1 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i10 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i11 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i12 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i13 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i14 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i15 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i2 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i3 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i4 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i5 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i6 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i7 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i8 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext16i9 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext8i1 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext8i2 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext8i3 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext8i4 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext8i5 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext8i6 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ext8i7 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:mla-vs Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:mla-vv Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:mls-vs Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:mls-vv Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:mul-vs Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:mul-vv Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:neg Vn) (max-unique-inputs Vn)]
    [(arm:raddhn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:rshrn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:rsubhn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:saba Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sabal Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sabd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sadalp Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:saddl Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:saddlp Vn) (max-unique-inputs Vn)]
    [(arm:saddlv Vn) (max-unique-inputs Vn)]
    [(arm:saddw Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sdot.v2i32.v8i4 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sdot.v2i32.v8i8 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sdot.v4i32.v16i4 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sdot.v4i32.v16i8 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:shadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:shl Vn) (max-unique-inputs Vn)]
    [(arm:shll Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:shrn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:shsub Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:smax Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:smaxp Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:smaxv Vn) (max-unique-inputs Vn)]
    [(arm:smin Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sminp Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sminv Vn) (max-unique-inputs Vn)]
    [(arm:smlal-vs Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:smlal-vv Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:smlsl-vs Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:smlsl-vv Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:smull-vs Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:smull-vv Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqabs Vn) (max-unique-inputs Vn)]
    [(arm:sqadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqdmlal-vs Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqdmlal-vv Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqdmlsl-vs Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqdmlsl-vv Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqdmulh Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqdmull-vs Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqdmull-vv Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqneg Vn) (max-unique-inputs Vn)]
    [(arm:sqrdmulh Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqrshl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqrshrn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqrshrun Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqshl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqshlu Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqshrn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqshrun Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:sqsub Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sqxtn Vn) (max-unique-inputs Vn)]
    [(arm:sqxtun Vn) (max-unique-inputs Vn)]
    [(arm:srhadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:srhsub Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:srshl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sshl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sshll Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ssubl Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ssubw Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sub Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:subhn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:suqadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:sxtl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:trn1 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:trn2 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uabd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uadalp Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uaddl Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uaddlp Vn) (max-unique-inputs Vn)]
    [(arm:uaddlv Vn) (max-unique-inputs Vn)]
    [(arm:uaddw Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:udot.v2i32.v8i4 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:udot.v2i32.v8i8 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:udot.v4i32.v16i4 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:udot.v4i32.v16i8 Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uhadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uhsub Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:umax Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:umaxp Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:umaxv Vn) (max-unique-inputs Vn)]
    [(arm:umin Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uminp Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uminv Vn) (max-unique-inputs Vn)]
    [(arm:umlal-vs Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:umlal-vv Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:umlsl-vs Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:umlsl-vv Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:umull-vs Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:umull-vv Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uqadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uqrshl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uqrshrn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:uqshl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uqshrn Vd Vn Vm Vb) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm) (max-unique-inputs Vb))]
    [(arm:uqsub Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uqxtn Vn) (max-unique-inputs Vn)]
    [(arm:urhadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:urhsub Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:urshl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ushl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:ushll Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:usqadd Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:usubl Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:usubw Vd Vn Vm) (+ (max-unique-inputs Vd) (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uxtl Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uzip1 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:uzip2 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:vabdl_i16x4 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:vabdl_i32x2 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:vabdl_i8x8 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:vabdl_u16x4 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:vabdl_u32x2 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:vabdl_u8x8 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:xtn Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:zip1 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]
    [(arm:zip2 Vn Vm) (+ (max-unique-inputs Vn) (max-unique-inputs Vm))]


    [_ (cond
        ;; TODO: What if the scalar was the result of a reduction?
        [(eq? 'uint1 expr) 0]
        [(eq? 'uint8 expr) 0]
        [(eq? 'int8 expr) 0]
        [(eq? 'uint16 expr) 0]
        [(eq? 'int16 expr) 0]
        [(eq? 'uint32 expr) 0]
        [(eq? 'int32 expr) 0]
        [(eq? 'uint64 expr) 0]
        [(eq? 'int64 expr) 0]
        [else (error (format "max-unique-inputs failed to recognize ~a" expr))])]))

(define (get-interpreted-type arm-expr)
  (destruct arm-expr
    [(arm:concat-tiles exprs)
      (let ([types (map get-interpreted-type exprs)])
        (cond
          ; TODO: this is very jank and needs to be fixed
          [(and (eq? (length types) 2) (eq? 'i16x8 (list-ref types 0)) (eq? 'i16x8 (list-ref types 1))) 'i16x16]
          [(and (eq? (length types) 2) (eq? 'i16x4 (list-ref types 0)) (eq? 'i16x4 (list-ref types 1))) 'i16x8]
          [else (error "get-interpreted-type on concat-tiles\n\t~a\n\t~a" types arm-expr)]))]
    [_ (arm:type (arm:interpret arm-expr))]))

(define (get-interpreted-elem-type arm-expr)
  (destruct arm-expr
    [(arm:concat-tiles exprs) (error "Fail on get-interpreted-elem-type for concat-tiles ~a\n" arm-expr)]
    [_ (arm:elem-type (arm:interpret arm-expr))]))
